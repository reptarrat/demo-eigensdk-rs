{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "StrategyWhitelisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "UpdatedThirdPartyTransfersForbidden",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "addShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToWhitelist",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "thirdPartyTransfersForbiddenValues",
          "type": "bool[]"
        }
      ],
      "name": "addStrategiesToDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        }
      ],
      "name": "calculateWithdrawalRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositIntoStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "depositIntoStrategyWithSignature",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodManager",
      "outputs": [
        {
          "internalType": "contract IEigenPodManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getDeposits",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        }
      ],
      "name": "migrateQueuedWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "removeShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToRemoveFromWhitelist",
          "type": "address[]"
        }
      ],
      "name": "removeStrategiesFromDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "stakerStrategyListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "stakerStrategyShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyWhitelister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "thirdPartyTransfersForbidden",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawSharesAsTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addShares(address,address,address,uint256)": "c4623ea1",
    "addStrategiesToDepositWhitelist(address[],bool[])": "df5b3547",
    "calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))": "b43b514b",
    "delegation()": "df5cf723",
    "depositIntoStrategy(address,address,uint256)": "e7a050aa",
    "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": "32e89ace",
    "eigenPodManager()": "4665bcda",
    "getDeposits(address)": "94f649dd",
    "migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))": "cd293f6f",
    "removeShares(address,address,uint256)": "8c80d4e5",
    "removeStrategiesFromDepositWhitelist(address[])": "b5d8b5b8",
    "slasher()": "b1344271",
    "stakerStrategyListLength(address)": "8b8aac3c",
    "stakerStrategyShares(address,address)": "7a7e0d92",
    "strategyWhitelister()": "967fc0d2",
    "thirdPartyTransfersForbidden(address)": "9b4da03d",
    "withdrawSharesAsTokens(address,address,uint256,address)": "c608c7f3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"UpdatedThirdPartyTransfersForbidden\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToWhitelist\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"thirdPartyTransfersForbiddenValues\",\"type\":\"bool[]\"}],\"name\":\"addStrategiesToDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositIntoStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositIntoStrategyWithSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"migrateQueuedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToRemoveFromWhitelist\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerStrategyListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"stakerStrategyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyWhitelister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"thirdPartyTransfersForbidden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Deposit(address,address,address,uint256)\":{\"params\":{\"shares\":\"Is the number of new shares `staker` has been granted in `strategy`.\",\"staker\":\"Is the staker who is depositing funds into EigenLayer.\",\"strategy\":\"Is the strategy that `staker` has deposited into.\",\"token\":\"Is the token that `staker` deposited.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"params\":{\"strategiesToWhitelist\":\"Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\",\"thirdPartyTransfersForbiddenValues\":\"bool values to set `thirdPartyTransfersForbidden` to for each strategy\"}},\"depositIntoStrategy(address,address,uint256)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen). WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"expiry\":\"the timestamp at which the signature expires\",\"signature\":\"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract\",\"staker\":\"the staker that the deposited assets will be credited to\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"getDeposits(address)\":{\"returns\":{\"_0\":\"(staker's strategies, shares in these strategies)\"}},\"removeStrategiesFromDepositWhitelist(address[])\":{\"params\":{\"strategiesToRemoveFromWhitelist\":\"Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)\"}}},\"title\":\"Interface for the primary entrypoint for funds into EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256)\":{\"notice\":\"Emitted when a new deposit occurs on behalf of `staker`.\"},\"StrategyAddedToDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is added to the approved list of strategies for deposit\"},\"StrategyRemovedFromDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is removed from the approved list of strategies for deposit\"},\"StrategyWhitelisterChanged(address,address)\":{\"notice\":\"Emitted when the `strategyWhitelister` is changed\"},\"UpdatedThirdPartyTransfersForbidden(address,bool)\":{\"notice\":\"Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue\"},\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"notice\":\"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\"},\"delegation()\":{\"notice\":\"Returns the single, central Delegation contract of EigenLayer\"},\"depositIntoStrategy(address,address,uint256)\":{\"notice\":\"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\"},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"notice\":\"Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another.\"},\"eigenPodManager()\":{\"notice\":\"Returns the EigenPodManager contract of EigenLayer\"},\"getDeposits(address)\":{\"notice\":\"Get all details on the staker's deposits and corresponding shares\"},\"removeShares(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue\"},\"removeStrategiesFromDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\"},\"slasher()\":{\"notice\":\"Returns the single, central Slasher contract of EigenLayer\"},\"stakerStrategyListLength(address)\":{\"notice\":\"Simple getter function that returns `stakerStrategyList[staker].length`.\"},\"stakerStrategyShares(address,address)\":{\"notice\":\"Returns the current shares of `user` in `strategy`\"},\"strategyWhitelister()\":{\"notice\":\"Returns the address of the `strategyWhitelister`\"},\"thirdPartyTransfersForbidden(address)\":{\"notice\":\"Returns bool for whether or not `strategy` enables credit transfers. i.e enabling depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker.\"},\"withdrawSharesAsTokens(address,address,uint256,address)\":{\"notice\":\"Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSee the `StrategyManager` contract itself for implementation details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":\"IStrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWhitelisterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedThirdPartyTransfersForbidden",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToWhitelist",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "thirdPartyTransfersForbiddenValues",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToDepositWhitelist"
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategyWithSignature",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposits",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateQueuedWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToRemoveFromWhitelist",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromDepositWhitelist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyListLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWhitelister",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "thirdPartyTransfersForbidden",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawSharesAsTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToDepositWhitelist(address[],bool[])": {
            "params": {
              "strategiesToWhitelist": "Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)",
              "thirdPartyTransfersForbiddenValues": "bool values to set `thirdPartyTransfersForbidden` to for each strategy"
            }
          },
          "depositIntoStrategy(address,address,uint256)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen). WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the staker",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            },
            "returns": {
              "shares": "The amount of new shares in the `strategy` created as part of the action."
            }
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the staker",
              "expiry": "the timestamp at which the signature expires",
              "signature": "is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract",
              "staker": "the staker that the deposited assets will be credited to",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            },
            "returns": {
              "shares": "The amount of new shares in the `strategy` created as part of the action."
            }
          },
          "getDeposits(address)": {
            "returns": {
              "_0": "(staker's strategies, shares in these strategies)"
            }
          },
          "removeStrategiesFromDepositWhitelist(address[])": {
            "params": {
              "strategiesToRemoveFromWhitelist": "Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addShares(address,address,address,uint256)": {
            "notice": "Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"
          },
          "addStrategiesToDepositWhitelist(address[],bool[])": {
            "notice": "Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into"
          },
          "delegation()": {
            "notice": "Returns the single, central Delegation contract of EigenLayer"
          },
          "depositIntoStrategy(address,address,uint256)": {
            "notice": "Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`"
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "notice": "Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another."
          },
          "eigenPodManager()": {
            "notice": "Returns the EigenPodManager contract of EigenLayer"
          },
          "getDeposits(address)": {
            "notice": "Get all details on the staker's deposits and corresponding shares"
          },
          "removeShares(address,address,uint256)": {
            "notice": "Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"
          },
          "removeStrategiesFromDepositWhitelist(address[])": {
            "notice": "Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into"
          },
          "slasher()": {
            "notice": "Returns the single, central Slasher contract of EigenLayer"
          },
          "stakerStrategyListLength(address)": {
            "notice": "Simple getter function that returns `stakerStrategyList[staker].length`."
          },
          "stakerStrategyShares(address,address)": {
            "notice": "Returns the current shares of `user` in `strategy`"
          },
          "strategyWhitelister()": {
            "notice": "Returns the address of the `strategyWhitelister`"
          },
          "thirdPartyTransfersForbidden(address)": {
            "notice": "Returns bool for whether or not `strategy` enables credit transfers. i.e enabling depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker."
          },
          "withdrawSharesAsTokens(address,address,uint256,address)": {
            "notice": "Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": "IStrategyManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol",
    "id": 8384,
    "exportedSymbols": {
      "BeaconChainProofs": [
        9143
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Merkle": [
        9899
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:9087:20",
    "nodes": [
      {
        "id": 8137,
        "nodeType": "PragmaDirective",
        "src": "37:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 8138,
        "nodeType": "ImportDirective",
        "src": "63:25:20",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol",
        "file": "./IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8384,
        "sourceUnit": 8136,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8139,
        "nodeType": "ImportDirective",
        "src": "89:24:20",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol",
        "file": "./ISlasher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8384,
        "sourceUnit": 8034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8140,
        "nodeType": "ImportDirective",
        "src": "114:34:20",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol",
        "file": "./IDelegationManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8384,
        "sourceUnit": 7103,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8141,
        "nodeType": "ImportDirective",
        "src": "149:32:20",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol",
        "file": "./IEigenPodManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8384,
        "sourceUnit": 7677,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8383,
        "nodeType": "ContractDefinition",
        "src": "456:8667:20",
        "nodes": [
          {
            "id": 8155,
            "nodeType": "EventDefinition",
            "src": "874:80:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 8143,
              "nodeType": "StructuredDocumentation",
              "src": "489:380:20",
              "text": " @notice Emitted when a new deposit occurs on behalf of `staker`.\n @param staker Is the staker who is depositing funds into EigenLayer.\n @param strategy Is the strategy that `staker` has deposited into.\n @param token Is the token that `staker` deposited.\n @param shares Is the number of new shares `staker` has been granted in `strategy`."
            },
            "name": "Deposit",
            "nameLocation": "880:7:20",
            "parameters": {
              "id": 8154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "896:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8155,
                  "src": "888:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "911:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8155,
                  "src": "904:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8146,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "904:6:20"
                    },
                    "referencedDeclaration": 59726,
                    "src": "904:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "928:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8155,
                  "src": "918:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8149,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "918:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "918:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "946:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8155,
                  "src": "938:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:66:20"
            }
          },
          {
            "id": 8163,
            "nodeType": "EventDefinition",
            "src": "1069:74:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 8156,
              "nodeType": "StructuredDocumentation",
              "src": "960:104:20",
              "text": "@notice Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner"
            },
            "name": "UpdatedThirdPartyTransfersForbidden",
            "nameLocation": "1075:35:20",
            "parameters": {
              "id": 8162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1121:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8163,
                  "src": "1111:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8157,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "1111:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "1111:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1136:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8163,
                  "src": "1131:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:32:20"
            }
          },
          {
            "id": 8170,
            "nodeType": "EventDefinition",
            "src": "1215:78:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 8164,
              "nodeType": "StructuredDocumentation",
              "src": "1149:61:20",
              "text": "@notice Emitted when the `strategyWhitelister` is changed"
            },
            "name": "StrategyWhitelisterChanged",
            "nameLocation": "1221:26:20",
            "parameters": {
              "id": 8169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAddress",
                  "nameLocation": "1256:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "1248:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1281:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "1273:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:45:20"
            }
          },
          {
            "id": 8176,
            "nodeType": "EventDefinition",
            "src": "1395:58:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 8171,
              "nodeType": "StructuredDocumentation",
              "src": "1299:91:20",
              "text": "@notice Emitted when a strategy is added to the approved list of strategies for deposit"
            },
            "name": "StrategyAddedToDepositWhitelist",
            "nameLocation": "1401:31:20",
            "parameters": {
              "id": 8175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1443:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8176,
                  "src": "1433:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8172,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "1433:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "1433:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:20:20"
            }
          },
          {
            "id": 8182,
            "nodeType": "EventDefinition",
            "src": "1559:62:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 8177,
              "nodeType": "StructuredDocumentation",
              "src": "1459:95:20",
              "text": "@notice Emitted when a strategy is removed from the approved list of strategies for deposit"
            },
            "name": "StrategyRemovedFromDepositWhitelist",
            "nameLocation": "1565:35:20",
            "parameters": {
              "id": 8181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8180,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1611:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8182,
                  "src": "1601:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8179,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8178,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "1601:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "1601:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:20:20"
            }
          },
          {
            "id": 8196,
            "nodeType": "FunctionDefinition",
            "src": "2612:113:20",
            "nodes": [],
            "documentation": {
              "id": 8183,
              "nodeType": "StructuredDocumentation",
              "src": "1627:980:20",
              "text": " @notice Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).\n WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy."
            },
            "functionSelector": "e7a050aa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositIntoStrategy",
            "nameLocation": "2621:19:20",
            "parameters": {
              "id": 8192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8186,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2651:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8196,
                  "src": "2641:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8184,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "2641:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "2641:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8189,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2668:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8196,
                  "src": "2661:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8187,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "2661:6:20"
                    },
                    "referencedDeclaration": 59726,
                    "src": "2661:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8191,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2683:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8196,
                  "src": "2675:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2640:50:20"
            },
            "returnParameters": {
              "id": 8195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8194,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2717:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8196,
                  "src": "2709:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:16:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8216,
            "nodeType": "FunctionDefinition",
            "src": "4434:236:20",
            "nodes": [],
            "documentation": {
              "id": 8197,
              "nodeType": "StructuredDocumentation",
              "src": "2731:1698:20",
              "text": " @notice Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`,\n who must sign off on the action.\n Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed\n purely to help one address deposit 'for' another.\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @param staker the staker that the deposited assets will be credited to\n @param expiry the timestamp at which the signature expires\n @param signature is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward\n following EIP-1271 if the `staker` is a contract\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev A signature is required for this function to eliminate the possibility of griefing attacks, specifically those\n targeting stakers who may be attempting to undelegate.\n @dev Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy\n  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy"
            },
            "functionSelector": "32e89ace",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositIntoStrategyWithSignature",
            "nameLocation": "4443:32:20",
            "parameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4495:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4485:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8198,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "4485:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "4485:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8203,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4520:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4513:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8202,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8201,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "4513:6:20"
                    },
                    "referencedDeclaration": 59726,
                    "src": "4513:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8205,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4543:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4535:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4535:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8207,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "4567:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4559:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8209,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "4591:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4583:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4583:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8211,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4620:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4607:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8210,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4475:160:20"
            },
            "returnParameters": {
              "id": 8215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8214,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4662:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8216,
                  "src": "4654:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4654:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4653:16:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8227,
            "nodeType": "FunctionDefinition",
            "src": "4812:83:20",
            "nodes": [],
            "documentation": {
              "id": 8217,
              "nodeType": "StructuredDocumentation",
              "src": "4676:131:20",
              "text": "@notice Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"
            },
            "functionSelector": "8c80d4e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeShares",
            "nameLocation": "4821:12:20",
            "parameters": {
              "id": 8225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8219,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "4842:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8227,
                  "src": "4834:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8222,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4860:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8227,
                  "src": "4850:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8220,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "4850:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "4850:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8224,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4878:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8227,
                  "src": "4870:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4833:52:20"
            },
            "returnParameters": {
              "id": 8226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4894:0:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8241,
            "nodeType": "FunctionDefinition",
            "src": "5023:94:20",
            "nodes": [],
            "documentation": {
              "id": 8228,
              "nodeType": "StructuredDocumentation",
              "src": "4901:117:20",
              "text": "@notice Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"
            },
            "functionSelector": "c4623ea1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShares",
            "nameLocation": "5032:9:20",
            "parameters": {
              "id": 8239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8230,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5050:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8241,
                  "src": "5042:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8233,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5065:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8241,
                  "src": "5058:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8232,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8231,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "5058:6:20"
                    },
                    "referencedDeclaration": 59726,
                    "src": "5058:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8236,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5082:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8241,
                  "src": "5072:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8234,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "5072:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "5072:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8238,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5100:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8241,
                  "src": "5092:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5092:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5041:66:20"
            },
            "returnParameters": {
              "id": 8240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5116:0:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8255,
            "nodeType": "FunctionDefinition",
            "src": "5240:110:20",
            "nodes": [],
            "documentation": {
              "id": 8242,
              "nodeType": "StructuredDocumentation",
              "src": "5127:108:20",
              "text": "@notice Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"
            },
            "functionSelector": "c608c7f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawSharesAsTokens",
            "nameLocation": "5249:22:20",
            "parameters": {
              "id": 8253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8244,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5280:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8255,
                  "src": "5272:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8247,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5301:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8255,
                  "src": "5291:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8245,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "5291:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "5291:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8249,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5319:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8255,
                  "src": "5311:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8252,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5334:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8255,
                  "src": "5327:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8250,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "5327:6:20"
                    },
                    "referencedDeclaration": 59726,
                    "src": "5327:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5271:69:20"
            },
            "returnParameters": {
              "id": 8254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5349:0:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8266,
            "nodeType": "FunctionDefinition",
            "src": "5423:103:20",
            "nodes": [],
            "documentation": {
              "id": 8256,
              "nodeType": "StructuredDocumentation",
              "src": "5356:62:20",
              "text": "@notice Returns the current shares of `user` in `strategy`"
            },
            "functionSelector": "7a7e0d92",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakerStrategyShares",
            "nameLocation": "5432:20:20",
            "parameters": {
              "id": 8262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8258,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5461:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8266,
                  "src": "5453:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5453:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8261,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5477:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8266,
                  "src": "5467:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8260,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8259,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "5467:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "5467:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5452:34:20"
            },
            "returnParameters": {
              "id": 8265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8264,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5518:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8266,
                  "src": "5510:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5510:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5509:16:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8279,
            "nodeType": "FunctionDefinition",
            "src": "5694:98:20",
            "nodes": [],
            "documentation": {
              "id": 8267,
              "nodeType": "StructuredDocumentation",
              "src": "5532:157:20",
              "text": " @notice Get all details on the staker's deposits and corresponding shares\n @return (staker's strategies, shares in these strategies)"
            },
            "functionSelector": "94f649dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposits",
            "nameLocation": "5703:11:20",
            "parameters": {
              "id": 8270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8269,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5723:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8279,
                  "src": "5715:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5715:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5714:16:20"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8279,
                  "src": "5754:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8272,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 8271,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "5754:9:20"
                      },
                      "referencedDeclaration": 8135,
                      "src": "5754:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 8273,
                    "nodeType": "ArrayTypeName",
                    "src": "5754:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8277,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8279,
                  "src": "5774:16:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8275,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5774:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8276,
                    "nodeType": "ArrayTypeName",
                    "src": "5774:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5753:38:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8287,
            "nodeType": "FunctionDefinition",
            "src": "5887:82:20",
            "nodes": [],
            "documentation": {
              "id": 8280,
              "nodeType": "StructuredDocumentation",
              "src": "5798:84:20",
              "text": "@notice Simple getter function that returns `stakerStrategyList[staker].length`."
            },
            "functionSelector": "8b8aac3c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakerStrategyListLength",
            "nameLocation": "5896:24:20",
            "parameters": {
              "id": 8283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8282,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5929:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8287,
                  "src": "5921:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5921:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5920:16:20"
            },
            "returnParameters": {
              "id": 8286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8287,
                  "src": "5960:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5960:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5959:9:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8298,
            "nodeType": "FunctionDefinition",
            "src": "6389:168:20",
            "nodes": [],
            "documentation": {
              "id": 8288,
              "nodeType": "StructuredDocumentation",
              "src": "5975:409:20",
              "text": " @notice Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToWhitelist Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\n @param thirdPartyTransfersForbiddenValues bool values to set `thirdPartyTransfersForbidden` to for each strategy"
            },
            "functionSelector": "df5b3547",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addStrategiesToDepositWhitelist",
            "nameLocation": "6398:31:20",
            "parameters": {
              "id": 8296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8292,
                  "mutability": "mutable",
                  "name": "strategiesToWhitelist",
                  "nameLocation": "6460:21:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8298,
                  "src": "6439:42:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8290,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 8289,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "6439:9:20"
                      },
                      "referencedDeclaration": 8135,
                      "src": "6439:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 8291,
                    "nodeType": "ArrayTypeName",
                    "src": "6439:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8295,
                  "mutability": "mutable",
                  "name": "thirdPartyTransfersForbiddenValues",
                  "nameLocation": "6507:34:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8298,
                  "src": "6491:50:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8293,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6491:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 8294,
                    "nodeType": "ArrayTypeName",
                    "src": "6491:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6429:118:20"
            },
            "returnParameters": {
              "id": 8297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6556:0:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8306,
            "nodeType": "FunctionDefinition",
            "src": "6863:109:20",
            "nodes": [],
            "documentation": {
              "id": 8299,
              "nodeType": "StructuredDocumentation",
              "src": "6563:295:20",
              "text": " @notice Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToRemoveFromWhitelist Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"
            },
            "functionSelector": "b5d8b5b8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeStrategiesFromDepositWhitelist",
            "nameLocation": "6872:36:20",
            "parameters": {
              "id": 8304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8303,
                  "mutability": "mutable",
                  "name": "strategiesToRemoveFromWhitelist",
                  "nameLocation": "6930:31:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "6909:52:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8301,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 8300,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "6909:9:20"
                      },
                      "referencedDeclaration": 8135,
                      "src": "6909:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 8302,
                    "nodeType": "ArrayTypeName",
                    "src": "6909:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6908:54:20"
            },
            "returnParameters": {
              "id": 8305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6971:0:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8313,
            "nodeType": "FunctionDefinition",
            "src": "7056:65:20",
            "nodes": [],
            "documentation": {
              "id": 8307,
              "nodeType": "StructuredDocumentation",
              "src": "6978:73:20",
              "text": "@notice Returns the single, central Delegation contract of EigenLayer"
            },
            "functionSelector": "df5cf723",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegation",
            "nameLocation": "7065:10:20",
            "parameters": {
              "id": 8308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7075:2:20"
            },
            "returnParameters": {
              "id": 8312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8313,
                  "src": "7101:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 8310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8309,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "7101:18:20"
                    },
                    "referencedDeclaration": 7102,
                    "src": "7101:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7100:20:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8320,
            "nodeType": "FunctionDefinition",
            "src": "7202:52:20",
            "nodes": [],
            "documentation": {
              "id": 8314,
              "nodeType": "StructuredDocumentation",
              "src": "7127:70:20",
              "text": "@notice Returns the single, central Slasher contract of EigenLayer"
            },
            "functionSelector": "b1344271",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "slasher",
            "nameLocation": "7211:7:20",
            "parameters": {
              "id": 8315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7218:2:20"
            },
            "returnParameters": {
              "id": 8319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "7244:8:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$8033",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 8317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8316,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8033,
                      "src": "7244:8:20"
                    },
                    "referencedDeclaration": 8033,
                    "src": "7244:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7243:10:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8327,
            "nodeType": "FunctionDefinition",
            "src": "7327:68:20",
            "nodes": [],
            "documentation": {
              "id": 8321,
              "nodeType": "StructuredDocumentation",
              "src": "7260:62:20",
              "text": "@notice Returns the EigenPodManager contract of EigenLayer"
            },
            "functionSelector": "4665bcda",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "eigenPodManager",
            "nameLocation": "7336:15:20",
            "parameters": {
              "id": 8322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7351:2:20"
            },
            "returnParameters": {
              "id": 8326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8327,
                  "src": "7377:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                    "typeString": "contract IEigenPodManager"
                  },
                  "typeName": {
                    "id": 8324,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8323,
                      "name": "IEigenPodManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7676,
                      "src": "7377:16:20"
                    },
                    "referencedDeclaration": 7676,
                    "src": "7377:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7376:18:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8333,
            "nodeType": "FunctionDefinition",
            "src": "7466:63:20",
            "nodes": [],
            "documentation": {
              "id": 8328,
              "nodeType": "StructuredDocumentation",
              "src": "7401:60:20",
              "text": "@notice Returns the address of the `strategyWhitelister`"
            },
            "functionSelector": "967fc0d2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyWhitelister",
            "nameLocation": "7475:19:20",
            "parameters": {
              "id": 8329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7494:2:20"
            },
            "returnParameters": {
              "id": 8332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8333,
                  "src": "7520:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7519:9:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8342,
            "nodeType": "FunctionDefinition",
            "src": "7758:87:20",
            "nodes": [],
            "documentation": {
              "id": 8334,
              "nodeType": "StructuredDocumentation",
              "src": "7535:218:20",
              "text": " @notice Returns bool for whether or not `strategy` enables credit transfers. i.e enabling\n depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker."
            },
            "functionSelector": "9b4da03d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "thirdPartyTransfersForbidden",
            "nameLocation": "7767:28:20",
            "parameters": {
              "id": 8338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8337,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "7806:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "7796:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 8336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8335,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "7796:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "7796:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7795:20:20"
            },
            "returnParameters": {
              "id": 8341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "7839:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7839:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7838:6:20"
            },
            "scope": 8383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8347,
            "nodeType": "StructDefinition",
            "src": "7998:100:20",
            "nodes": [],
            "canonicalName": "IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
            "members": [
              {
                "constant": false,
                "id": 8344,
                "mutability": "mutable",
                "name": "withdrawer",
                "nameLocation": "8059:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 8347,
                "src": "8051:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8343,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8051:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8346,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "8086:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 8347,
                "src": "8079:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 8345,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "8079:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeprecatedStruct_WithdrawerAndNonce",
            "nameLocation": "8005:35:20",
            "scope": 8383,
            "visibility": "public"
          },
          {
            "id": 8364,
            "nodeType": "StructDefinition",
            "src": "8595:265:20",
            "nodes": [],
            "canonicalName": "IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
            "members": [
              {
                "constant": false,
                "id": 8351,
                "mutability": "mutable",
                "name": "strategies",
                "nameLocation": "8658:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8646:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                  "typeString": "contract IStrategy[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8349,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8348,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "8646:9:20"
                    },
                    "referencedDeclaration": 8135,
                    "src": "8646:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 8350,
                  "nodeType": "ArrayTypeName",
                  "src": "8646:11:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                    "typeString": "contract IStrategy[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8354,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "8688:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8678:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8678:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8353,
                  "nodeType": "ArrayTypeName",
                  "src": "8678:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8356,
                "mutability": "mutable",
                "name": "staker",
                "nameLocation": "8712:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8704:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8355,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8704:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8359,
                "mutability": "mutable",
                "name": "withdrawerAndNonce",
                "nameLocation": "8764:18:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8728:54:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DeprecatedStruct_WithdrawerAndNonce_$8347_storage_ptr",
                  "typeString": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce"
                },
                "typeName": {
                  "id": 8358,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8357,
                    "name": "DeprecatedStruct_WithdrawerAndNonce",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8347,
                    "src": "8728:35:20"
                  },
                  "referencedDeclaration": 8347,
                  "src": "8728:35:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeprecatedStruct_WithdrawerAndNonce_$8347_storage_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8361,
                "mutability": "mutable",
                "name": "withdrawalStartBlock",
                "nameLocation": "8799:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8792:27:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 8360,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "8792:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8363,
                "mutability": "mutable",
                "name": "delegatedAddress",
                "nameLocation": "8837:16:20",
                "nodeType": "VariableDeclaration",
                "scope": 8364,
                "src": "8829:24:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8362,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8829:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeprecatedStruct_QueuedWithdrawal",
            "nameLocation": "8602:33:20",
            "scope": 8383,
            "visibility": "public"
          },
          {
            "id": 8374,
            "nodeType": "FunctionDefinition",
            "src": "8866:125:20",
            "nodes": [],
            "functionSelector": "cd293f6f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrateQueuedWithdrawal",
            "nameLocation": "8875:23:20",
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8367,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "8940:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "8899:57:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 8366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8365,
                      "name": "DeprecatedStruct_QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8364,
                      "src": "8899:33:20"
                    },
                    "referencedDeclaration": 8364,
                    "src": "8899:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8898:59:20"
            },
            "returnParameters": {
              "id": 8373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "8976:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8976:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8374,
                  "src": "8982:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8982:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8975:15:20"
            },
            "scope": 8383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8382,
            "nodeType": "FunctionDefinition",
            "src": "8997:124:20",
            "nodes": [],
            "functionSelector": "b43b514b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawalRoot",
            "nameLocation": "9006:23:20",
            "parameters": {
              "id": 8378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8377,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "9071:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 8382,
                  "src": "9030:57:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 8376,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8375,
                      "name": "DeprecatedStruct_QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8364,
                      "src": "9030:33:20"
                    },
                    "referencedDeclaration": 8364,
                    "src": "9030:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9029:59:20"
            },
            "returnParameters": {
              "id": 8381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8382,
                  "src": "9112:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8379,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9112:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9111:9:20"
            },
            "scope": 8383,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStrategyManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8142,
          "nodeType": "StructuredDocumentation",
          "src": "183:272:20",
          "text": " @title Interface for the primary entrypoint for funds into EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice See the `StrategyManager` contract itself for implementation details."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          8383
        ],
        "name": "IStrategyManager",
        "nameLocation": "466:16:20",
        "scope": 8384,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 20
}