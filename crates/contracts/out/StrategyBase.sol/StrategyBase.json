{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "_strategyManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newShares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "explanation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_underlyingToken",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyManager",
      "outputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToSharesView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051620018b3380380620018b38339810160408190526100319161010c565b6001600160a01b03811660805261004661004c565b5061013c565b600054610100900460ff16156100b85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101561010a576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60006020828403121561011e57600080fd5b81516001600160a01b038116811461013557600080fd5b9392505050565b6080516117466200016d6000396000818161019901528181610570015281816109c70152610a9201526117466000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635c975abb116100b8578063ab5921e11161007c578063ab5921e11461029c578063ce7c2ac2146102b1578063d9caed12146102c4578063e3dae51c146102d7578063f3e73875146102ea578063fabc1cbc146102fd57600080fd5b80635c975abb146102425780637a8b26371461024a578063886f11951461025d5780638c871019146102765780638f6a62401461028957600080fd5b806347e7ef24116100ff57806347e7ef24146101d2578063485cc955146101e5578063553ca5f8146101f8578063595c6a671461020b5780635ac86ab71461021357600080fd5b806310d67a2f1461013c578063136439dd146101515780632495a5991461016457806339b70e38146101945780633a98ef39146101bb575b600080fd5b61014f61014a3660046113d5565b610310565b005b61014f61015f3660046113f2565b6103cc565b603254610177906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101777f000000000000000000000000000000000000000000000000000000000000000081565b6101c460335481565b60405190815260200161018b565b6101c46101e036600461140b565b610510565b61014f6101f3366004611437565b610726565b6101c46102063660046113d5565b61083b565b61014f61084f565b610232610221366004611470565b6001805460ff9092161b9081161490565b604051901515815260200161018b565b6001546101c4565b6101c46102583660046113f2565b61091b565b600054610177906201000090046001600160a01b031681565b6101c46102843660046113f2565b610966565b6101c46102973660046113d5565b610971565b6102a461097f565b60405161018b91906114c3565b6101c46102bf3660046113d5565b61099f565b61014f6102d23660046114f6565b610a34565b6101c46102e53660046113f2565b610c81565b6101c46102f83660046113f2565b610cba565b61014f61030b3660046113f2565b610cc5565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103879190611537565b6001600160a01b0316336001600160a01b0316146103c05760405162461bcd60e51b81526004016103b790611554565b60405180910390fd5b6103c981610e21565b50565b60005460405163237dfb4760e11b8152336004820152620100009091046001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061159e565b6104595760405162461bcd60e51b81526004016103b7906115c0565b600154818116146104d25760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103b7565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b600180546000918291811614156105655760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103b7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105dd5760405162461bcd60e51b815260206004820181905260248201527f5374726174656779426173652e6f6e6c7953747261746567794d616e6167657260448201526064016103b7565b6032546001600160a01b038581169116146106595760405162461bcd60e51b815260206004820152603660248201527f5374726174656779426173652e6465706f7369743a2043616e206f6e6c79206460448201527532b837b9b4ba103ab73232b9363cb4b733aa37b5b2b760511b60648201526084016103b7565b603354600061066a6103e88361161e565b905060006103e8610679610f2a565b610683919061161e565b905060006106918783611636565b90508061069e848961164d565b6106a8919061166c565b95508561070e5760405162461bcd60e51b815260206004820152602e60248201527f5374726174656779426173652e6465706f7369743a206e65775368617265732060448201526d63616e6e6f74206265207a65726f60901b60648201526084016103b7565b610718868561161e565b603355505050505092915050565b600054610100900460ff16158080156107465750600054600160ff909116105b806107605750303b158015610760575060005460ff166001145b6107c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b6000805460ff1916600117905580156107e6576000805461ff0019166101001790555b6107f08383610f9c565b8015610836576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006108496102588361099f565b92915050565b60005460405163237dfb4760e11b8152336004820152620100009091046001600160a01b0316906346fbf68e90602401602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c0919061159e565b6108dc5760405162461bcd60e51b81526004016103b7906115c0565b600019600181905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000806103e860335461092e919061161e565b905060006103e861093d610f2a565b610947919061161e565b905081610954858361164d565b61095e919061166c565b949350505050565b600061084982610c81565b60006108496102f88361099f565b60606040518060800160405280604d81526020016116c4604d9139905090565b604051633d3f06c960e11b81526001600160a01b0382811660048301523060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690637a7e0d9290604401602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610849919061168e565b6001805460029081161415610a875760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103b7565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aff5760405162461bcd60e51b815260206004820181905260248201527f5374726174656779426173652e6f6e6c7953747261746567794d616e6167657260448201526064016103b7565b6032546001600160a01b03848116911614610b825760405162461bcd60e51b815260206004820152603b60248201527f5374726174656779426173652e77697468647261773a2043616e206f6e6c792060448201527f77697468647261772074686520737472617465677920746f6b656e000000000060648201526084016103b7565b60335480831115610c115760405162461bcd60e51b815260206004820152604d60248201527f5374726174656779426173652e77697468647261773a20616d6f756e7453686160448201527f726573206d757374206265206c657373207468616e206f7220657175616c207460648201526c6f20746f74616c53686172657360981b608482015260a4016103b7565b6000610c1f6103e88361161e565b905060006103e8610c2e610f2a565b610c38919061161e565b9050600082610c47878461164d565b610c51919061166c565b9050610c5d8685611636565b603355603254610c77906001600160a01b0316898361102d565b5050505050505050565b6000806103e8603354610c94919061161e565b905060006103e8610ca3610f2a565b610cad919061161e565b905080610954838661164d565b60006108498261091b565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3c9190611537565b6001600160a01b0316336001600160a01b031614610d6c5760405162461bcd60e51b81526004016103b790611554565b600154198119600154191614610dea5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103b7565b600181905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610505565b6001600160a01b038116610eaf5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016103b7565b600054604080516001600160a01b03620100009093048316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b5050565b6032546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f97919061168e565b905090565b600054610100900460ff166110075760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103b7565b603280546001600160a01b0319166001600160a01b038416179055610f2681600061107f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261083690849061116b565b6000546201000090046001600160a01b03161580156110a657506001600160a01b03821615155b6111285760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103b7565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2610f2682610e21565b60006111c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661123d9092919063ffffffff16565b80519091501561083657808060200190518101906111de919061159e565b6108365760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b7565b606061124c8484600085611256565b90505b9392505050565b6060824710156112b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b7565b6001600160a01b0385163b61130e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b7565b600080866001600160a01b0316858760405161132a91906116a7565b60006040518083038185875af1925050503d8060008114611367576040519150601f19603f3d011682016040523d82523d6000602084013e61136c565b606091505b509150915061137c828286611387565b979650505050505050565b6060831561139657508161124f565b8251156113a65782518084602001fd5b8160405162461bcd60e51b81526004016103b791906114c3565b6001600160a01b03811681146103c957600080fd5b6000602082840312156113e757600080fd5b813561124f816113c0565b60006020828403121561140457600080fd5b5035919050565b6000806040838503121561141e57600080fd5b8235611429816113c0565b946020939093013593505050565b6000806040838503121561144a57600080fd5b8235611455816113c0565b91506020830135611465816113c0565b809150509250929050565b60006020828403121561148257600080fd5b813560ff8116811461124f57600080fd5b60005b838110156114ae578181015183820152602001611496565b838111156114bd576000848401525b50505050565b60208152600082518060208401526114e2816040850160208701611493565b601f01601f19169190910160400192915050565b60008060006060848603121561150b57600080fd5b8335611516816113c0565b92506020840135611526816113c0565b929592945050506040919091013590565b60006020828403121561154957600080fd5b815161124f816113c0565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156115b057600080fd5b8151801515811461124f57600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561163157611631611608565b500190565b60008282101561164857611648611608565b500390565b600081600019048311821515161561166757611667611608565b500290565b60008261168957634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156116a057600080fd5b5051919050565b600082516116b9818460208701611493565b919091019291505056fe4261736520537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a2646970667358221220807d1f909eeee6c436d31279042a7f653408f0b1b4db765d0324f537c32334df64736f6c634300080c0033",
    "sourceMap": "2180:13406:34:-:0;;;3803:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3860:34:34;;;;3904:22;:20;:22::i;:::-;3803:130;2180:13406;;5388:279:60;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:60;;536:2:156;5447:66:60;;;518:21:156;575:2;555:18;;;548:30;614:34;594:18;;;587:62;-1:-1:-1;;;665:18:156;;;658:37;712:19;;5447:66:60;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:60;5588:15;5573:30;;;;;;5622:28;;884:36:156;;;5622:28:60;;872:2:156;857:18;5622:28:60;;;;;;;5523:138;5388:279::o;14:315:156:-;109:6;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:16;;-1:-1:-1;;;;;249:31:156;;239:42;;229:70;;295:1;292;285:12;229:70;318:5;14:315;-1:-1:-1;;;14:315:156:o;742:184::-;2180:13406:34;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80635c975abb116100b8578063ab5921e11161007c578063ab5921e11461029c578063ce7c2ac2146102b1578063d9caed12146102c4578063e3dae51c146102d7578063f3e73875146102ea578063fabc1cbc146102fd57600080fd5b80635c975abb146102425780637a8b26371461024a578063886f11951461025d5780638c871019146102765780638f6a62401461028957600080fd5b806347e7ef24116100ff57806347e7ef24146101d2578063485cc955146101e5578063553ca5f8146101f8578063595c6a671461020b5780635ac86ab71461021357600080fd5b806310d67a2f1461013c578063136439dd146101515780632495a5991461016457806339b70e38146101945780633a98ef39146101bb575b600080fd5b61014f61014a3660046113d5565b610310565b005b61014f61015f3660046113f2565b6103cc565b603254610177906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101777f000000000000000000000000000000000000000000000000000000000000000081565b6101c460335481565b60405190815260200161018b565b6101c46101e036600461140b565b610510565b61014f6101f3366004611437565b610726565b6101c46102063660046113d5565b61083b565b61014f61084f565b610232610221366004611470565b6001805460ff9092161b9081161490565b604051901515815260200161018b565b6001546101c4565b6101c46102583660046113f2565b61091b565b600054610177906201000090046001600160a01b031681565b6101c46102843660046113f2565b610966565b6101c46102973660046113d5565b610971565b6102a461097f565b60405161018b91906114c3565b6101c46102bf3660046113d5565b61099f565b61014f6102d23660046114f6565b610a34565b6101c46102e53660046113f2565b610c81565b6101c46102f83660046113f2565b610cba565b61014f61030b3660046113f2565b610cc5565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103879190611537565b6001600160a01b0316336001600160a01b0316146103c05760405162461bcd60e51b81526004016103b790611554565b60405180910390fd5b6103c981610e21565b50565b60005460405163237dfb4760e11b8152336004820152620100009091046001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061159e565b6104595760405162461bcd60e51b81526004016103b7906115c0565b600154818116146104d25760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103b7565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b600180546000918291811614156105655760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103b7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105dd5760405162461bcd60e51b815260206004820181905260248201527f5374726174656779426173652e6f6e6c7953747261746567794d616e6167657260448201526064016103b7565b6032546001600160a01b038581169116146106595760405162461bcd60e51b815260206004820152603660248201527f5374726174656779426173652e6465706f7369743a2043616e206f6e6c79206460448201527532b837b9b4ba103ab73232b9363cb4b733aa37b5b2b760511b60648201526084016103b7565b603354600061066a6103e88361161e565b905060006103e8610679610f2a565b610683919061161e565b905060006106918783611636565b90508061069e848961164d565b6106a8919061166c565b95508561070e5760405162461bcd60e51b815260206004820152602e60248201527f5374726174656779426173652e6465706f7369743a206e65775368617265732060448201526d63616e6e6f74206265207a65726f60901b60648201526084016103b7565b610718868561161e565b603355505050505092915050565b600054610100900460ff16158080156107465750600054600160ff909116105b806107605750303b158015610760575060005460ff166001145b6107c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b6000805460ff1916600117905580156107e6576000805461ff0019166101001790555b6107f08383610f9c565b8015610836576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006108496102588361099f565b92915050565b60005460405163237dfb4760e11b8152336004820152620100009091046001600160a01b0316906346fbf68e90602401602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c0919061159e565b6108dc5760405162461bcd60e51b81526004016103b7906115c0565b600019600181905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000806103e860335461092e919061161e565b905060006103e861093d610f2a565b610947919061161e565b905081610954858361164d565b61095e919061166c565b949350505050565b600061084982610c81565b60006108496102f88361099f565b60606040518060800160405280604d81526020016116c4604d9139905090565b604051633d3f06c960e11b81526001600160a01b0382811660048301523060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690637a7e0d9290604401602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610849919061168e565b6001805460029081161415610a875760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103b7565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aff5760405162461bcd60e51b815260206004820181905260248201527f5374726174656779426173652e6f6e6c7953747261746567794d616e6167657260448201526064016103b7565b6032546001600160a01b03848116911614610b825760405162461bcd60e51b815260206004820152603b60248201527f5374726174656779426173652e77697468647261773a2043616e206f6e6c792060448201527f77697468647261772074686520737472617465677920746f6b656e000000000060648201526084016103b7565b60335480831115610c115760405162461bcd60e51b815260206004820152604d60248201527f5374726174656779426173652e77697468647261773a20616d6f756e7453686160448201527f726573206d757374206265206c657373207468616e206f7220657175616c207460648201526c6f20746f74616c53686172657360981b608482015260a4016103b7565b6000610c1f6103e88361161e565b905060006103e8610c2e610f2a565b610c38919061161e565b9050600082610c47878461164d565b610c51919061166c565b9050610c5d8685611636565b603355603254610c77906001600160a01b0316898361102d565b5050505050505050565b6000806103e8603354610c94919061161e565b905060006103e8610ca3610f2a565b610cad919061161e565b905080610954838661164d565b60006108498261091b565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3c9190611537565b6001600160a01b0316336001600160a01b031614610d6c5760405162461bcd60e51b81526004016103b790611554565b600154198119600154191614610dea5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103b7565b600181905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610505565b6001600160a01b038116610eaf5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016103b7565b600054604080516001600160a01b03620100009093048316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b5050565b6032546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f97919061168e565b905090565b600054610100900460ff166110075760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103b7565b603280546001600160a01b0319166001600160a01b038416179055610f2681600061107f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261083690849061116b565b6000546201000090046001600160a01b03161580156110a657506001600160a01b03821615155b6111285760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103b7565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2610f2682610e21565b60006111c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661123d9092919063ffffffff16565b80519091501561083657808060200190518101906111de919061159e565b6108365760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b7565b606061124c8484600085611256565b90505b9392505050565b6060824710156112b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b7565b6001600160a01b0385163b61130e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b7565b600080866001600160a01b0316858760405161132a91906116a7565b60006040518083038185875af1925050503d8060008114611367576040519150601f19603f3d011682016040523d82523d6000602084013e61136c565b606091505b509150915061137c828286611387565b979650505050505050565b6060831561139657508161124f565b8251156113a65782518084602001fd5b8160405162461bcd60e51b81526004016103b791906114c3565b6001600160a01b03811681146103c957600080fd5b6000602082840312156113e757600080fd5b813561124f816113c0565b60006020828403121561140457600080fd5b5035919050565b6000806040838503121561141e57600080fd5b8235611429816113c0565b946020939093013593505050565b6000806040838503121561144a57600080fd5b8235611455816113c0565b91506020830135611465816113c0565b809150509250929050565b60006020828403121561148257600080fd5b813560ff8116811461124f57600080fd5b60005b838110156114ae578181015183820152602001611496565b838111156114bd576000848401525b50505050565b60208152600082518060208401526114e2816040850160208701611493565b601f01601f19169190910160400192915050565b60008060006060848603121561150b57600080fd5b8335611516816113c0565b92506020840135611526816113c0565b929592945050506040919091013590565b60006020828403121561154957600080fd5b815161124f816113c0565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156115b057600080fd5b8151801515811461124f57600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561163157611631611608565b500190565b60008282101561164857611648611608565b500390565b600081600019048311821515161561166757611667611608565b500290565b60008261168957634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156116a057600080fd5b5051919050565b600082516116b9818460208701611493565b919091019291505056fe4261736520537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a2646970667358221220807d1f909eeee6c436d31279042a7f653408f0b1b4db765d0324f537c32334df64736f6c634300080c0033",
    "sourceMap": "2180:13406:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5826:138:27;;;;;;:::i;:::-;;:::i;:::-;;3832:392;;;;;;:::i;:::-;;:::i;3242:29:34:-;;;;;-1:-1:-1;;;;;3242:29:34;;;;;;-1:-1:-1;;;;;825:32:156;;;807:51;;795:2;780:18;3242:29:34;;;;;;;;3121:49;;;;;3345:26;;;;;;;;;1248:25:156;;;1236:2;1221:18;3345:26:34;1102:177:156;5486:1620:34;;;;;;:::i;:::-;;:::i;3939:180::-;;;;;;:::i;:::-;;:::i;14169:142::-;;;;;;:::i;:::-;;:::i;4299:136:27:-;;;:::i;5606:149::-;;;;;;:::i;:::-;5695:1;5724:7;;5695:10;;;;;5724:14;;;5723:24;;5606:149;;;;2812:14:156;;2805:22;2787:41;;2775:2;2760:18;5606:149:27;2647:187:156;5418:87:27;5491:7;;5418:87;;11035:476:34;;;;;;:::i;:::-;;:::i;1825:37:27:-;;;;;;;;-1:-1:-1;;;;;1825:37:27;;;13775:158:34;;;;;;:::i;:::-;;:::i;14550:129::-;;;;;;:::i;:::-;;:::i;10314:181::-;;;:::i;:::-;;;;;;;:::i;14853:160::-;;;;;;:::i;:::-;;:::i;7635:1573::-;;;;;;:::i;:::-;;:::i;12754:475::-;;;;;;:::i;:::-;;:::i;12054:157::-;;;;;;:::i;:::-;;:::i;4911:437:27:-;;;;;;:::i;:::-;;:::i;5826:138::-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;;;;;;;;;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;3832:392::-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;807:51:156;2125:14:27;;;;-1:-1:-1;;;;;2125:14:27;;:23;;780:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:27;;6018:2:156;4025:107:27::1;::::0;::::1;6000:21:156::0;6057:2;6037:18;;;6030:30;6096:34;6076:18;;;6069:62;6167:26;6147:18;;;6140:54;6211:19;;4025:107:27::1;5816:420:156::0;4025:107:27::1;4142:7;:25:::0;;;4182:35:::1;::::0;1248:25:156;;;4189:10:27::1;::::0;4182:35:::1;::::0;1236:2:156;1221:18;4182:35:27::1;;;;;;;;3832:392:::0;:::o;5486:1620:34:-;5695:1:27;5724:7;;5645:17:34;;;;5724:14:27;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;6443:2:156;2759:52:27;;;6425:21:156;6482:2;6462:18;;;6455:30;-1:-1:-1;;;6501:18:156;;;6494:55;6566:18;;2759:52:27;6241:349:156;2759:52:27;3559:10:34::1;-1:-1:-1::0;;;;;3581:15:34::1;3559:38;;3551:83;;;::::0;-1:-1:-1;;;3551:83:34;;6797:2:156;3551:83:34::1;::::0;::::1;6779:21:156::0;;;6816:18;;;6809:30;6875:34;6855:18;;;6848:62;6927:18;;3551:83:34::1;6595:356:156::0;3551:83:34::1;5787:15:::2;::::0;-1:-1:-1;;;;;5778:24:34;;::::2;5787:15:::0;::::2;5778:24;5770:91;;;::::0;-1:-1:-1;;;5770:91:34;;7158:2:156;5770:91:34::2;::::0;::::2;7140:21:156::0;7197:2;7177:18;;;7170:30;7236:34;7216:18;;;7209:62;-1:-1:-1;;;7287:18:156;;;7280:52;7349:19;;5770:91:34::2;6956:418:156::0;5770:91:34::2;5966:11;::::0;5939:24:::2;6366:32;2714:3;5966:11:::0;6366:32:::2;:::i;:::-;6337:61;;6408:27;3057:3;6438:15;:13;:15::i;:::-;:32;;;;:::i;:::-;6408:62:::0;-1:-1:-1;6600:32:34::2;6635:28;6657:6:::0;6408:62;6635:28:::2;:::i;:::-;6600:63:::0;-1:-1:-1;6600:63:34;6686:27:::2;6695:18:::0;6686:6;:27:::2;:::i;:::-;6685:56;;;;:::i;:::-;6673:68:::0;-1:-1:-1;6893:14:34;6885:73:::2;;;::::0;-1:-1:-1;;;6885:73:34;;8371:2:156;6885:73:34::2;::::0;::::2;8353:21:156::0;8410:2;8390:18;;;8383:30;8449:34;8429:18;;;8422:62;-1:-1:-1;;;8500:18:156;;;8493:44;8554:19;;6885:73:34::2;8169:410:156::0;6885:73:34::2;7044:28;7063:9:::0;7044:16;:28:::2;:::i;:::-;7029:11;:44:::0;-1:-1:-1;;;;5486:1620:34;;;;;:::o;3939:180::-;3111:19:60;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:60;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:60;1476:19:62;:23;;;3219:66:60;;-1:-1:-1;3268:12:60;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:60;;8786:2:156;3157:201:60;;;8768:21:156;8825:2;8805:18;;;8798:30;8864:34;8844:18;;;8837:62;-1:-1:-1;;;8915:18:156;;;8908:44;8969:19;;3157:201:60;8584:410:156;3157:201:60;3368:12;:16;;-1:-1:-1;;3368:16:60;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:60;;;;;3394:65;4054:58:34::1;4078:16;4096:15;4054:23;:58::i;:::-;3483:14:60::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:60;;;3553:14;;-1:-1:-1;9151:36:156;;3553:14:60;;9139:2:156;9124:18;3553:14:60;;;;;;;3479:99;3101:483;3939:180:34;;:::o;14169:142::-;14242:7;14268:36;14291:12;14298:4;14291:6;:12::i;14268:36::-;14261:43;14169:142;-1:-1:-1;;14169:142:34:o;4299:136:27:-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;807:51:156;2125:14:27;;;;-1:-1:-1;;;;;2125:14:27;;:23;;780:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:27::1;:27:::0;;;4391:37:::1;::::0;1248:25:156;;;4398:10:27::1;::::0;4391:37:::1;::::0;1236:2:156;1221:18;4391:37:27::1;;;;;;;4299:136::o:0;11035:476:34:-;11127:7;11196:26;2714:3;11225:11;;:27;;;;:::i;:::-;11196:56;;11262:27;3057:3;11292:15;:13;:15::i;:::-;:32;;;;:::i;:::-;11262:62;-1:-1:-1;11486:18:34;11448:34;11470:12;11262:62;11448:34;:::i;:::-;11447:57;;;;:::i;:::-;11440:64;11035:476;-1:-1:-1;;;;11035:476:34:o;13775:158::-;13860:7;13886:40;13909:16;13886:22;:40::i;14550:129::-;14614:7;14640:32;14659:12;14666:4;14659:6;:12::i;10314:181::-;10377:13;10402:86;;;;;;;;;;;;;;;;;;;10314:181;:::o;14853:160::-;14938:68;;-1:-1:-1;;;14938:68:34;;-1:-1:-1;;;;;9446:15:156;;;14938:68:34;;;9428:34:156;14999:4:34;9478:18:156;;;9471:43;14912:7:34;;14938:15;:36;;;;;;9363:18:156;;14938:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7635:1573::-;2373:1;5724:7:27;;5695:10;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;6443:2:156;2759:52:27;;;6425:21:156;6482:2;6462:18;;;6455:30;-1:-1:-1;;;6501:18:156;;;6494:55;6566:18;;2759:52:27;6241:349:156;2759:52:27;3559:10:34::1;-1:-1:-1::0;;;;;3581:15:34::1;3559:38;;3551:83;;;::::0;-1:-1:-1;;;3551:83:34;;6797:2:156;3551:83:34::1;::::0;::::1;6779:21:156::0;;;6816:18;;;6809:30;6875:34;6855:18;;;6848:62;6927:18;;3551:83:34::1;6595:356:156::0;3551:83:34::1;7968:15:::2;::::0;-1:-1:-1;;;;;7959:24:34;;::::2;7968:15:::0;::::2;7959:24;7951:96;;;::::0;-1:-1:-1;;;7951:96:34;;9916:2:156;7951:96:34::2;::::0;::::2;9898:21:156::0;9955:2;9935:18;;;9928:30;9994:34;9974:18;;;9967:62;10065:29;10045:18;;;10038:57;10112:19;;7951:96:34::2;9714:423:156::0;7951:96:34::2;8152:11;::::0;8195:32;;::::2;;8174:156;;;::::0;-1:-1:-1;;;8174:156:34;;10344:2:156;8174:156:34::2;::::0;::::2;10326:21:156::0;10383:2;10363:18;;;10356:30;10422:34;10402:18;;;10395:62;10493:34;10473:18;;;10466:62;-1:-1:-1;;;10544:19:156;;;10537:44;10598:19;;8174:156:34::2;10142:481:156::0;8174:156:34::2;8672:31;8706:32;2714:3;8706:16:::0;:32:::2;:::i;:::-;8672:66;;8748:27;3057:3;8778:15;:13;:15::i;:::-;:32;;;;:::i;:::-;8748:62:::0;-1:-1:-1;8926:20:34::2;8988:23:::0;8950:34:::2;8972:12:::0;8748:62;8950:34:::2;:::i;:::-;8949:62;;;;:::i;:::-;8926:85:::0;-1:-1:-1;9106:31:34::2;9125:12:::0;9106:16;:31:::2;:::i;:::-;9092:11;:45:::0;9148:15:::2;::::0;:53:::2;::::0;-1:-1:-1;;;;;9148:15:34::2;9177:9:::0;9188:12;9148:28:::2;:53::i;:::-;7822:1386;;;;7635:1573:::0;;;;:::o;12754:475::-;12841:7;12910:26;2714:3;12939:11;;:27;;;;:::i;:::-;12910:56;;12976:27;3057:3;13006:15;:13;:15::i;:::-;:32;;;;:::i;:::-;12976:62;-1:-1:-1;12976:62:34;13162:37;13181:18;13162:16;:37;:::i;12054:157::-;12142:7;12168:36;12191:12;12168:22;:36::i;4911:437:27:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:27;;10830:2:156;5104:150:27::1;::::0;::::1;10812:21:156::0;10869:2;10849:18;;;10842:30;10908:34;10888:18;;;10881:62;10979:26;10959:18;;;10952:54;11023:19;;5104:150:27::1;10628:420:156::0;5104:150:27::1;5264:7;:25:::0;;;5304:37:::1;::::0;1248:25:156;;;5313:10:27::1;::::0;5304:37:::1;::::0;1236:2:156;1221:18;5304:37:27::1;1102:177:156::0;6024:360:27;-1:-1:-1;;;;;6127:40:27;;6106:160;;;;-1:-1:-1;;;6106:160:27;;11255:2:156;6106:160:27;;;11237:21:156;11294:2;11274:18;;;11267:30;11333:34;11313:18;;;11306:62;11404:34;11384:18;;;11377:62;-1:-1:-1;;;11455:19:156;;;11448:40;11505:19;;6106:160:27;11053:477:156;6106:160:27;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:27;;;;;;9428:34:156;;9498:15;;;9493:2;9478:18;;9471:43;6281:52:27;;9363:18:156;6281:52:27;;;;;;;6343:14;:34;;-1:-1:-1;;;;;6343:34:27;;;;;-1:-1:-1;;;;;;6343:34:27;;;;;;;;;6024:360::o;9529:73:34:-;;;:::o;15164:129::-;15246:15;;:40;;-1:-1:-1;;;15246:40:34;;15280:4;15246:40;;;807:51:156;15220:7:34;;-1:-1:-1;;;;;15246:15:34;;:25;;780:18:156;;15246:40:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15239:47;;15164:129;:::o;4207:247::-;4910:13:60;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:60;;12094:2:156;4902:69:60;;;12076:21:156;12133:2;12113:18;;;12106:30;12172:34;12152:18;;;12145:62;-1:-1:-1;;;12223:18:156;;;12216:41;12274:19;;4902:69:60;11892:407:156;4902:69:60;4356:15:34::1;:34:::0;;-1:-1:-1;;;;;;4356:34:34::1;-1:-1:-1::0;;;;;4356:34:34;::::1;;::::0;;4400:47:::1;4418:15:::0;-1:-1:-1;4400:17:34::1;:47::i;763:205:82:-:0;902:58;;;-1:-1:-1;;;;;12496:32:156;;902:58:82;;;12478:51:156;12545:18;;;;12538:34;;;902:58:82;;;;;;;;;;12451:18:156;;;;902:58:82;;;;;;;;-1:-1:-1;;;;;902:58:82;-1:-1:-1;;;902:58:82;;;875:86;;895:5;;875:19;:86::i;2943:441:27:-;3104:1;3077:14;;;;-1:-1:-1;;;;;3077:14:27;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:27;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:27;;12785:2:156;3048:197:27;;;12767:21:156;12824:2;12804:18;;;12797:30;12863:34;12843:18;;;12836:62;12934:34;12914:18;;;12907:62;-1:-1:-1;;;12985:19:156;;;12978:38;13033:19;;3048:197:27;12583:475:156;3048:197:27;3255:7;:26;;;3296:36;;1248:25:156;;;3303:10:27;;3296:36;;1236:2:156;1221:18;3296:36:27;;;;;;;3342:35;3361:15;3342:18;:35::i;3747:706:82:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:82;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:82;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:82;;13265:2:156;4351:85:82;;;13247:21:156;13304:2;13284:18;;;13277:30;13343:34;13323:18;;;13316:62;-1:-1:-1;;;13394:18:156;;;13387:40;13444:19;;4351:85:82;13063:406:156;3861:223:83;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:83;;13676:2:156;5137:81:83;;;13658:21:156;13715:2;13695:18;;;13688:30;13754:34;13734:18;;;13727:62;-1:-1:-1;;;13805:18:156;;;13798:36;13851:19;;5137:81:83;13474:402:156;5137:81:83;-1:-1:-1;;;;;1476:19:62;;;5228:60:83;;;;-1:-1:-1;;;5228:60:83;;14083:2:156;5228:60:83;;;14065:21:156;14122:2;14102:18;;;14095:30;14161:31;14141:18;;;14134:59;14210:18;;5228:60:83;13881:353:156;5228:60:83;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:83;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:83:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:83;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:83;;;;;;;;:::i;14:148:156:-;-1:-1:-1;;;;;106:31:156;;96:42;;86:70;;152:1;149;142:12;167:288;250:6;303:2;291:9;282:7;278:23;274:32;271:52;;;319:1;316;309:12;271:52;358:9;345:23;377:48;419:5;377:48;:::i;460:180::-;519:6;572:2;560:9;551:7;547:23;543:32;540:52;;;588:1;585;578:12;540:52;-1:-1:-1;611:23:156;;460:180;-1:-1:-1;460:180:156:o;1284:348::-;1368:6;1376;1429:2;1417:9;1408:7;1404:23;1400:32;1397:52;;;1445:1;1442;1435:12;1397:52;1484:9;1471:23;1503:48;1545:5;1503:48;:::i;:::-;1570:5;1622:2;1607:18;;;;1594:32;;-1:-1:-1;;;1284:348:156:o;1637:462::-;1745:6;1753;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1861:9;1848:23;1880:48;1922:5;1880:48;:::i;:::-;1947:5;-1:-1:-1;2004:2:156;1989:18;;1976:32;2017:50;1976:32;2017:50;:::i;:::-;2086:7;2076:17;;;1637:462;;;;;:::o;2373:269::-;2430:6;2483:2;2471:9;2462:7;2458:23;2454:32;2451:52;;;2499:1;2496;2489:12;2451:52;2538:9;2525:23;2588:4;2581:5;2577:16;2570:5;2567:27;2557:55;;2608:1;2605;2598:12;3071:258;3143:1;3153:113;3167:6;3164:1;3161:13;3153:113;;;3243:11;;;3237:18;3224:11;;;3217:39;3189:2;3182:10;3153:113;;;3284:6;3281:1;3278:13;3275:48;;;3319:1;3310:6;3305:3;3301:16;3294:27;3275:48;;3071:258;;;:::o;3334:383::-;3483:2;3472:9;3465:21;3446:4;3515:6;3509:13;3558:6;3553:2;3542:9;3538:18;3531:34;3574:66;3633:6;3628:2;3617:9;3613:18;3608:2;3600:6;3596:15;3574:66;:::i;:::-;3701:2;3680:15;-1:-1:-1;;3676:29:156;3661:45;;;;3708:2;3657:54;;3334:383;-1:-1:-1;;3334:383:156:o;3722:506::-;3815:6;3823;3831;3884:2;3872:9;3863:7;3859:23;3855:32;3852:52;;;3900:1;3897;3890:12;3852:52;3939:9;3926:23;3958:48;4000:5;3958:48;:::i;:::-;4025:5;-1:-1:-1;4082:2:156;4067:18;;4054:32;4095:50;4054:32;4095:50;:::i;:::-;3722:506;;4164:7;;-1:-1:-1;;;4218:2:156;4203:18;;;;4190:32;;3722:506::o;4233:268::-;4303:6;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4404:9;4398:16;4423:48;4465:5;4423:48;:::i;4506:406::-;4708:2;4690:21;;;4747:2;4727:18;;;4720:30;4786:34;4781:2;4766:18;;4759:62;-1:-1:-1;;;4852:2:156;4837:18;;4830:40;4902:3;4887:19;;4506:406::o;5125:277::-;5192:6;5245:2;5233:9;5224:7;5220:23;5216:32;5213:52;;;5261:1;5258;5251:12;5213:52;5293:9;5287:16;5346:5;5339:13;5332:21;5325:5;5322:32;5312:60;;5368:1;5365;5358:12;5407:404;5609:2;5591:21;;;5648:2;5628:18;;;5621:30;5687:34;5682:2;5667:18;;5660:62;-1:-1:-1;;;5753:2:156;5738:18;;5731:38;5801:3;5786:19;;5407:404::o;7379:127::-;7440:10;7435:3;7431:20;7428:1;7421:31;7471:4;7468:1;7461:15;7495:4;7492:1;7485:15;7511:128;7551:3;7582:1;7578:6;7575:1;7572:13;7569:39;;;7588:18;;:::i;:::-;-1:-1:-1;7624:9:156;;7511:128::o;7644:125::-;7684:4;7712:1;7709;7706:8;7703:34;;;7717:18;;:::i;:::-;-1:-1:-1;7754:9:156;;7644:125::o;7774:168::-;7814:7;7880:1;7876;7872:6;7868:14;7865:1;7862:21;7857:1;7850:9;7843:17;7839:45;7836:71;;;7887:18;;:::i;:::-;-1:-1:-1;7927:9:156;;7774:168::o;7947:217::-;7987:1;8013;8003:132;;8057:10;8052:3;8048:20;8045:1;8038:31;8092:4;8089:1;8082:15;8120:4;8117:1;8110:15;8003:132;-1:-1:-1;8149:9:156;;7947:217::o;9525:184::-;9595:6;9648:2;9636:9;9627:7;9623:23;9619:32;9616:52;;;9664:1;9661;9654:12;9616:52;-1:-1:-1;9687:16:156;;9525:184;-1:-1:-1;9525:184:156:o;14239:274::-;14368:3;14406:6;14400:13;14422:53;14468:6;14463:3;14456:4;14448:6;14444:17;14422:53;:::i;:::-;14491:16;;;;;14239:274;-1:-1:-1;;14239:274:156:o",
    "linkReferences": {},
    "immutableReferences": {
      "14236": [
        {
          "start": 409,
          "length": 32
        },
        {
          "start": 1392,
          "length": 32
        },
        {
          "start": 2503,
          "length": 32
        },
        {
          "start": 2706,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "initialize(address,address)": "485cc955",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "setPauserRegistry(address)": "10d67a2f",
    "shares(address)": "ce7c2ac2",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "strategyManager()": "39b70e38",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "unpause(uint256)": "fabc1cbc",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Note that some functions have their mutability restricted; developers inheriting from this contract cannot broaden the mutability without modifying this contract itself.This contract is expressly *not* intended for use with 'fee-on-transfer'-type tokens. Setting the `underlyingToken` to be a fee-on-transfer token may result in improper accounting.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.Note that the assumption is made that `amount` of `token` has already been transferred directly to this contract (as performed in the StrategyManager's deposit functions). In particular, setting the `underlyingToken` of this contract to be a fee-on-transfer token will break the assumption that the amount this contract *received* of the token is equal to the amount that was input when the transfer was performed (i.e. the amount transferred 'out' of the depositor's balance).\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"newShares\":\"is the number of new shares issued at the current exchange ratio.\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"recipient\":\"is the address to receive the withdrawn funds\",\"token\":\"is the ERC20 token being transferred out\"}}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"title\":\"Base implementation of `IStrategy` interface, designed to be inherited from by more complex strategies.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Since this contract is designed to be initializable, the constructor simply sets `strategyManager`, the only immutable variable.\"},\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this Strategy\"},\"explanation()\":{\"notice\":\"Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `strategyManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"strategyManager()\":{\"notice\":\"EigenLayer's StrategyManager contract\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in this Strategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underlying token for shares in this Strategy\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this Strategy, to the `recipient`'s address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSimple, basic, \\\"do-nothing\\\" Strategy that holds a single underlying token and returns it on withdrawals. Implements minimal versions of the IStrategy functions, this contract is designed to be inherited by more complex strategies, which can then override its functions as necessary.This contract functions similarly to an ERC4626 vault, only without issuing a token. To mitigate against the common \\\"inflation attack\\\" vector, we have chosen to use the 'virtual shares' mitigation route, similar to [OpenZeppelin](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC4626.sol). We acknowledge that this mitigation has the known downside of the virtual shares causing some losses to users, which are pronounced particularly in the case of the share exchange rate changing signficantly, either positively or negatively. For a fairly thorough discussion of this issue and our chosen mitigation strategy, we recommend reading through [this thread](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3706) on the OpenZeppelin repo. We specifically use a share offset of `SHARES_OFFSET` and a balance offset of `BALANCE_OFFSET`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/strategies/StrategyBase.sol\":\"StrategyBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/eigenlayer-contracts/src/contracts/strategies/StrategyBase.sol\":{\"keccak256\":\"0xb5414bdead205cc9b13dc53e92c3e1aea7799db298cb4740c6cd5d70a9b0b3e1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20fc4ad8fffeb87a0bba34e191482e837baf40d139b39e37f4634c2449dd2260\",\"dweb:/ipfs/QmYwCNYC6XKPZMXF16rUiy6owsikToKJtAJnVtmAR6jxpx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newShares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.Note that the assumption is made that `amount` of `token` has already been transferred directly to this contract (as performed in the StrategyManager's deposit functions). In particular, setting the `underlyingToken` of this contract to be a fee-on-transfer token will break the assumption that the amount this contract *received* of the token is equal to the amount that was input when the transfer was performed (i.e. the amount transferred 'out' of the depositor's balance).",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "newShares": "is the number of new shares issued at the current exchange ratio."
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            },
            "returns": {
              "_0": "The amount of underlying tokens corresponding to the input `amountShares`"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            },
            "returns": {
              "_0": "The amount of underlying tokens corresponding to the input `amountShares`"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            },
            "returns": {
              "_0": "The amount of shares corresponding to the input `amountUnderlying`"
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary significantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            },
            "returns": {
              "_0": "The amount of shares corresponding to the input `amountUnderlying`"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "recipient": "is the address to receive the withdrawn funds",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Since this contract is designed to be initializable, the constructor simply sets `strategyManager`, the only immutable variable."
          },
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this Strategy"
          },
          "explanation()": {
            "notice": "Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "shares(address)": {
            "notice": "convenience function for fetching the current total shares of `user` in this strategy, by querying the `strategyManager` contract"
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "strategyManager()": {
            "notice": "EigenLayer's StrategyManager contract"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in this Strategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underlying token for shares in this Strategy"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this Strategy, to the `recipient`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/strategies/StrategyBase.sol": "StrategyBase"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/strategies/StrategyBase.sol": {
        "keccak256": "0xb5414bdead205cc9b13dc53e92c3e1aea7799db298cb4740c6cd5d70a9b0b3e1",
        "urls": [
          "bzz-raw://20fc4ad8fffeb87a0bba34e191482e837baf40d139b39e37f4634c2449dd2260",
          "dweb:/ipfs/QmYwCNYC6XKPZMXF16rUiy6owsikToKJtAJnVtmAR6jxpx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/strategies/StrategyBase.sol",
    "id": 14660,
    "exportedSymbols": {
      "Address": [
        60436
      ],
      "AddressUpgradeable": [
        57600
      ],
      "BeaconChainProofs": [
        9143
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "IERC20Permit": [
        59831
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Initializable": [
        57298
      ],
      "Merkle": [
        9899
      ],
      "Pausable": [
        10782
      ],
      "SafeERC20": [
        60141
      ],
      "StrategyBase": [
        14659
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:15550:34",
    "nodes": [
      {
        "id": 14202,
        "nodeType": "PragmaDirective",
        "src": "37:24:34",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 14203,
        "nodeType": "ImportDirective",
        "src": "63:44:34",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol",
        "file": "../interfaces/IStrategyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14660,
        "sourceUnit": 8384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14204,
        "nodeType": "ImportDirective",
        "src": "108:37:34",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14660,
        "sourceUnit": 10783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14205,
        "nodeType": "ImportDirective",
        "src": "146:56:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14660,
        "sourceUnit": 59727,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14206,
        "nodeType": "ImportDirective",
        "src": "203:65:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14660,
        "sourceUnit": 60142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14207,
        "nodeType": "ImportDirective",
        "src": "269:72:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14660,
        "sourceUnit": 57299,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14659,
        "nodeType": "ContractDefinition",
        "src": "2180:13406:34",
        "nodes": [
          {
            "id": 14218,
            "nodeType": "UsingForDirective",
            "src": "2246:27:34",
            "nodes": [],
            "libraryName": {
              "id": 14215,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60141,
              "src": "2252:9:34"
            },
            "typeName": {
              "id": 14217,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14216,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59726,
                "src": "2266:6:34"
              },
              "referencedDeclaration": 59726,
              "src": "2266:6:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$59726",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 14221,
            "nodeType": "VariableDeclaration",
            "src": "2279:43:34",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "2303:15:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14219,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2279:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 14220,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2321:1:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 14224,
            "nodeType": "VariableDeclaration",
            "src": "2328:46:34",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_WITHDRAWALS",
            "nameLocation": "2352:18:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14222,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2328:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 14223,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2373:1:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 14228,
            "nodeType": "VariableDeclaration",
            "src": "2672:45:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 14225,
              "nodeType": "StructuredDocumentation",
              "src": "2381:286:34",
              "text": " @notice virtual shares used as part of the mitigation of the common 'share inflation' attack vector.\n Constant value chosen to reasonably reduce attempted share inflation by the first depositor, while still\n incurring reasonably small losses to depositors"
            },
            "mutability": "constant",
            "name": "SHARES_OFFSET",
            "nameLocation": "2698:13:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14226,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2672:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316533",
              "id": 14227,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2714:3:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1e3"
            },
            "visibility": "internal"
          },
          {
            "id": 14232,
            "nodeType": "VariableDeclaration",
            "src": "3014:46:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 14229,
              "nodeType": "StructuredDocumentation",
              "src": "2723:286:34",
              "text": " @notice virtual balance used as part of the mitigation of the common 'share inflation' attack vector\n Constant value chosen to reasonably reduce attempted share inflation by the first depositor, while still\n incurring reasonably small losses to depositors"
            },
            "mutability": "constant",
            "name": "BALANCE_OFFSET",
            "nameLocation": "3040:14:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3014:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316533",
              "id": 14231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3057:3:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1e3"
            },
            "visibility": "internal"
          },
          {
            "id": 14236,
            "nodeType": "VariableDeclaration",
            "src": "3121:49:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14233,
              "nodeType": "StructuredDocumentation",
              "src": "3067:49:34",
              "text": "@notice EigenLayer's StrategyManager contract"
            },
            "functionSelector": "39b70e38",
            "mutability": "immutable",
            "name": "strategyManager",
            "nameLocation": "3155:15:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStrategyManager_$8383",
              "typeString": "contract IStrategyManager"
            },
            "typeName": {
              "id": 14235,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14234,
                "name": "IStrategyManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8383,
                "src": "3121:16:34"
              },
              "referencedDeclaration": 8383,
              "src": "3121:16:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                "typeString": "contract IStrategyManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14240,
            "nodeType": "VariableDeclaration",
            "src": "3242:29:34",
            "nodes": [],
            "baseFunctions": [
              8122
            ],
            "constant": false,
            "documentation": {
              "id": 14237,
              "nodeType": "StructuredDocumentation",
              "src": "3177:60:34",
              "text": "@notice The underlying token for shares in this Strategy"
            },
            "functionSelector": "2495a599",
            "mutability": "mutable",
            "name": "underlyingToken",
            "nameLocation": "3256:15:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$59726",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 14239,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14238,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59726,
                "src": "3242:6:34"
              },
              "referencedDeclaration": 59726,
              "src": "3242:6:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$59726",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14243,
            "nodeType": "VariableDeclaration",
            "src": "3345:26:34",
            "nodes": [],
            "baseFunctions": [
              8128
            ],
            "constant": false,
            "documentation": {
              "id": 14241,
              "nodeType": "StructuredDocumentation",
              "src": "3278:62:34",
              "text": "@notice The total number of extant shares in this Strategy"
            },
            "functionSelector": "3a98ef39",
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "3360:11:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3345:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14259,
            "nodeType": "ModifierDefinition",
            "src": "3510:142:34",
            "nodes": [],
            "body": {
              "id": 14258,
              "nodeType": "Block",
              "src": "3541:111:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14247,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3559:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3559:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14251,
                              "name": "strategyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14236,
                              "src": "3581:15:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                "typeString": "contract IStrategyManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                "typeString": "contract IStrategyManager"
                              }
                            ],
                            "id": 14250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3573:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3573:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3573:24:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3559:38:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374726174656779426173652e6f6e6c7953747261746567794d616e61676572",
                        "id": 14254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3599:34:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58a384a127fa47beef8030c28b849ff558ae1543134565a1857d2f43002777a5",
                          "typeString": "literal_string \"StrategyBase.onlyStrategyManager\""
                        },
                        "value": "StrategyBase.onlyStrategyManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58a384a127fa47beef8030c28b849ff558ae1543134565a1857d2f43002777a5",
                          "typeString": "literal_string \"StrategyBase.onlyStrategyManager\""
                        }
                      ],
                      "id": 14246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3551:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:83:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14256,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:83:34"
                },
                {
                  "id": 14257,
                  "nodeType": "PlaceholderStatement",
                  "src": "3644:1:34"
                }
              ]
            },
            "documentation": {
              "id": 14244,
              "nodeType": "StructuredDocumentation",
              "src": "3378:127:34",
              "text": "@notice Simply checks that the `msg.sender` is the `strategyManager`, which is an address stored immutably at construction."
            },
            "name": "onlyStrategyManager",
            "nameLocation": "3519:19:34",
            "parameters": {
              "id": 14245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:2:34"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14274,
            "nodeType": "FunctionDefinition",
            "src": "3803:130:34",
            "nodes": [],
            "body": {
              "id": 14273,
              "nodeType": "Block",
              "src": "3850:83:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14266,
                      "name": "strategyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14236,
                      "src": "3860:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                        "typeString": "contract IStrategyManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14267,
                      "name": "_strategyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14263,
                      "src": "3878:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                        "typeString": "contract IStrategyManager"
                      }
                    },
                    "src": "3860:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "id": 14269,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:34:34"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14270,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57297,
                      "src": "3904:20:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 14271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3904:22:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14272,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:22:34"
                }
              ]
            },
            "documentation": {
              "id": 14260,
              "nodeType": "StructuredDocumentation",
              "src": "3658:140:34",
              "text": "@notice Since this contract is designed to be initializable, the constructor simply sets `strategyManager`, the only immutable variable."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 14264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14263,
                  "mutability": "mutable",
                  "name": "_strategyManager",
                  "nameLocation": "3832:16:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14274,
                  "src": "3815:33:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                    "typeString": "contract IStrategyManager"
                  },
                  "typeName": {
                    "id": 14262,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14261,
                      "name": "IStrategyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8383,
                      "src": "3815:16:34"
                    },
                    "referencedDeclaration": 8383,
                    "src": "3815:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3814:35:34"
            },
            "returnParameters": {
              "id": 14265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3850:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14291,
            "nodeType": "FunctionDefinition",
            "src": "3939:180:34",
            "nodes": [],
            "body": {
              "id": 14290,
              "nodeType": "Block",
              "src": "4044:75:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14286,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14277,
                        "src": "4078:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14287,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14280,
                        "src": "4096:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      ],
                      "id": 14285,
                      "name": "_initializeStrategyBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14313,
                      "src": "4054:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$59726_$_t_contract$_IPauserRegistry_$7778_$returns$__$",
                        "typeString": "function (contract IERC20,contract IPauserRegistry)"
                      }
                    },
                    "id": 14288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:58:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14289,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:58:34"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14282,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57218,
                  "src": "4032:11:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "4032:11:34"
              }
            ],
            "name": "initialize",
            "nameLocation": "3948:10:34",
            "parameters": {
              "id": 14281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14277,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "3966:16:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14291,
                  "src": "3959:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14276,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14275,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "3959:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "3959:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14280,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "4000:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14291,
                  "src": "3984:31:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 14279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14278,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7778,
                      "src": "3984:15:34"
                    },
                    "referencedDeclaration": 7778,
                    "src": "3984:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:58:34"
            },
            "returnParameters": {
              "id": 14284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4044:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14313,
            "nodeType": "FunctionDefinition",
            "src": "4207:247:34",
            "nodes": [],
            "body": {
              "id": 14312,
              "nodeType": "Block",
              "src": "4346:108:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14303,
                      "name": "underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14240,
                      "src": "4356:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$59726",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14304,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14295,
                      "src": "4374:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$59726",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4356:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 14306,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14308,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14298,
                        "src": "4418:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 14309,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10502,
                        "src": "4435:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14307,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10611,
                      "src": "4400:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7778_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 14310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4400:47:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14311,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:47:34"
                }
              ]
            },
            "documentation": {
              "id": 14292,
              "nodeType": "StructuredDocumentation",
              "src": "4125:77:34",
              "text": "@notice Sets the `underlyingToken` and `pauserRegistry` for the strategy."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14300,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57261,
                  "src": "4329:16:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "4329:16:34"
              }
            ],
            "name": "_initializeStrategyBase",
            "nameLocation": "4216:23:34",
            "parameters": {
              "id": 14299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14295,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "4256:16:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14313,
                  "src": "4249:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14294,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14293,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "4249:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "4249:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14298,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "4298:15:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14313,
                  "src": "4282:31:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 14297,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14296,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7778,
                      "src": "4282:15:34"
                    },
                    "referencedDeclaration": 7778,
                    "src": "4282:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4239:80:34"
            },
            "returnParameters": {
              "id": 14302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4346:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14392,
            "nodeType": "FunctionDefinition",
            "src": "5486:1620:34",
            "nodes": [],
            "body": {
              "id": 14391,
              "nodeType": "Block",
              "src": "5664:1442:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14331,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14317,
                        "src": "5745:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14319,
                        "src": "5752:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14330,
                      "name": "_beforeDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14480,
                      "src": "5730:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$59726_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 14333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5730:29:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14334,
                  "nodeType": "ExpressionStatement",
                  "src": "5730:29:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        "id": 14338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14336,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14317,
                          "src": "5778:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14337,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14240,
                          "src": "5787:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "5778:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374726174656779426173652e6465706f7369743a2043616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e",
                        "id": 14339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5804:56:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eed6fc7edfbe5171182c19badda6934f961a458e0ba60a6b5ee81d8d32f6cffb",
                          "typeString": "literal_string \"StrategyBase.deposit: Can only deposit underlyingToken\""
                        },
                        "value": "StrategyBase.deposit: Can only deposit underlyingToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eed6fc7edfbe5171182c19badda6934f961a458e0ba60a6b5ee81d8d32f6cffb",
                          "typeString": "literal_string \"StrategyBase.deposit: Can only deposit underlyingToken\""
                        }
                      ],
                      "id": 14335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5770:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5770:91:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14341,
                  "nodeType": "ExpressionStatement",
                  "src": "5770:91:34"
                },
                {
                  "assignments": [
                    14343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14343,
                      "mutability": "mutable",
                      "name": "priorTotalShares",
                      "nameLocation": "5947:16:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14391,
                      "src": "5939:24:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5939:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14345,
                  "initialValue": {
                    "id": 14344,
                    "name": "totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14243,
                    "src": "5966:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5939:38:34"
                },
                {
                  "assignments": [
                    14348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14348,
                      "mutability": "mutable",
                      "name": "virtualShareAmount",
                      "nameLocation": "6345:18:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14391,
                      "src": "6337:26:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6337:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of newShares *mirrors* `underlyingToShares(amount)`, but is different since the balance of `underlyingToken`\n has already been increased due to the `strategyManager` transferring tokens to this strategy prior to calling this function",
                  "id": 14352,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14349,
                      "name": "priorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14343,
                      "src": "6366:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14350,
                      "name": "SHARES_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14228,
                      "src": "6385:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6366:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6337:61:34"
                },
                {
                  "assignments": [
                    14354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14354,
                      "mutability": "mutable",
                      "name": "virtualTokenBalance",
                      "nameLocation": "6416:19:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14391,
                      "src": "6408:27:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6408:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14359,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14355,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14653,
                        "src": "6438:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 14356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6438:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14357,
                      "name": "BALANCE_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14232,
                      "src": "6456:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6438:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6408:62:34"
                },
                {
                  "assignments": [
                    14361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14361,
                      "mutability": "mutable",
                      "name": "virtualPriorTokenBalance",
                      "nameLocation": "6608:24:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14391,
                      "src": "6600:32:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6600:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14365,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14362,
                      "name": "virtualTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14354,
                      "src": "6635:19:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 14363,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14319,
                      "src": "6657:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6635:28:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6600:63:34"
                },
                {
                  "expression": {
                    "id": 14373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14366,
                      "name": "newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14328,
                      "src": "6673:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 14367,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14319,
                              "src": "6686:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 14368,
                              "name": "virtualShareAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14348,
                              "src": "6695:18:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6686:27:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 14370,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6685:29:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 14371,
                        "name": "virtualPriorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14361,
                        "src": "6717:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6685:56:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6673:68:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14374,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:68:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14376,
                          "name": "newShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14328,
                          "src": "6893:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6906:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6893:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374726174656779426173652e6465706f7369743a206e65775368617265732063616e6e6f74206265207a65726f",
                        "id": 14379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6909:48:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd1a49254f80fbb4fa942dbf4c0137e5c5563b6de553945a29f6d951eb27450e",
                          "typeString": "literal_string \"StrategyBase.deposit: newShares cannot be zero\""
                        },
                        "value": "StrategyBase.deposit: newShares cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd1a49254f80fbb4fa942dbf4c0137e5c5563b6de553945a29f6d951eb27450e",
                          "typeString": "literal_string \"StrategyBase.deposit: newShares cannot be zero\""
                        }
                      ],
                      "id": 14375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6885:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6885:73:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14381,
                  "nodeType": "ExpressionStatement",
                  "src": "6885:73:34"
                },
                {
                  "expression": {
                    "id": 14387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14382,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14243,
                      "src": "7029:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14383,
                            "name": "priorTotalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14343,
                            "src": "7044:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 14384,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14328,
                            "src": "7063:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7044:28:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14386,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7043:30:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7029:44:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14388,
                  "nodeType": "ExpressionStatement",
                  "src": "7029:44:34"
                },
                {
                  "expression": {
                    "id": 14389,
                    "name": "newShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14328,
                    "src": "7090:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14329,
                  "id": 14390,
                  "nodeType": "Return",
                  "src": "7083:16:34"
                }
              ]
            },
            "baseFunctions": [
              8048
            ],
            "documentation": {
              "id": 14314,
              "nodeType": "StructuredDocumentation",
              "src": "4460:1021:34",
              "text": " @notice Used to deposit tokens into this Strategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\n @dev Note that the assumption is made that `amount` of `token` has already been transferred directly to this contract\n (as performed in the StrategyManager's deposit functions). In particular, setting the `underlyingToken` of this contract\n to be a fee-on-transfer token will break the assumption that the amount this contract *received* of the token is equal to\n the amount that was input when the transfer was performed (i.e. the amount transferred 'out' of the depositor's balance).\n @return newShares is the number of new shares issued at the current exchange ratio."
            },
            "functionSelector": "47e7ef24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14323,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14221,
                    "src": "5599:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 14324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14322,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "5581:17:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "5581:34:34"
              },
              {
                "id": 14326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14325,
                  "name": "onlyStrategyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14259,
                  "src": "5616:19:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "5616:19:34"
              }
            ],
            "name": "deposit",
            "nameLocation": "5495:7:34",
            "overrides": {
              "id": 14321,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5572:8:34"
            },
            "parameters": {
              "id": 14320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14317,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5519:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14392,
                  "src": "5512:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14316,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14315,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "5512:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "5512:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14319,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5542:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14392,
                  "src": "5534:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5502:52:34"
            },
            "returnParameters": {
              "id": 14329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14328,
                  "mutability": "mutable",
                  "name": "newShares",
                  "nameLocation": "5653:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14392,
                  "src": "5645:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5645:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5644:19:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14470,
            "nodeType": "FunctionDefinition",
            "src": "7635:1573:34",
            "nodes": [],
            "body": {
              "id": 14469,
              "nodeType": "Block",
              "src": "7822:1386:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14410,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14395,
                        "src": "7909:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14411,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14398,
                        "src": "7920:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14412,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14400,
                        "src": "7927:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14409,
                      "name": "_beforeWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14492,
                      "src": "7891:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 14413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7891:49:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14414,
                  "nodeType": "ExpressionStatement",
                  "src": "7891:49:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        "id": 14418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14416,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14398,
                          "src": "7959:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14417,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14240,
                          "src": "7968:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "7959:24:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374726174656779426173652e77697468647261773a2043616e206f6e6c792077697468647261772074686520737472617465677920746f6b656e",
                        "id": 14419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7985:61:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d7637515a0909b6c87857d16a74403970690c73d6f81cb89503fe64ff084a90",
                          "typeString": "literal_string \"StrategyBase.withdraw: Can only withdraw the strategy token\""
                        },
                        "value": "StrategyBase.withdraw: Can only withdraw the strategy token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d7637515a0909b6c87857d16a74403970690c73d6f81cb89503fe64ff084a90",
                          "typeString": "literal_string \"StrategyBase.withdraw: Can only withdraw the strategy token\""
                        }
                      ],
                      "id": 14415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7951:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7951:96:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14421,
                  "nodeType": "ExpressionStatement",
                  "src": "7951:96:34"
                },
                {
                  "assignments": [
                    14423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14423,
                      "mutability": "mutable",
                      "name": "priorTotalShares",
                      "nameLocation": "8133:16:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14469,
                      "src": "8125:24:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8125:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14425,
                  "initialValue": {
                    "id": 14424,
                    "name": "totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14243,
                    "src": "8152:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8125:38:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14427,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14400,
                          "src": "8195:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 14428,
                          "name": "priorTotalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14423,
                          "src": "8211:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8195:32:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374726174656779426173652e77697468647261773a20616d6f756e74536861726573206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c536861726573",
                        "id": 14430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8241:79:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2432632c0295da69b1e95fa7b82566359fd433686b21ea4132156d21c646fe1a",
                          "typeString": "literal_string \"StrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        },
                        "value": "StrategyBase.withdraw: amountShares must be less than or equal to totalShares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2432632c0295da69b1e95fa7b82566359fd433686b21ea4132156d21c646fe1a",
                          "typeString": "literal_string \"StrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        }
                      ],
                      "id": 14426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8174:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:156:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14432,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:156:34"
                },
                {
                  "assignments": [
                    14435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14435,
                      "mutability": "mutable",
                      "name": "virtualPriorTotalShares",
                      "nameLocation": "8680:23:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14469,
                      "src": "8672:31:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8672:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of amountToSend *mirrors* `sharesToUnderlying(amountShares)`, but is different since the `totalShares` has already\n been decremented. Specifically, notice how we use `priorTotalShares` here instead of `totalShares`.",
                  "id": 14439,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14436,
                      "name": "priorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14423,
                      "src": "8706:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14437,
                      "name": "SHARES_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14228,
                      "src": "8725:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8706:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8672:66:34"
                },
                {
                  "assignments": [
                    14441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14441,
                      "mutability": "mutable",
                      "name": "virtualTokenBalance",
                      "nameLocation": "8756:19:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14469,
                      "src": "8748:27:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14440,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8748:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14446,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14442,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14653,
                        "src": "8778:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 14443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8778:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14444,
                      "name": "BALANCE_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14232,
                      "src": "8796:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8778:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8748:62:34"
                },
                {
                  "assignments": [
                    14448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14448,
                      "mutability": "mutable",
                      "name": "amountToSend",
                      "nameLocation": "8934:12:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14469,
                      "src": "8926:20:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8926:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14455,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14449,
                            "name": "virtualTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14441,
                            "src": "8950:19:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 14450,
                            "name": "amountShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14400,
                            "src": "8972:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8950:34:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14452,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8949:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 14453,
                      "name": "virtualPriorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14435,
                      "src": "8988:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8949:62:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8926:85:34"
                },
                {
                  "expression": {
                    "id": 14460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14456,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14243,
                      "src": "9092:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14457,
                        "name": "priorTotalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14423,
                        "src": "9106:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 14458,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14400,
                        "src": "9125:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9106:31:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9092:45:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14461,
                  "nodeType": "ExpressionStatement",
                  "src": "9092:45:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14465,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14395,
                        "src": "9177:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14466,
                        "name": "amountToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14448,
                        "src": "9188:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 14462,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14240,
                        "src": "9148:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 14464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59892,
                      "src": "9148:28:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$59726_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$59726_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 14467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9148:53:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14468,
                  "nodeType": "ExpressionStatement",
                  "src": "9148:53:34"
                }
              ]
            },
            "baseFunctions": [
              8059
            ],
            "documentation": {
              "id": 14393,
              "nodeType": "StructuredDocumentation",
              "src": "7112:518:34",
              "text": " @notice Used to withdraw tokens from this Strategy, to the `recipient`'s address\n @param recipient is the address to receive the withdrawn funds\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n other functions, and individual share balances are recorded in the strategyManager as well."
            },
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14404,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14224,
                    "src": "7782:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 14405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14403,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "7764:17:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "7764:37:34"
              },
              {
                "id": 14407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14406,
                  "name": "onlyStrategyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14259,
                  "src": "7802:19:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "7802:19:34"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7644:8:34",
            "overrides": {
              "id": 14402,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7755:8:34"
            },
            "parameters": {
              "id": 14401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14395,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7670:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14470,
                  "src": "7662:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7662:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14398,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7696:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14470,
                  "src": "7689:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14396,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "7689:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "7689:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14400,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "7719:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14470,
                  "src": "7711:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7711:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7652:85:34"
            },
            "returnParameters": {
              "id": 14408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7822:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14480,
            "nodeType": "FunctionDefinition",
            "src": "9529:73:34",
            "nodes": [],
            "body": {
              "id": 14479,
              "nodeType": "Block",
              "src": "9600:2:34",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 14471,
              "nodeType": "StructuredDocumentation",
              "src": "9214:261:34",
              "text": " @notice Called in the external `deposit` function, before any logic is executed. Expected to be overridden if strategies want such logic.\n @param token The token being deposited\n @param amount The amount of `token` being deposited"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeDeposit",
            "nameLocation": "9538:14:34",
            "parameters": {
              "id": 14477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14474,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9560:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14480,
                  "src": "9553:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14472,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "9553:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "9553:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14476,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9575:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14480,
                  "src": "9567:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9567:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9552:30:34"
            },
            "returnParameters": {
              "id": 14478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9600:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14492,
            "nodeType": "FunctionDefinition",
            "src": "10005:101:34",
            "nodes": [],
            "body": {
              "id": 14491,
              "nodeType": "Block",
              "src": "10104:2:34",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 14481,
              "nodeType": "StructuredDocumentation",
              "src": "9608:343:34",
              "text": " @notice Called in the external `withdraw` function, before any logic is executed.  Expected to be overridden if strategies want such logic.\n @param recipient The address that will receive the withdrawn tokens\n @param token The token being withdrawn\n @param amountShares The amount of shares being withdrawn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeWithdrawal",
            "nameLocation": "10014:17:34",
            "parameters": {
              "id": 14489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14483,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "10040:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14492,
                  "src": "10032:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10032:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14486,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10058:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14492,
                  "src": "10051:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14485,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14484,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "10051:6:34"
                    },
                    "referencedDeclaration": 59726,
                    "src": "10051:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14488,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "10073:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14492,
                  "src": "10065:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10065:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10031:55:34"
            },
            "returnParameters": {
              "id": 14490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10104:0:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14502,
            "nodeType": "FunctionDefinition",
            "src": "10314:181:34",
            "nodes": [],
            "body": {
              "id": 14501,
              "nodeType": "Block",
              "src": "10392:103:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "4261736520537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73",
                    "id": 14499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10409:79:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0437a003e681b7c2faf3932a777c6246476a8d19a43f49476b73e6d9a49dc7d5",
                      "typeString": "literal_string \"Base Strategy implementation to inherit from for more complex implementations\""
                    },
                    "value": "Base Strategy implementation to inherit from for more complex implementations"
                  },
                  "functionReturnParameters": 14498,
                  "id": 14500,
                  "nodeType": "Return",
                  "src": "10402:86:34"
                }
              ]
            },
            "baseFunctions": [
              8134
            ],
            "documentation": {
              "id": 14493,
              "nodeType": "StructuredDocumentation",
              "src": "10112:197:34",
              "text": " @notice Currently returns a brief string explaining the strategy's goal & purpose, but for more complex\n strategies, may be a link to metadata that explains in more detail."
            },
            "functionSelector": "ab5921e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "explanation",
            "nameLocation": "10323:11:34",
            "overrides": {
              "id": 14495,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10359:8:34"
            },
            "parameters": {
              "id": 14494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:2:34"
            },
            "returnParameters": {
              "id": 14498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14502,
                  "src": "10377:13:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10376:15:34"
            },
            "scope": 14659,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14532,
            "nodeType": "FunctionDefinition",
            "src": "11035:476:34",
            "nodes": [],
            "body": {
              "id": 14531,
              "nodeType": "Block",
              "src": "11136:375:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14512,
                      "mutability": "mutable",
                      "name": "virtualTotalShares",
                      "nameLocation": "11204:18:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14531,
                      "src": "11196:26:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11196:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14516,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14513,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14243,
                      "src": "11225:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14514,
                      "name": "SHARES_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14228,
                      "src": "11239:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11225:27:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11196:56:34"
                },
                {
                  "assignments": [
                    14518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14518,
                      "mutability": "mutable",
                      "name": "virtualTokenBalance",
                      "nameLocation": "11270:19:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14531,
                      "src": "11262:27:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11262:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14523,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14519,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14653,
                        "src": "11292:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 14520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11292:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14521,
                      "name": "BALANCE_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14232,
                      "src": "11310:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11292:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11262:62:34"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14524,
                            "name": "virtualTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14518,
                            "src": "11448:19:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 14525,
                            "name": "amountShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14505,
                            "src": "11470:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11448:34:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14527,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11447:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 14528,
                      "name": "virtualTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14512,
                      "src": "11486:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11447:57:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14510,
                  "id": 14530,
                  "nodeType": "Return",
                  "src": "11440:64:34"
                }
              ]
            },
            "baseFunctions": [
              8099
            ],
            "documentation": {
              "id": 14503,
              "nodeType": "StructuredDocumentation",
              "src": "10501:529:34",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @return The amount of underlying tokens corresponding to the input `amountShares`\n @dev Implementation for these functions in particular may vary significantly for different strategies"
            },
            "functionSelector": "7a8b2637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlyingView",
            "nameLocation": "11044:22:34",
            "overrides": {
              "id": 14507,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11109:8:34"
            },
            "parameters": {
              "id": 14506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14505,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "11075:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14532,
                  "src": "11067:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11067:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11066:22:34"
            },
            "returnParameters": {
              "id": 14510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14532,
                  "src": "11127:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11127:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11126:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14546,
            "nodeType": "FunctionDefinition",
            "src": "12054:157:34",
            "nodes": [],
            "body": {
              "id": 14545,
              "nodeType": "Block",
              "src": "12151:60:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14542,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14535,
                        "src": "12191:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14541,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14532,
                      "src": "12168:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 14543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12168:36:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14540,
                  "id": 14544,
                  "nodeType": "Return",
                  "src": "12161:43:34"
                }
              ]
            },
            "baseFunctions": [
              8067
            ],
            "documentation": {
              "id": 14533,
              "nodeType": "StructuredDocumentation",
              "src": "11517:532:34",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @return The amount of underlying tokens corresponding to the input `amountShares`\n @dev Implementation for these functions in particular may vary significantly for different strategies"
            },
            "functionSelector": "f3e73875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlying",
            "nameLocation": "12063:18:34",
            "overrides": {
              "id": 14537,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12124:8:34"
            },
            "parameters": {
              "id": 14536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14535,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "12090:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14546,
                  "src": "12082:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12082:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12081:22:34"
            },
            "returnParameters": {
              "id": 14540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14546,
                  "src": "12142:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12142:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12141:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14575,
            "nodeType": "FunctionDefinition",
            "src": "12754:475:34",
            "nodes": [],
            "body": {
              "id": 14574,
              "nodeType": "Block",
              "src": "12850:379:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14555,
                      "mutability": "mutable",
                      "name": "virtualTotalShares",
                      "nameLocation": "12918:18:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14574,
                      "src": "12910:26:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12910:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14559,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14556,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14243,
                      "src": "12939:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14557,
                      "name": "SHARES_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14228,
                      "src": "12953:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12939:27:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12910:56:34"
                },
                {
                  "assignments": [
                    14561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14561,
                      "mutability": "mutable",
                      "name": "virtualTokenBalance",
                      "nameLocation": "12984:19:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 14574,
                      "src": "12976:27:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14560,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12976:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14566,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14562,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14653,
                        "src": "13006:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 14563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13006:15:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 14564,
                      "name": "BALANCE_OFFSET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14232,
                      "src": "13024:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13006:32:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12976:62:34"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14567,
                            "name": "amountUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14549,
                            "src": "13162:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 14568,
                            "name": "virtualTotalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14555,
                            "src": "13181:18:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13162:37:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14570,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13161:39:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 14571,
                      "name": "virtualTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14561,
                      "src": "13203:19:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13161:61:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14553,
                  "id": 14573,
                  "nodeType": "Return",
                  "src": "13154:68:34"
                }
              ]
            },
            "baseFunctions": [
              8107
            ],
            "documentation": {
              "id": 14547,
              "nodeType": "StructuredDocumentation",
              "src": "12217:532:34",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @return The amount of shares corresponding to the input `amountUnderlying`\n @dev Implementation for these functions in particular may vary significantly for different strategies"
            },
            "functionSelector": "e3dae51c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToSharesView",
            "nameLocation": "12763:22:34",
            "parameters": {
              "id": 14550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14549,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "12794:16:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14575,
                  "src": "12786:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12786:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12785:26:34"
            },
            "returnParameters": {
              "id": 14553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14575,
                  "src": "12841:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12841:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12840:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14588,
            "nodeType": "FunctionDefinition",
            "src": "13775:158:34",
            "nodes": [],
            "body": {
              "id": 14587,
              "nodeType": "Block",
              "src": "13869:64:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14584,
                        "name": "amountUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14578,
                        "src": "13909:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14583,
                      "name": "underlyingToSharesView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14575,
                      "src": "13886:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 14585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13886:40:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14582,
                  "id": 14586,
                  "nodeType": "Return",
                  "src": "13879:47:34"
                }
              ]
            },
            "baseFunctions": [
              8075
            ],
            "documentation": {
              "id": 14576,
              "nodeType": "StructuredDocumentation",
              "src": "13235:535:34",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @return The amount of shares corresponding to the input `amountUnderlying`\n @dev Implementation for these functions in particular may vary significantly for different strategies"
            },
            "functionSelector": "8c871019",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToShares",
            "nameLocation": "13784:18:34",
            "parameters": {
              "id": 14579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14578,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "13811:16:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14588,
                  "src": "13803:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13803:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13802:26:34"
            },
            "returnParameters": {
              "id": 14582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14588,
                  "src": "13860:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13860:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13859:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14603,
            "nodeType": "FunctionDefinition",
            "src": "14169:142:34",
            "nodes": [],
            "body": {
              "id": 14602,
              "nodeType": "Block",
              "src": "14251:60:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14598,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14591,
                            "src": "14298:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14597,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "14291:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 14599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14291:12:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14596,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14532,
                      "src": "14268:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 14600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14268:36:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14595,
                  "id": 14601,
                  "nodeType": "Return",
                  "src": "14261:43:34"
                }
              ]
            },
            "baseFunctions": [
              8115
            ],
            "documentation": {
              "id": 14589,
              "nodeType": "StructuredDocumentation",
              "src": "13939:225:34",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
            },
            "functionSelector": "553ca5f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlyingView",
            "nameLocation": "14178:18:34",
            "parameters": {
              "id": 14592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14591,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "14205:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14603,
                  "src": "14197:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14197:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14196:14:34"
            },
            "returnParameters": {
              "id": 14595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14603,
                  "src": "14242:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14242:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14241:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14618,
            "nodeType": "FunctionDefinition",
            "src": "14550:129:34",
            "nodes": [],
            "body": {
              "id": 14617,
              "nodeType": "Block",
              "src": "14623:56:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14613,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14606,
                            "src": "14666:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14612,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "14659:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 14614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14659:12:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14611,
                      "name": "sharesToUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14546,
                      "src": "14640:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 14615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14640:32:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14610,
                  "id": 14616,
                  "nodeType": "Return",
                  "src": "14633:39:34"
                }
              ]
            },
            "baseFunctions": [
              8083
            ],
            "documentation": {
              "id": 14604,
              "nodeType": "StructuredDocumentation",
              "src": "14317:228:34",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
            },
            "functionSelector": "8f6a6240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlying",
            "nameLocation": "14559:14:34",
            "parameters": {
              "id": 14607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14606,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "14582:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14618,
                  "src": "14574:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14574:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14573:14:34"
            },
            "returnParameters": {
              "id": 14610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14618,
                  "src": "14614:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14614:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14613:9:34"
            },
            "scope": 14659,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 14638,
            "nodeType": "FunctionDefinition",
            "src": "14853:160:34",
            "nodes": [],
            "body": {
              "id": 14637,
              "nodeType": "Block",
              "src": "14921:92:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14628,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14621,
                        "src": "14975:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 14632,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14999:4:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StrategyBase_$14659",
                                  "typeString": "contract StrategyBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StrategyBase_$14659",
                                  "typeString": "contract StrategyBase"
                                }
                              ],
                              "id": 14631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14991:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14991:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 14633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14991:13:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14629,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8135,
                          "src": "14981:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$8135_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 14634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14981:24:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "expression": {
                        "id": 14626,
                        "name": "strategyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14236,
                        "src": "14938:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                          "typeString": "contract IStrategyManager"
                        }
                      },
                      "id": 14627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakerStrategyShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8266,
                      "src": "14938:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IStrategy_$8135_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IStrategy) view external returns (uint256)"
                      }
                    },
                    "id": 14635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14938:68:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14625,
                  "id": 14636,
                  "nodeType": "Return",
                  "src": "14931:75:34"
                }
              ]
            },
            "baseFunctions": [
              8091
            ],
            "documentation": {
              "id": 14619,
              "nodeType": "StructuredDocumentation",
              "src": "14685:163:34",
              "text": " @notice convenience function for fetching the current total shares of `user` in this strategy, by\n querying the `strategyManager` contract"
            },
            "functionSelector": "ce7c2ac2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "14862:6:34",
            "parameters": {
              "id": 14622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14621,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "14877:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 14638,
                  "src": "14869:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14869:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14868:14:34"
            },
            "returnParameters": {
              "id": 14625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14638,
                  "src": "14912:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14912:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14911:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14653,
            "nodeType": "FunctionDefinition",
            "src": "15164:129:34",
            "nodes": [],
            "body": {
              "id": 14652,
              "nodeType": "Block",
              "src": "15229:64:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14648,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15280:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyBase_$14659",
                              "typeString": "contract StrategyBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyBase_$14659",
                              "typeString": "contract StrategyBase"
                            }
                          ],
                          "id": 14647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15272:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15272:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15272:13:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14644,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14240,
                        "src": "15246:15:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 14645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59683,
                      "src": "15246:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 14650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15246:40:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14643,
                  "id": 14651,
                  "nodeType": "Return",
                  "src": "15239:47:34"
                }
              ]
            },
            "documentation": {
              "id": 14639,
              "nodeType": "StructuredDocumentation",
              "src": "15019:97:34",
              "text": "@notice Internal function used to fetch this contract's current balance of `underlyingToken`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tokenBalance",
            "nameLocation": "15173:13:34",
            "parameters": {
              "id": 14640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15186:2:34"
            },
            "returnParameters": {
              "id": 14643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14653,
                  "src": "15220:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15220:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15219:9:34"
            },
            "scope": 14659,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14658,
            "nodeType": "VariableDeclaration",
            "src": "15558:25:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14654,
              "nodeType": "StructuredDocumentation",
              "src": "15299:254:34",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "15578:5:34",
            "scope": 14659,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$48_storage",
              "typeString": "uint256[48]"
            },
            "typeName": {
              "baseType": {
                "id": 14655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "15558:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 14657,
              "length": {
                "hexValue": "3438",
                "id": 14656,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "15566:2:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "nodeType": "ArrayTypeName",
              "src": "15558:11:34",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$48_storage_ptr",
                "typeString": "uint256[48]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14209,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57298,
              "src": "2205:13:34"
            },
            "id": 14210,
            "nodeType": "InheritanceSpecifier",
            "src": "2205:13:34"
          },
          {
            "baseName": {
              "id": 14211,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "2220:8:34"
            },
            "id": 14212,
            "nodeType": "InheritanceSpecifier",
            "src": "2220:8:34"
          },
          {
            "baseName": {
              "id": 14213,
              "name": "IStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8135,
              "src": "2230:9:34"
            },
            "id": 14214,
            "nodeType": "InheritanceSpecifier",
            "src": "2230:9:34"
          }
        ],
        "canonicalName": "StrategyBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14208,
          "nodeType": "StructuredDocumentation",
          "src": "343:1836:34",
          "text": " @title Base implementation of `IStrategy` interface, designed to be inherited from by more complex strategies.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice Simple, basic, \"do-nothing\" Strategy that holds a single underlying token and returns it on withdrawals.\n Implements minimal versions of the IStrategy functions, this contract is designed to be inherited by\n more complex strategies, which can then override its functions as necessary.\n @dev Note that some functions have their mutability restricted; developers inheriting from this contract cannot broaden\n the mutability without modifying this contract itself.\n @dev This contract is expressly *not* intended for use with 'fee-on-transfer'-type tokens.\n Setting the `underlyingToken` to be a fee-on-transfer token may result in improper accounting.\n @notice This contract functions similarly to an ERC4626 vault, only without issuing a token.\n To mitigate against the common \"inflation attack\" vector, we have chosen to use the 'virtual shares' mitigation route,\n similar to [OpenZeppelin](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/ERC4626.sol).\n We acknowledge that this mitigation has the known downside of the virtual shares causing some losses to users, which are pronounced\n particularly in the case of the share exchange rate changing signficantly, either positively or negatively.\n For a fairly thorough discussion of this issue and our chosen mitigation strategy, we recommend reading through\n [this thread](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3706) on the OpenZeppelin repo.\n We specifically use a share offset of `SHARES_OFFSET` and a balance offset of `BALANCE_OFFSET`."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14659,
          8135,
          10782,
          7748,
          57298
        ],
        "name": "StrategyBase",
        "nameLocation": "2189:12:34",
        "scope": 14660,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 34
}