{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        }
      ],
      "name": "MinimumStakeForQuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "name": "OperatorStakeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "QuorumCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "StrategyMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromQuorum",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WEIGHTING_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "addStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "deregisterOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentTotalStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getLatestStakeUpdate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeAtBlockNumberAndIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getStakeHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeUpdateIndexAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeAtBlockNumberFromIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getTotalStakeHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "getTotalStakeIndicesAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "initializeQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "minimumStakeForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "strategyIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "newMultipliers",
          "type": "uint96[]"
        }
      ],
      "name": "modifyStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "registerOperator",
      "outputs": [
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        },
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registryCoordinator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "indicesToRemove",
          "type": "uint256[]"
        }
      ],
      "name": "removeStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "strategyParamsByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "strategyParamsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "updateOperatorStake",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "weightOfOperatorForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WEIGHTING_DIVISOR()": "5e5a6775",
    "addStrategies(uint8,(address,uint96)[])": "c601527d",
    "delegation()": "df5cf723",
    "deregisterOperator(bytes32,bytes)": "bd29b8cd",
    "getCurrentStake(bytes32,uint8)": "5401ed27",
    "getCurrentTotalStake(uint8)": "d5eccc05",
    "getLatestStakeUpdate(bytes32,uint8)": "f851e198",
    "getStakeAtBlockNumber(bytes32,uint8,uint32)": "fa28c627",
    "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": "f2be94ae",
    "getStakeHistory(bytes32,uint8)": "2cd95940",
    "getStakeUpdateAtIndex(uint8,bytes32,uint256)": "ac6bfb03",
    "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": "dd9846b9",
    "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": "c8294c56",
    "getTotalStakeHistoryLength(uint8)": "0491b41c",
    "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": "81c07502",
    "getTotalStakeUpdateAtIndex(uint8,uint256)": "b6904b78",
    "initializeQuorum(uint8,uint96,(address,uint96)[])": "ff694a77",
    "minimumStakeForQuorum(uint8)": "c46778a5",
    "modifyStrategyParams(uint8,uint256[],uint96[])": "20b66298",
    "registerOperator(address,bytes32,bytes)": "25504777",
    "registryCoordinator()": "6d14a987",
    "removeStrategies(uint8,uint256[])": "5f1f2d77",
    "strategyParamsByIndex(uint8,uint256)": "adc804da",
    "strategyParamsLength(uint8)": "3ca5a5f5",
    "updateOperatorStake(address,bytes32,bytes)": "66acfefe",
    "weightOfOperatorForQuorum(uint8,address)": "1f9b74e0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"updateOperatorStake\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deregisterOperator(bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Function returns weight of **0** in the event that the operator has no stake history\"},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"are the new multipliers for the strategies\",\"quorumNumber\":\"is the quorum number to change the strategy for\",\"strategyIndices\":\"are the indices of the strategies to change\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum, and the total stake for each quorum\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove\",\"params\":{\"quorumNumber\":\".\"}},\"updateOperatorStake(address,bytes32,bytes)\":{\"returns\":{\"_0\":\"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`\"}},\"title\":\"Interface for a `Registry` that keeps track of stakes of operators for up to 256 quorums.\",\"version\":1},\"userdoc\":{\"events\":{\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"emitted when the minimum stake for a quorum is updated\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"QuorumCreated(uint8)\":{\"notice\":\"emitted when a new quorum is created\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds new strategies and the associated multipliers to the @param quorumNumber.\"},\"delegation()\":{\"notice\":\"Returns the EigenLayer delegation manager contract.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for a certain quorum\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry  corresponds to the operator's stake at `blockNumber`. Reverts otherwise.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the  `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`.  Reverts otherwise.\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`.\"},\"initializeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"This function is used for modifying the weights of strategies that are already in the mapping strategyParams for a specific\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"This function is used for removing strategies and their associated weights from the\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"notice\":\"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IStakeRegistry.sol\":\"IStakeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinimumStakeForQuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorStakeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "QuorumCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToQuorum",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "multiplier",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyMultiplierUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromQuorum",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "WEIGHTING_DIVISOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategies"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTotalStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestStakeUpdate",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumberAndIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeHistory",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateIndexAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeAtBlockNumberFromIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeIndicesAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumStakeForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "strategyIndices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "newMultipliers",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerOperator",
          "outputs": [
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCoordinator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "indicesToRemove",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsByIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorStake",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightOfOperatorForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deregisterOperator(bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for",
            "params": {
              "operatorId": "The id of the operator to deregister.",
              "quorumNumbers": "The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."
            }
          },
          "getCurrentStake(bytes32,uint8)": {
            "details": "Function returns weight of **0** in the event that the operator has no stake history"
          },
          "getCurrentTotalStake(uint8)": {
            "details": "Will revert if `_totalStakeHistory[quorumNumber]` is empty."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "details": "Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeHistory(bytes32,uint8)": {
            "params": {
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "index": "Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "params": {
              "index": "Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "params": {
              "newMultipliers": "are the new multipliers for the strategies",
              "quorumNumber": "is the quorum number to change the strategy for",
              "strategyIndices": "are the indices of the strategies to change"
            }
          },
          "registerOperator(address,bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered",
            "params": {
              "operator": "The address of the operator to register.",
              "operatorId": "The id of the operator to register.",
              "quorumNumbers": "The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."
            },
            "returns": {
              "_0": "The operator's current stake for each quorum, and the total stake for each quorum"
            }
          },
          "removeStrategies(uint8,uint256[])": {
            "details": "higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove",
            "params": {
              "quorumNumber": "."
            }
          },
          "updateOperatorStake(address,bytes32,bytes)": {
            "returns": {
              "_0": "A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered."
            }
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "details": "reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "WEIGHTING_DIVISOR()": {
            "notice": "Constant used as a divisor in calculating weights."
          },
          "addStrategies(uint8,(address,uint96)[])": {
            "notice": "Adds new strategies and the associated multipliers to the @param quorumNumber."
          },
          "delegation()": {
            "notice": "Returns the EigenLayer delegation manager contract."
          },
          "deregisterOperator(bytes32,bytes)": {
            "notice": "Deregisters the operator with `operatorId` for the specified `quorumNumbers`."
          },
          "getCurrentStake(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`"
          },
          "getCurrentTotalStake(uint8)": {
            "notice": "Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for a certain quorum"
          },
          "getStakeAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "notice": "Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry  corresponds to the operator's stake at `blockNumber`. Reverts otherwise."
          },
          "getStakeHistory(bytes32,uint8)": {
            "notice": "Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "notice": "Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "notice": "Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the  `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`.  Reverts otherwise."
          },
          "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": {
            "notice": "Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "notice": "Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`."
          },
          "initializeQuorum(uint8,uint96,(address,uint96)[])": {
            "notice": "Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake"
          },
          "minimumStakeForQuorum(uint8)": {
            "notice": "In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`"
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "notice": "This function is used for modifying the weights of strategies that are already in the mapping strategyParams for a specific"
          },
          "registerOperator(address,bytes32,bytes)": {
            "notice": "Registers the `operator` with `operatorId` for the specified `quorumNumbers`."
          },
          "removeStrategies(uint8,uint256[])": {
            "notice": "This function is used for removing strategies and their associated weights from the"
          },
          "strategyParamsByIndex(uint8,uint256)": {
            "notice": "Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"
          },
          "strategyParamsLength(uint8)": {
            "notice": "Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."
          },
          "updateOperatorStake(address,bytes32,bytes)": {
            "notice": "Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the"
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "notice": "This function computes the total weight of the @param operator in the quorum @param quorumNumber."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IStakeRegistry.sol": "IStakeRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IStakeRegistry.sol",
    "id": 71148,
    "exportedSymbols": {
      "IDelegationManager": [
        7102
      ],
      "IRegistry": [
        70498
      ],
      "IStakeRegistry": [
        71147
      ],
      "IStrategy": [
        8135
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:12434:110",
    "nodes": [
      {
        "id": 70814,
        "nodeType": "PragmaDirective",
        "src": "37:24:110",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 70816,
        "nodeType": "ImportDirective",
        "src": "63:104:110",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol",
        "file": "eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71148,
        "sourceUnit": 7103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70815,
              "name": "IDelegationManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7102,
              "src": "71:18:110",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IDelegationManager_$7102_$",
                "typeString": "type(contract IDelegationManager)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70818,
        "nodeType": "ImportDirective",
        "src": "168:86:110",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol",
        "file": "eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71148,
        "sourceUnit": 8136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70817,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8135,
              "src": "176:9:110",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IStrategy_$8135_$",
                "typeString": "type(contract IStrategy)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70820,
        "nodeType": "ImportDirective",
        "src": "256:42:110",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistry.sol",
        "file": "./IRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71148,
        "sourceUnit": 70499,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70819,
              "name": "IRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70498,
              "src": "264:9:110",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IRegistry_$70498_$",
                "typeString": "type(contract IRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 71147,
        "nodeType": "ContractDefinition",
        "src": "435:12036:110",
        "nodes": [
          {
            "id": 70831,
            "nodeType": "StructDefinition",
            "src": "631:388:110",
            "nodes": [],
            "canonicalName": "IStakeRegistry.StakeUpdate",
            "members": [
              {
                "constant": false,
                "id": 70825,
                "mutability": "mutable",
                "name": "updateBlockNumber",
                "nameLocation": "746:17:110",
                "nodeType": "VariableDeclaration",
                "scope": 70831,
                "src": "739:24:110",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 70824,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:6:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70828,
                "mutability": "mutable",
                "name": "nextUpdateBlockNumber",
                "nameLocation": "930:21:110",
                "nodeType": "VariableDeclaration",
                "scope": 70831,
                "src": "923:28:110",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 70827,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:6:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70830,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "1007:5:110",
                "nodeType": "VariableDeclaration",
                "scope": 70831,
                "src": "1000:12:110",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 70829,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:6:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakeUpdate",
            "nameLocation": "638:11:110",
            "scope": 71147,
            "visibility": "public"
          },
          {
            "id": 70837,
            "nodeType": "StructDefinition",
            "src": "1214:84:110",
            "nodes": [],
            "canonicalName": "IStakeRegistry.StrategyParams",
            "members": [
              {
                "constant": false,
                "id": 70834,
                "mutability": "mutable",
                "name": "strategy",
                "nameLocation": "1256:8:110",
                "nodeType": "VariableDeclaration",
                "scope": 70837,
                "src": "1246:18:110",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                  "typeString": "contract IStrategy"
                },
                "typeName": {
                  "id": 70833,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 70832,
                    "name": "IStrategy",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8135,
                    "src": "1246:9:110"
                  },
                  "referencedDeclaration": 8135,
                  "src": "1246:9:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70836,
                "mutability": "mutable",
                "name": "multiplier",
                "nameLocation": "1281:10:110",
                "nodeType": "VariableDeclaration",
                "scope": 70837,
                "src": "1274:17:110",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 70835,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1274:6:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyParams",
            "nameLocation": "1221:14:110",
            "scope": 71147,
            "visibility": "public"
          },
          {
            "id": 70846,
            "nodeType": "EventDefinition",
            "src": "1387:118:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70838,
              "nodeType": "StructuredDocumentation",
              "src": "1319:63:110",
              "text": "@notice emitted whenever the stake of `operator` is updated"
            },
            "name": "OperatorStakeUpdate",
            "nameLocation": "1393:19:110",
            "parameters": {
              "id": 70845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "1438:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70846,
                  "src": "1422:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70839,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "1464:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70846,
                  "src": "1458:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70841,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "1493:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70846,
                  "src": "1486:12:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 70843,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:92:110"
            }
          },
          {
            "id": 70853,
            "nodeType": "EventDefinition",
            "src": "1581:84:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70847,
              "nodeType": "StructuredDocumentation",
              "src": "1510:66:110",
              "text": "@notice emitted when the minimum stake for a quorum is updated"
            },
            "name": "MinimumStakeForQuorumUpdated",
            "nameLocation": "1587:28:110",
            "parameters": {
              "id": 70852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70849,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "1630:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70853,
                  "src": "1616:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70848,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70851,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minimumStake",
                  "nameLocation": "1651:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70853,
                  "src": "1644:19:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 70850,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:49:110"
            }
          },
          {
            "id": 70858,
            "nodeType": "EventDefinition",
            "src": "1723:48:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70854,
              "nodeType": "StructuredDocumentation",
              "src": "1670:48:110",
              "text": "@notice emitted when a new quorum is created"
            },
            "name": "QuorumCreated",
            "nameLocation": "1729:13:110",
            "parameters": {
              "id": 70857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "1757:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70858,
                  "src": "1743:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70855,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:28:110"
            }
          },
          {
            "id": 70866,
            "nodeType": "EventDefinition",
            "src": "1878:76:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70859,
              "nodeType": "StructuredDocumentation",
              "src": "1776:97:110",
              "text": "@notice emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`"
            },
            "name": "StrategyAddedToQuorum",
            "nameLocation": "1884:21:110",
            "parameters": {
              "id": 70865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70861,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "1920:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70866,
                  "src": "1906:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70860,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1944:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70866,
                  "src": "1934:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 70863,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70862,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "1934:9:110"
                    },
                    "referencedDeclaration": 8135,
                    "src": "1934:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1905:48:110"
            }
          },
          {
            "id": 70874,
            "nodeType": "EventDefinition",
            "src": "2060:80:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70867,
              "nodeType": "StructuredDocumentation",
              "src": "1959:96:110",
              "text": "@notice emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`"
            },
            "name": "StrategyRemovedFromQuorum",
            "nameLocation": "2066:25:110",
            "parameters": {
              "id": 70873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70869,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "2106:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70874,
                  "src": "2092:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70868,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2130:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70874,
                  "src": "2120:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 70871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70870,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "2120:9:110"
                    },
                    "referencedDeclaration": 8135,
                    "src": "2120:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:48:110"
            }
          },
          {
            "id": 70884,
            "nodeType": "EventDefinition",
            "src": "2261:100:110",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70875,
              "nodeType": "StructuredDocumentation",
              "src": "2145:111:110",
              "text": "@notice emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`"
            },
            "name": "StrategyMultiplierUpdated",
            "nameLocation": "2267:25:110",
            "parameters": {
              "id": 70883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70877,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "2307:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70884,
                  "src": "2293:26:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70876,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2331:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70884,
                  "src": "2321:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 70879,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70878,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "2321:9:110"
                    },
                    "referencedDeclaration": 8135,
                    "src": "2321:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "multiplier",
                  "nameLocation": "2349:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70884,
                  "src": "2341:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:68:110"
            }
          },
          {
            "id": 70900,
            "nodeType": "FunctionDefinition",
            "src": "3183:176:110",
            "nodes": [],
            "documentation": {
              "id": 70885,
              "nodeType": "StructuredDocumentation",
              "src": "2367:811:110",
              "text": " @notice Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\n @param operator The address of the operator to register.\n @param operatorId The id of the operator to register.\n @param quorumNumbers The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\n @return The operator's current stake for each quorum, and the total stake for each quorum\n @dev access restricted to the RegistryCoordinator\n @dev Preconditions (these are assumed, not validated in this contract):\n         1) `quorumNumbers` has no duplicates\n         2) `quorumNumbers.length` != 0\n         3) `quorumNumbers` is ordered in ascending order\n         4) the operator is not already registered"
            },
            "functionSelector": "25504777",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerOperator",
            "nameLocation": "3192:16:110",
            "parameters": {
              "id": 70892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70887,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3226:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70900,
                  "src": "3218:16:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70889,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "3253:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70900,
                  "src": "3245:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70888,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70891,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "3287:13:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70900,
                  "src": "3274:26:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 70890,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:98:110"
            },
            "returnParameters": {
              "id": 70899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70900,
                  "src": "3325:15:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70893,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "3325:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 70894,
                    "nodeType": "ArrayTypeName",
                    "src": "3325:8:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70900,
                  "src": "3342:15:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70896,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "3342:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 70897,
                    "nodeType": "ArrayTypeName",
                    "src": "3342:8:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3324:34:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70908,
            "nodeType": "FunctionDefinition",
            "src": "4130:85:110",
            "nodes": [],
            "documentation": {
              "id": 70901,
              "nodeType": "StructuredDocumentation",
              "src": "3365:760:110",
              "text": " @notice Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\n @param operatorId The id of the operator to deregister.\n @param quorumNumbers The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\n @dev access restricted to the RegistryCoordinator\n @dev Preconditions (these are assumed, not validated in this contract):\n         1) `quorumNumbers` has no duplicates\n         2) `quorumNumbers.length` != 0\n         3) `quorumNumbers` is ordered in ascending order\n         4) the operator is not already deregistered\n         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for"
            },
            "functionSelector": "bd29b8cd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deregisterOperator",
            "nameLocation": "4139:18:110",
            "parameters": {
              "id": 70906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70903,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "4166:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70908,
                  "src": "4158:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70902,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70905,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "4191:13:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70908,
                  "src": "4178:26:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 70904,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4157:48:110"
            },
            "returnParameters": {
              "id": 70907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4214:0:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70920,
            "nodeType": "FunctionDefinition",
            "src": "4362:116:110",
            "nodes": [],
            "documentation": {
              "id": 70909,
              "nodeType": "StructuredDocumentation",
              "src": "4221:136:110",
              "text": " @notice Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake"
            },
            "functionSelector": "ff694a77",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initializeQuorum",
            "nameLocation": "4371:16:110",
            "parameters": {
              "id": 70918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70911,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "4394:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70920,
                  "src": "4388:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70910,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70913,
                  "mutability": "mutable",
                  "name": "minimumStake",
                  "nameLocation": "4415:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70920,
                  "src": "4408:19:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 70912,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4408:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70917,
                  "mutability": "mutable",
                  "name": "strategyParams",
                  "nameLocation": "4453:14:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70920,
                  "src": "4429:38:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70915,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 70914,
                        "name": "StrategyParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70837,
                        "src": "4429:14:110"
                      },
                      "referencedDeclaration": 70837,
                      "src": "4429:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                        "typeString": "struct IStakeRegistry.StrategyParams"
                      }
                    },
                    "id": 70916,
                    "nodeType": "ArrayTypeName",
                    "src": "4429:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4387:81:110"
            },
            "returnParameters": {
              "id": 70919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4477:0:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70930,
            "nodeType": "FunctionDefinition",
            "src": "4579:114:110",
            "nodes": [],
            "documentation": {
              "id": 70921,
              "nodeType": "StructuredDocumentation",
              "src": "4484:90:110",
              "text": "@notice Adds new strategies and the associated multipliers to the @param quorumNumber."
            },
            "functionSelector": "c601527d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addStrategies",
            "nameLocation": "4588:13:110",
            "parameters": {
              "id": 70928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70923,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "4617:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70930,
                  "src": "4611:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70922,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4611:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70927,
                  "mutability": "mutable",
                  "name": "strategyParams",
                  "nameLocation": "4663:14:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70930,
                  "src": "4639:38:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70925,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 70924,
                        "name": "StrategyParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70837,
                        "src": "4639:14:110"
                      },
                      "referencedDeclaration": 70837,
                      "src": "4639:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                        "typeString": "struct IStakeRegistry.StrategyParams"
                      }
                    },
                    "id": 70926,
                    "nodeType": "ArrayTypeName",
                    "src": "4639:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4601:82:110"
            },
            "returnParameters": {
              "id": 70929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4692:0:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70939,
            "nodeType": "FunctionDefinition",
            "src": "5088:91:110",
            "nodes": [],
            "documentation": {
              "id": 70931,
              "nodeType": "StructuredDocumentation",
              "src": "4699:384:110",
              "text": " @notice This function is used for removing strategies and their associated weights from the\n mapping strategyParams for a specific @param quorumNumber.\n @dev higher indices should be *first* in the list of @param indicesToRemove, since otherwise\n the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove"
            },
            "functionSelector": "5f1f2d77",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeStrategies",
            "nameLocation": "5097:16:110",
            "parameters": {
              "id": 70937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70933,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5120:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70939,
                  "src": "5114:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70932,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70936,
                  "mutability": "mutable",
                  "name": "indicesToRemove",
                  "nameLocation": "5153:15:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70939,
                  "src": "5134:34:110",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70934,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5134:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70935,
                    "nodeType": "ArrayTypeName",
                    "src": "5134:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:56:110"
            },
            "returnParameters": {
              "id": 70938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70951,
            "nodeType": "FunctionDefinition",
            "src": "5568:159:110",
            "nodes": [],
            "documentation": {
              "id": 70940,
              "nodeType": "StructuredDocumentation",
              "src": "5185:378:110",
              "text": " @notice This function is used for modifying the weights of strategies that are already in the\n mapping strategyParams for a specific\n @param quorumNumber is the quorum number to change the strategy for\n @param strategyIndices are the indices of the strategies to change\n @param newMultipliers are the new multipliers for the strategies"
            },
            "functionSelector": "20b66298",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyStrategyParams",
            "nameLocation": "5577:20:110",
            "parameters": {
              "id": 70949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70942,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5613:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70951,
                  "src": "5607:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70941,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5607:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70945,
                  "mutability": "mutable",
                  "name": "strategyIndices",
                  "nameLocation": "5654:15:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70951,
                  "src": "5635:34:110",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70943,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5635:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70944,
                    "nodeType": "ArrayTypeName",
                    "src": "5635:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70948,
                  "mutability": "mutable",
                  "name": "newMultipliers",
                  "nameLocation": "5697:14:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70951,
                  "src": "5679:32:110",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_calldata_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70946,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "5679:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 70947,
                    "nodeType": "ArrayTypeName",
                    "src": "5679:8:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5597:120:110"
            },
            "returnParameters": {
              "id": 70950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5726:0:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70957,
            "nodeType": "FunctionDefinition",
            "src": "5800:61:110",
            "nodes": [],
            "documentation": {
              "id": 70952,
              "nodeType": "StructuredDocumentation",
              "src": "5733:62:110",
              "text": "@notice Constant used as a divisor in calculating weights."
            },
            "functionSelector": "5e5a6775",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "WEIGHTING_DIVISOR",
            "nameLocation": "5809:17:110",
            "parameters": {
              "id": 70953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5826:2:110"
            },
            "returnParameters": {
              "id": 70956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70957,
                  "src": "5852:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5851:9:110"
            },
            "scope": 71147,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70964,
            "nodeType": "FunctionDefinition",
            "src": "5935:65:110",
            "nodes": [],
            "documentation": {
              "id": 70958,
              "nodeType": "StructuredDocumentation",
              "src": "5867:63:110",
              "text": "@notice Returns the EigenLayer delegation manager contract."
            },
            "functionSelector": "df5cf723",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegation",
            "nameLocation": "5944:10:110",
            "parameters": {
              "id": 70959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5954:2:110"
            },
            "returnParameters": {
              "id": 70963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70964,
                  "src": "5980:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 70961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70960,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "5980:18:110"
                    },
                    "referencedDeclaration": 7102,
                    "src": "5980:18:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5979:20:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70972,
            "nodeType": "FunctionDefinition",
            "src": "6117:82:110",
            "nodes": [],
            "documentation": {
              "id": 70965,
              "nodeType": "StructuredDocumentation",
              "src": "6006:106:110",
              "text": "@notice In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`"
            },
            "functionSelector": "c46778a5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "minimumStakeForQuorum",
            "nameLocation": "6126:21:110",
            "parameters": {
              "id": 70968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70967,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "6154:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70972,
                  "src": "6148:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70966,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6148:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6147:20:110"
            },
            "returnParameters": {
              "id": 70971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70972,
                  "src": "6191:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 70969,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6190:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70980,
            "nodeType": "FunctionDefinition",
            "src": "6303:82:110",
            "nodes": [],
            "documentation": {
              "id": 70973,
              "nodeType": "StructuredDocumentation",
              "src": "6205:93:110",
              "text": "@notice Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."
            },
            "functionSelector": "3ca5a5f5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParamsLength",
            "nameLocation": "6312:20:110",
            "parameters": {
              "id": 70976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70975,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "6339:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70980,
                  "src": "6333:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70974,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6333:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6332:20:110"
            },
            "returnParameters": {
              "id": 70979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70980,
                  "src": "6376:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6376:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6375:9:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70991,
            "nodeType": "FunctionDefinition",
            "src": "6507:134:110",
            "nodes": [],
            "documentation": {
              "id": 70981,
              "nodeType": "StructuredDocumentation",
              "src": "6391:111:110",
              "text": "@notice Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"
            },
            "functionSelector": "adc804da",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParamsByIndex",
            "nameLocation": "6516:21:110",
            "parameters": {
              "id": 70986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70983,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "6553:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70991,
                  "src": "6547:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70982,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6547:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70985,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6583:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 70991,
                  "src": "6575:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6537:57:110"
            },
            "returnParameters": {
              "id": 70990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70991,
                  "src": "6618:21:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$70837_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams"
                  },
                  "typeName": {
                    "id": 70988,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70987,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70837,
                      "src": "6618:14:110"
                    },
                    "referencedDeclaration": 70837,
                    "src": "6618:14:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6617:23:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71001,
            "nodeType": "FunctionDefinition",
            "src": "6870:104:110",
            "nodes": [],
            "documentation": {
              "id": 70992,
              "nodeType": "StructuredDocumentation",
              "src": "6647:218:110",
              "text": " @notice This function computes the total weight of the @param operator in the quorum @param quorumNumber.\n @dev reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`"
            },
            "functionSelector": "1f9b74e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightOfOperatorForQuorum",
            "nameLocation": "6879:25:110",
            "parameters": {
              "id": 70997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70994,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "6911:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71001,
                  "src": "6905:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70993,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6905:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70996,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6933:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71001,
                  "src": "6925:16:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6925:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6904:38:110"
            },
            "returnParameters": {
              "id": 71000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71001,
                  "src": "6966:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 70998,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6966:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6965:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71013,
            "nodeType": "FunctionDefinition",
            "src": "7218:110:110",
            "nodes": [],
            "documentation": {
              "id": 71002,
              "nodeType": "StructuredDocumentation",
              "src": "6980:233:110",
              "text": " @notice Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\n @param operatorId The id of the operator of interest.\n @param quorumNumber The quorum number to get the stake for."
            },
            "functionSelector": "2cd95940",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeHistory",
            "nameLocation": "7227:15:110",
            "parameters": {
              "id": 71007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71004,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "7251:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71013,
                  "src": "7243:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71006,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "7269:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71013,
                  "src": "7263:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71005,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7263:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7242:40:110"
            },
            "returnParameters": {
              "id": 71012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71013,
                  "src": "7306:20:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StakeUpdate_$70831_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 71009,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 71008,
                        "name": "StakeUpdate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70831,
                        "src": "7306:11:110"
                      },
                      "referencedDeclaration": 70831,
                      "src": "7306:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                        "typeString": "struct IStakeRegistry.StakeUpdate"
                      }
                    },
                    "id": 71010,
                    "nodeType": "ArrayTypeName",
                    "src": "7306:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StakeUpdate_$70831_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7305:22:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71020,
            "nodeType": "FunctionDefinition",
            "src": "7334:88:110",
            "nodes": [],
            "functionSelector": "0491b41c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeHistoryLength",
            "nameLocation": "7343:26:110",
            "parameters": {
              "id": 71016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71015,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "7376:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71020,
                  "src": "7370:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71014,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7370:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7369:20:110"
            },
            "returnParameters": {
              "id": 71019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71020,
                  "src": "7413:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7413:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7412:9:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71031,
            "nodeType": "FunctionDefinition",
            "src": "7743:114:110",
            "nodes": [],
            "documentation": {
              "id": 71021,
              "nodeType": "StructuredDocumentation",
              "src": "7428:310:110",
              "text": " @notice Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`.\n @param quorumNumber The quorum number to get the stake for.\n @param index Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`."
            },
            "functionSelector": "b6904b78",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeUpdateAtIndex",
            "nameLocation": "7752:26:110",
            "parameters": {
              "id": 71026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71023,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "7785:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71031,
                  "src": "7779:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71022,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7779:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71025,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "7807:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71031,
                  "src": "7799:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7799:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7778:35:110"
            },
            "returnParameters": {
              "id": 71030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71031,
                  "src": "7837:18:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 71028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71027,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "7837:11:110"
                    },
                    "referencedDeclaration": 70831,
                    "src": "7837:11:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7836:20:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71043,
            "nodeType": "FunctionDefinition",
            "src": "7981:157:110",
            "nodes": [],
            "documentation": {
              "id": 71032,
              "nodeType": "StructuredDocumentation",
              "src": "7863:113:110",
              "text": "@notice Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"
            },
            "functionSelector": "dd9846b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeUpdateIndexAtBlockNumber",
            "nameLocation": "7990:32:110",
            "parameters": {
              "id": 71039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71034,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "8031:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71043,
                  "src": "8023:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71033,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71036,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "8049:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71043,
                  "src": "8043:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71035,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8043:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71038,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "8070:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71043,
                  "src": "8063:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71037,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8063:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:60:110"
            },
            "returnParameters": {
              "id": 71042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71043,
                  "src": "8130:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71040,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8130:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8129:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71054,
            "nodeType": "FunctionDefinition",
            "src": "8260:133:110",
            "nodes": [],
            "documentation": {
              "id": 71044,
              "nodeType": "StructuredDocumentation",
              "src": "8144:111:110",
              "text": "@notice Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"
            },
            "functionSelector": "81c07502",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeIndicesAtBlockNumber",
            "nameLocation": "8269:33:110",
            "parameters": {
              "id": 71049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71046,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "8310:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71054,
                  "src": "8303:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71045,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8303:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71048,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "8338:13:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71054,
                  "src": "8323:28:110",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 71047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8323:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8302:50:110"
            },
            "returnParameters": {
              "id": 71053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71054,
                  "src": "8375:15:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                    "typeString": "uint32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 71050,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8375:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 71051,
                    "nodeType": "ArrayTypeName",
                    "src": "8375:8:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                      "typeString": "uint32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8374:17:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71067,
            "nodeType": "FunctionDefinition",
            "src": "8839:153:110",
            "nodes": [],
            "documentation": {
              "id": 71055,
              "nodeType": "StructuredDocumentation",
              "src": "8399:435:110",
              "text": " @notice Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\n @param quorumNumber The quorum number to get the stake for.\n @param operatorId The id of the operator of interest.\n @param index Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\n @dev Function will revert if `index` is out-of-bounds."
            },
            "functionSelector": "ac6bfb03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeUpdateAtIndex",
            "nameLocation": "8848:21:110",
            "parameters": {
              "id": 71062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71057,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "8876:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71067,
                  "src": "8870:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71056,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8870:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71059,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "8898:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71067,
                  "src": "8890:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71058,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8890:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71061,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8918:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71067,
                  "src": "8910:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8869:55:110"
            },
            "returnParameters": {
              "id": 71066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71067,
                  "src": "8972:18:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 71064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71063,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "8972:11:110"
                    },
                    "referencedDeclaration": 70831,
                    "src": "8972:11:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8971:20:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71078,
            "nodeType": "FunctionDefinition",
            "src": "9243:113:110",
            "nodes": [],
            "documentation": {
              "id": 71068,
              "nodeType": "StructuredDocumentation",
              "src": "8998:240:110",
              "text": " @notice Returns the most recent stake weight for the `operatorId` for a certain quorum\n @dev Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"
            },
            "functionSelector": "f851e198",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestStakeUpdate",
            "nameLocation": "9252:20:110",
            "parameters": {
              "id": 71073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71070,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "9281:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71078,
                  "src": "9273:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9273:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71072,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "9299:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71078,
                  "src": "9293:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71071,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9293:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9272:40:110"
            },
            "returnParameters": {
              "id": 71077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71078,
                  "src": "9336:18:110",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 71075,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 71074,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "9336:11:110"
                    },
                    "referencedDeclaration": 70831,
                    "src": "9336:11:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9335:20:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71092,
            "nodeType": "FunctionDefinition",
            "src": "10131:169:110",
            "nodes": [],
            "documentation": {
              "id": 71079,
              "nodeType": "StructuredDocumentation",
              "src": "9362:764:110",
              "text": " @notice Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the\n `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry \n corresponds to the operator's stake at `blockNumber`. Reverts otherwise.\n @param quorumNumber The quorum number to get the stake for.\n @param operatorId The id of the operator of interest.\n @param index Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\n @param blockNumber Block number to make sure the stake is from.\n @dev Function will revert if `index` is out-of-bounds.\n @dev used the BLSSignatureChecker to get past stakes of signing operators"
            },
            "functionSelector": "f2be94ae",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeAtBlockNumberAndIndex",
            "nameLocation": "10140:29:110",
            "parameters": {
              "id": 71088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71081,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "10176:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "10170:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71080,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10170:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71083,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "10197:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "10190:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71082,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10190:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71085,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "10218:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "10210:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71084,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10210:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71087,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10238:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "10230:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10230:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10169:75:110"
            },
            "returnParameters": {
              "id": 71091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "10292:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 71089,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10292:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10291:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71104,
            "nodeType": "FunctionDefinition",
            "src": "10948:131:110",
            "nodes": [],
            "documentation": {
              "id": 71093,
              "nodeType": "StructuredDocumentation",
              "src": "10306:637:110",
              "text": " @notice Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the \n `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`. \n Reverts otherwise.\n @param quorumNumber The quorum number to get the stake for.\n @param index Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\n @param blockNumber Block number to make sure the stake is from.\n @dev Function will revert if `index` is out-of-bounds.\n @dev used the BLSSignatureChecker to get past stakes of signing operators"
            },
            "functionSelector": "c8294c56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeAtBlockNumberFromIndex",
            "nameLocation": "10957:35:110",
            "parameters": {
              "id": 71100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71095,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "10999:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71104,
                  "src": "10993:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71094,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10993:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71097,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "11020:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71104,
                  "src": "11013:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71096,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11013:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71099,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "11041:5:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71104,
                  "src": "11033:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11033:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10992:55:110"
            },
            "returnParameters": {
              "id": 71103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71104,
                  "src": "11071:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 71101,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11071:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11070:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71114,
            "nodeType": "FunctionDefinition",
            "src": "11297:96:110",
            "nodes": [],
            "documentation": {
              "id": 71105,
              "nodeType": "StructuredDocumentation",
              "src": "11085:207:110",
              "text": " @notice Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\n @dev Function returns weight of **0** in the event that the operator has no stake history"
            },
            "functionSelector": "5401ed27",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStake",
            "nameLocation": "11306:15:110",
            "parameters": {
              "id": 71110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71107,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "11330:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71114,
                  "src": "11322:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11322:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71109,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "11348:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71114,
                  "src": "11342:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71108,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11342:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11321:40:110"
            },
            "returnParameters": {
              "id": 71113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71114,
                  "src": "11385:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 71111,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11385:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11384:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71126,
            "nodeType": "FunctionDefinition",
            "src": "11508:146:110",
            "nodes": [],
            "documentation": {
              "id": 71115,
              "nodeType": "StructuredDocumentation",
              "src": "11399:104:110",
              "text": "@notice Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"
            },
            "functionSelector": "fa28c627",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeAtBlockNumber",
            "nameLocation": "11517:21:110",
            "parameters": {
              "id": 71122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71117,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "11547:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71126,
                  "src": "11539:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71116,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11539:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71119,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "11565:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71126,
                  "src": "11559:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71118,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11559:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71121,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "11586:11:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71126,
                  "src": "11579:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71120,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11579:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11538:60:110"
            },
            "returnParameters": {
              "id": 71125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71126,
                  "src": "11646:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 71123,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11646:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11645:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71134,
            "nodeType": "FunctionDefinition",
            "src": "11861:81:110",
            "nodes": [],
            "documentation": {
              "id": 71127,
              "nodeType": "StructuredDocumentation",
              "src": "11660:196:110",
              "text": " @notice Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\n @dev Will revert if `_totalStakeHistory[quorumNumber]` is empty."
            },
            "functionSelector": "d5eccc05",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTotalStake",
            "nameLocation": "11870:20:110",
            "parameters": {
              "id": 71130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71129,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "11897:12:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71134,
                  "src": "11891:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71128,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11891:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11890:20:110"
            },
            "returnParameters": {
              "id": 71133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71134,
                  "src": "11934:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 71131,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11934:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11933:8:110"
            },
            "scope": 71147,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71146,
            "nodeType": "FunctionDefinition",
            "src": "12313:156:110",
            "nodes": [],
            "documentation": {
              "id": 71135,
              "nodeType": "StructuredDocumentation",
              "src": "11948:360:110",
              "text": " @notice Called by the registry coordinator to update an operator's stake for one\n or more quorums.\n If the operator no longer has the minimum stake required for a quorum, they are\n added to the\n @return A bitmap of quorums where the operator no longer meets the minimum stake\n and should be deregistered."
            },
            "functionSelector": "66acfefe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorStake",
            "nameLocation": "12322:19:110",
            "parameters": {
              "id": 71142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71137,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12359:8:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71146,
                  "src": "12351:16:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12351:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71139,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "12386:10:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71146,
                  "src": "12378:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12378:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71141,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "12422:13:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 71146,
                  "src": "12407:28:110",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 71140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12407:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12341:100:110"
            },
            "returnParameters": {
              "id": 71145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71146,
                  "src": "12460:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  },
                  "typeName": {
                    "id": 71143,
                    "name": "uint192",
                    "nodeType": "ElementaryTypeName",
                    "src": "12460:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12459:9:110"
            },
            "scope": 71147,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 70822,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70498,
              "src": "463:9:110"
            },
            "id": 70823,
            "nodeType": "InheritanceSpecifier",
            "src": "463:9:110"
          }
        ],
        "canonicalName": "IStakeRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 70821,
          "nodeType": "StructuredDocumentation",
          "src": "300:134:110",
          "text": " @title Interface for a `Registry` that keeps track of stakes of operators for up to 256 quorums.\n @author Layr Labs, Inc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          71147,
          70498
        ],
        "name": "IStakeRegistry",
        "nameLocation": "445:14:110",
        "scope": 71148,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 110
}