{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IRegistryCoordinator",
          "name": "_registryCoordinator",
          "type": "address"
        },
        {
          "internalType": "contract IDelegationManager",
          "name": "_delegationManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        }
      ],
      "name": "MinimumStakeForQuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "name": "OperatorStakeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "QuorumCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "StrategyMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromQuorum",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_WEIGHING_FUNCTION_LENGTH",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WEIGHTING_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "_strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "addStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "value",
          "type": "uint96"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "applyDelta",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "prev",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "cur",
          "type": "uint96"
        }
      ],
      "name": "calculateDelta",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "deregisterOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentTotalStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getLatestStakeUpdate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeAtBlockNumberAndIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getStakeHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getStakeHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeUpdateIndexAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeAtBlockNumberFromIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getTotalStakeHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "getTotalStakeIndicesAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "_strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "initializeQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "minimumStakeForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "strategyIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "newMultipliers",
          "type": "uint96[]"
        }
      ],
      "name": "modifyStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "newStake",
          "type": "uint96"
        }
      ],
      "name": "recordOperatorStakeUpdate",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "int256",
          "name": "stakeDelta",
          "type": "int256"
        }
      ],
      "name": "recordTotalStakeUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "registerOperator",
      "outputs": [
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        },
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registryCoordinator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "indicesToRemove",
          "type": "uint256[]"
        }
      ],
      "name": "removeStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        }
      ],
      "name": "setMinimumStakeForQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategiesPerQuorum",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "multiplier",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "strategyParamsByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "strategyParamsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "updateOperatorStake",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "weightOfOperatorForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162003a6a38038062003a6a833981016040819052620000349162000065565b6001600160a01b0391821660a05216608052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a05161396162000109600039600081816103b9015281816106b9015281816109f601528181610d6d01528181611198015281816117ab015281816118a8015281816119cc0152611d8e01526000818161058e01526120c901526139616000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806381c0750211610125578063c8294c56116100ad578063f2be94ae1161007c578063f2be94ae146105b0578063f509551a146105c3578063f851e198146105d6578063fa28c627146105e9578063ff694a77146105fc57600080fd5b8063c8294c561461053b578063d5eccc051461054e578063dd9846b914610561578063df5cf7231461058957600080fd5b8063b6904b78116100f4578063b6904b78146104c6578063bc9a40c3146104d9578063bd29b8cd146104ec578063c46778a5146104ff578063c601527d1461052857600080fd5b806381c07502146104335780639f3ccf6514610453578063ac6bfb0314610466578063adc804da1461048657600080fd5b80634bd26e09116101a857806366acfefe1161017757806366acfefe146103895780636d14a987146103b457806374454c6d146103f35780637c172347146104065780637f4298221461042057600080fd5b80634bd26e09146103245780635401ed27146103545780635e5a6775146103675780635f1f2d771461037657600080fd5b806320b66298116101e457806320b66298146102ad57806325504777146102c05780632cd95940146102e15780633ca5a5f51461030157600080fd5b80630390a4d5146102165780630491b41c1461022b57806308732461146102615780631f9b74e014610282575b600080fd5b610229610224366004612cce565b61060f565b005b61024e610239366004612cf8565b60ff1660009081526001602052604090205490565b6040519081526020015b60405180910390f35b61027461026f366004612cce565b61061e565b604051610258929190612d13565b610295610290366004612d4d565b610667565b6040516001600160601b039091168152602001610258565b6102296102bb366004612dc8565b6106b7565b6102d36102ce366004612e89565b6109e8565b604051610258929190612f28565b6102f46102ef366004612f4d565b610cb3565b6040516102589190612f79565b61024e61030f366004612cf8565b60ff1660009081526003602052604090205490565b61024e610332366004612f4d565b600091825260026020908152604080842060ff93909316845291905290205490565b610295610362366004612f4d565b610d52565b61024e670de0b6b3a764000081565b610229610384366004613082565b610d6b565b61039c610397366004612e89565b61118b565b6040516001600160c01b039091168152602001610258565b6103db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610258565b61024e610401366004613141565b6112e5565b61040e602081565b60405160ff9091168152602001610258565b61029561042e36600461317d565b6112fc565b6104466104413660046131ad565b611308565b60405161025891906131ff565b6103db610461366004612cce565b6115d0565b61047961047436600461323d565b611608565b6040516102589190613270565b610499610494366004612cce565b6116a0565b6040805182516001600160a01b031681526020928301516001600160601b03169281019290925201610258565b6104796104d4366004612cce565b61171a565b6102296104e73660046132a5565b6117a9565b6102296104fa3660046132cf565b61189d565b61029561050d366004612cf8565b6000602081905290815260409020546001600160601b031681565b61022961053636600461339b565b6119ca565b6102956105493660046133e8565b611abe565b61029561055c366004612cf8565b611b3c565b61057461056f366004613424565b611b8f565b60405163ffffffff9091168152602001610258565b6103db7f000000000000000000000000000000000000000000000000000000000000000081565b6102956105be366004613457565b611b9c565b61024e6105d1366004613499565b611c31565b6104796105e4366004612f4d565b611c3d565b6102956105f7366004613424565b611d22565b61022961060a3660046134b5565b611d83565b6106198282611eee565b505050565b6003602052816000526040600020818154811061063a57600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b60ff821660009081526001602052604081205483906106a15760405162461bcd60e51b815260040161069890613512565b60405180910390fd5b60006106ad8585612068565b5095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190613563565b6001600160a01b0316336001600160a01b0316146107695760405162461bcd60e51b815260040161069890613580565b846107858160ff16600090815260016020526040902054151590565b6107a15760405162461bcd60e51b815260040161069890613512565b8380610817576040805162461bcd60e51b81526020600482015260248101919091527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a206e6f20737472617465677920696e64696365732070726f76696465646064820152608401610698565b82811461088c5760405162461bcd60e51b815260206004820152603960248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a20696e707574206c656e677468206d69736d61746368000000000000006064820152608401610698565b60ff87166000908152600360205260408120905b828110156109dd578585828181106108ba576108ba6135fc565b90506020020160208101906108cf9190613612565b828989848181106108e2576108e26135fc565b90506020020135815481106108f9576108f96135fc565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b031602179055508860ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838a8a85818110610962576109626135fc565b9050602002013581548110610979576109796135fc565b6000918252602090912001546001600160a01b03168888858181106109a0576109a06135fc565b90506020020160208101906109b59190613612565b6040516109c3929190612d13565b60405180910390a2806109d581613643565b9150506108a0565b505050505050505050565b606080336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a335760405162461bcd60e51b81526004016106989061365e565b6000836001600160401b03811115610a4d57610a4d612ff1565b604051908082528060200260200182016040528015610a76578160200160208202803683370190505b5090506000846001600160401b03811115610a9357610a93612ff1565b604051908082528060200260200182016040528015610abc578160200160208202803683370190505b50905060005b85811015610ca5576000878783818110610ade57610ade6135fc565b919091013560f81c60008181526001602052604090205490925015159050610b665760405162461bcd60e51b815260206004820152603560248201527f5374616b6552656769737472792e72656769737465724f70657261746f723a206044820152741c5d5bdc9d5b48191bd95cc81b9bdd08195e1a5cdd605a1b6064820152608401610698565b600080610b73838d612068565b9150915080610c105760405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e72656769737465724f70657261746f723a2060448201527f4f70657261746f7220646f6573206e6f74206d656574206d696e696d756d207360648201527f74616b6520726571756972656d656e7420666f722071756f72756d0000000000608482015260a401610698565b6000610c1d8c8585612266565b905082878681518110610c3257610c326135fc565b60200260200101906001600160601b031690816001600160601b031681525050610c5c8482611eee565b868681518110610c6e57610c6e6135fc565b60200260200101906001600160601b031690816001600160601b031681525050505050508080610c9d90613643565b915050610ac2565b509097909650945050505050565b600082815260026020908152604080832060ff851684528252808320805482518185028101850190935280835260609492939192909184015b82821015610d45576000848152602090819020604080516060810182529185015463ffffffff8082168452600160201b82041683850152600160401b90046001600160601b031690820152825260019092019101610cec565b5050505090505b92915050565b600080610d5f8484611c3d565b60400151949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded9190613563565b6001600160a01b0316336001600160a01b031614610e1d5760405162461bcd60e51b815260040161069890613580565b81610e398160ff16600090815260016020526040902054151590565b610e555760405162461bcd60e51b815260040161069890613512565b815180610eca5760405162461bcd60e51b815260206004820152603d60248201527f5374616b6552656769737472792e72656d6f7665537472617465676965733a2060448201527f6e6f20696e646963657320746f2072656d6f76652070726f76696465640000006064820152608401610698565b60ff841660009081526003602090815260408083206004909252822090915b83811015611182578660ff167f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f784888481518110610f2957610f296135fc565b602002602001015181548110610f4157610f416135fc565b600091825260209182902001546040516001600160a01b0390911681520160405180910390a28660ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a7584888481518110610f9f57610f9f6135fc565b602002602001015181548110610fb757610fb76135fc565b600091825260208083209190910154604080516001600160a01b039092168252918101929092520160405180910390a282548390610ff7906001906136d0565b81548110611007576110076135fc565b9060005260206000200183878381518110611024576110246135fc565b60200260200101518154811061103c5761103c6135fc565b600091825260209091208254910180546001600160a01b0319166001600160a01b03909216918217815591546001600160601b03600160a01b918290041602179055825483908061108f5761108f6136e7565b600082815260208120820160001990810191909155019055815482906110b7906001906136d0565b815481106110c7576110c76135fc565b9060005260206000200160009054906101000a90046001600160a01b0316828783815181106110f8576110f86135fc565b602002602001015181548110611110576111106135fc565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508180548061114e5761114e6136e7565b600082815260209020810160001990810180546001600160a01b03191690550190558061117a81613643565b915050610ee9565b50505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111d55760405162461bcd60e51b81526004016106989061365e565b6000805b838110156106ad5760008585838181106111f5576111f56135fc565b919091013560f81c600081815260016020526040902054909250151590506112855760405162461bcd60e51b815260206004820152603860248201527f5374616b6552656769737472792e7570646174654f70657261746f725374616b60448201527f653a2071756f72756d20646f6573206e6f7420657869737400000000000000006064820152608401610698565b600080611292838b612068565b91509150806112b45760009150600160ff84161b6001600160c01b0386161794505b60006112c18a8585612266565b90506112cd8482611eee565b505050505080806112dd90613643565b9150506111d9565b60006112f2848484612266565b90505b9392505050565b60006112f583836124e6565b60606000826001600160401b0381111561132457611324612ff1565b60405190808252806020026020018201604052801561134d578160200160208202803683370190505b50905060005b838110156115c757600085858381811061136f5761136f6135fc565b919091013560f81c6000818152600160205260409020549092501515905061140e5760405162461bcd60e51b815260206004820152604660248201527f5374616b6552656769737472792e676574546f74616c5374616b65496e64696360448201527f65734174426c6f636b4e756d6265723a2071756f72756d20646f6573206e6f7460648201526508195e1a5cdd60d21b608482015260a401610698565b60ff81166000908152600160205260408120805463ffffffff8a169290611437576114376135fc565b60009182526020909120015463ffffffff1611156114e35760405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e676574546f74616c5374616b65496e64696360448201527f65734174426c6f636b4e756d6265723a2071756f72756d20686173206e6f207360648201527f74616b6520686973746f727920617420626c6f636b4e756d6265720000000000608482015260a401610698565b60ff8116600090815260016020526040812054905b818110156115b15760ff8316600090815260016020819052604090912063ffffffff8b169161152784866136d0565b61153191906136d0565b81548110611541576115416135fc565b60009182526020909120015463ffffffff161161159f57600161156482846136d0565b61156e91906136d0565b858581518110611580576115806135fc565b602002602001019063ffffffff16908163ffffffff16815250506115b1565b806115a981613643565b9150506114f8565b50505080806115bf90613643565b915050611353565b50949350505050565b600460205281600052604060002081815481106115ec57600080fd5b6000918252602090912001546001600160a01b03169150829050565b60408051606081018252600080825260208083018290528284018290528582526002815283822060ff8816835290529190912080548390811061164d5761164d6135fc565b600091825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b031691810191909152949350505050565b604080518082019091526000808252602082015260ff831660009081526003602052604090208054839081106116d8576116d86135fc565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b604080516060810182526000808252602080830182905282840182905260ff861682526001905291909120805483908110611757576117576135fc565b600091825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b0316918101919091529392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182b9190613563565b6001600160a01b0316336001600160a01b03161461185b5760405162461bcd60e51b815260040161069890613580565b816118778160ff16600090815260016020526040902054151590565b6118935760405162461bcd60e51b815260040161069890613512565b6106198383612514565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118e55760405162461bcd60e51b81526004016106989061365e565b60005b818110156119c4576000838383818110611904576119046135fc565b919091013560f81c600081815260016020526040902054909250151590506119945760405162461bcd60e51b815260206004820152603760248201527f5374616b6552656769737472792e646572656769737465724f70657261746f7260448201527f3a2071756f72756d20646f6573206e6f742065786973740000000000000000006064820152608401610698565b60006119a286836000612266565b90506119ae8282611eee565b50505080806119bc90613643565b9150506118e8565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4c9190613563565b6001600160a01b0316336001600160a01b031614611a7c5760405162461bcd60e51b815260040161069890613580565b81611a988160ff16600090815260016020526040902054151590565b611ab45760405162461bcd60e51b815260040161069890613512565b610619838361257d565b60ff83166000908152600160205260408120805482919084908110611ae557611ae56135fc565b600091825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050610d5f81856129c0565b60ff81166000908152600160208190526040822080549091611b5d916136d0565b81548110611b6d57611b6d6135fc565b600091825260209091200154600160401b90046001600160601b031692915050565b60006112f2848484612b3a565b600082815260026020908152604080832060ff881684529091528120805482919084908110611bcd57611bcd6135fc565b600091825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050611c2481866129c0565b6040015195945050505050565b60006112f58383612ca0565b6040805160608082018352600080835260208084018290528385018290528682526002815284822060ff87168352815284822054855193840186528284529083018290529382015290919081611c96579150610d4c9050565b600085815260026020908152604080832060ff881684529091529020611cbd6001846136d0565b81548110611ccd57611ccd6135fc565b600091825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529250610d4c915050565b600083815260026020908152604080832060ff861684529091528120611d49858585612b3a565b63ffffffff1681548110611d5f57611d5f6135fc565b600091825260209091200154600160401b90046001600160601b0316949350505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dcb5760405162461bcd60e51b81526004016106989061365e565b60ff831660009081526001602052604090205415611e495760405162461bcd60e51b815260206004820152603560248201527f5374616b6552656769737472792e696e697469616c697a6551756f72756d3a2060448201527471756f72756d20616c72656164792065786973747360581b6064820152608401610698565b611e53838261257d565b611e5d8383612514565b505060ff166000908152600160208181526040808420815160608101835263ffffffff438116825281850187815293820187815283549687018455928752939095209451949093018054915193516001600160601b0316600160401b02600160401b600160a01b0319948416600160201b0267ffffffffffffffff1990931695909316949094171791909116179055565b60ff821660009081526001602081905260408220805491839190611f1290846136d0565b81548110611f2257611f226135fc565b9060005260206000200190508360001415611f515754600160401b90046001600160601b03169150610d4c9050565b8054600090611f7090600160401b90046001600160601b0316866124e6565b82549091504363ffffffff90811691161415611fad578154600160401b600160a01b031916600160401b6001600160601b0383160217825561205f565b815463ffffffff438116600160201b81810267ffffffff000000001990941693909317855560ff8916600090815260016020818152604080842081516060810183529586528583018581526001600160601b03808b169388019384528254958601835591865292909420945194909201805491519251909316600160401b02600160401b600160a01b031992861690960267ffffffffffffffff19909116939094169290921792909217169190911790555b95945050505050565b6000806000806120878660ff1660009081526003602052604090205490565b604080518082019091526000808252602082015290915060ff871660009081526004602081905260408083209051639004134760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926390041347926120fc928c92016136fd565b600060405180830381865afa158015612119573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612141919081019061375c565b905060005b838110156122325760ff89166000908152600360205260409020805482908110612172576121726135fc565b60009182526020808320604080518082019091529201546001600160a01b0381168352600160a01b90046001600160601b03169082015283519094508390839081106121c0576121c06135fc565b6020026020010151111561222057670de0b6b3a764000083602001516001600160601b03168383815181106121f7576121f76135fc565b602002602001015161220991906137ec565b612213919061380b565b61221d908661382d565b94505b8061222a81613643565b915050612146565b50505060ff8616600090815260208190526040902054919350506001600160601b03908116908316101590505b9250929050565b600083815260026020908152604080832060ff8616845290915281205481908061232a57600086815260026020908152604080832060ff891684528252808320815160608101835263ffffffff43811682528185018681526001600160601b03808c16958401958652845460018101865594885295909620915191909201805495519351909416600160401b02600160401b600160a01b0319938316600160201b0267ffffffffffffffff199096169190921617939093171691909117905561248c565b600086815260026020908152604080832060ff8916845290915281206123516001846136d0565b81548110612361576123616135fc565b600091825260209091200180546001600160601b03600160401b90910481169450909150851683141561239a57600093505050506112f5565b80544363ffffffff908116911614156123d4578054600160401b600160a01b031916600160401b6001600160601b0387160217815561248a565b805467ffffffff000000001916600160201b4363ffffffff90811682810293909317845560008a815260026020908152604080832060ff8d168452825280832081516060810183529687528683018481526001600160601b038d81169389019384528254600181018455928652939094209651960180549351915196851667ffffffffffffffff1990941693909317931690930291909117600160401b600160a01b031916600160401b93909216929092021790555b505b6040805160ff871681526001600160601b038616602082015287917f2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d910160405180910390a26124dc8285612ca0565b9695505050505050565b60008082121561250a576124f982613858565b6125039084613875565b9050610d4c565b612503828461382d565b60ff82166000818152602081815260409182902080546bffffffffffffffffffffffff19166001600160601b03861690811790915591519182527f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf910160405180910390a25050565b60008151116125e25760405162461bcd60e51b8152602060048201526038602482015260008051602061390c83398151915260448201527f3a206e6f20737472617465676965732070726f766964656400000000000000006064820152608401610698565b805160ff831660009081526003602090815260409091205490612605838361389d565b11156126755760405162461bcd60e51b8152602060048201526045602482015260008051602061390c83398151915260448201527f3a20657863656564204d41585f5745494748494e475f46554e4354494f4e5f4c60648201526408a9c8ea8960db1b608482015260a401610698565b60005b828110156129b95760005b61268d828461389d565b81101561276e578482815181106126a6576126a66135fc565b6020026020010151600001516001600160a01b0316600360008860ff1660ff16815260200190815260200160002082815481106126e5576126e56135fc565b6000918252602090912001546001600160a01b0316141561275c5760405162461bcd60e51b815260206004820152603d602482015260008051602061390c83398151915260448201527f3a2063616e6e6f74206164642073616d652073747261746567792032780000006064820152608401610698565b8061276681613643565b915050612683565b506000848281518110612783576127836135fc565b6020026020010151602001516001600160601b0316116128085760405162461bcd60e51b8152602060048201526046602482015260008051602061390c83398151915260448201527f3a2063616e6e6f74206164642073747261746567792077697468207a65726f206064820152651dd95a59da1d60d21b608482015260a401610698565b60ff85166000908152600360205260409020845185908390811061282e5761282e6135fc565b602090810291909101810151825460018101845560009384528284208251928401516001600160601b0316600160a01b026001600160a01b039093169290921791015560ff8716825260049052604090208451859083908110612893576128936135fc565b6020908102919091018101515182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055835160ff8616907f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54049086908490811061290a5761290a6135fc565b602090810291909101810151516040516001600160a01b0390911681520160405180910390a28460ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75858381518110612967576129676135fc565b602002602001015160000151868481518110612985576129856135fc565b60200260200101516020015160405161299f929190612d13565b60405180910390a2806129b181613643565b915050612678565b5050505050565b816000015163ffffffff168163ffffffff161015612a655760405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a207374616b6555706461746520697320606482015275333937b69030b33a32b910313637b1b5a73ab6b132b960511b608482015260a401610698565b602082015163ffffffff161580612a8b5750816020015163ffffffff168163ffffffff16105b612b365760405162461bcd60e51b815260206004820152606a60248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a2074686572652069732061206e65776560648201527f72207374616b6555706461746520617661696c61626c65206265666f726520626084820152693637b1b5a73ab6b132b960b11b60a482015260c401610698565b5050565b600083815260026020908152604080832060ff86168452909152812054805b8015612bdb57600086815260026020908152604080832060ff89168452909152902063ffffffff851690612b8e6001846136d0565b81548110612b9e57612b9e6135fc565b60009182526020909120015463ffffffff1611612bc957612bc06001826136d0565b925050506112f5565b80612bd3816138b5565b915050612b59565b5060405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e401610698565b60006112f56001600160601b038085169084166138cc565b803560ff81168114612cc957600080fd5b919050565b60008060408385031215612ce157600080fd5b612cea83612cb8565b946020939093013593505050565b600060208284031215612d0a57600080fd5b6112f582612cb8565b6001600160a01b039290921682526001600160601b0316602082015260400190565b6001600160a01b0381168114612d4a57600080fd5b50565b60008060408385031215612d6057600080fd5b612d6983612cb8565b91506020830135612d7981612d35565b809150509250929050565b60008083601f840112612d9657600080fd5b5081356001600160401b03811115612dad57600080fd5b6020830191508360208260051b850101111561225f57600080fd5b600080600080600060608688031215612de057600080fd5b612de986612cb8565b945060208601356001600160401b0380821115612e0557600080fd5b612e1189838a01612d84565b90965094506040880135915080821115612e2a57600080fd5b50612e3788828901612d84565b969995985093965092949392505050565b60008083601f840112612e5a57600080fd5b5081356001600160401b03811115612e7157600080fd5b60208301915083602082850101111561225f57600080fd5b60008060008060608587031215612e9f57600080fd5b8435612eaa81612d35565b93506020850135925060408501356001600160401b03811115612ecc57600080fd5b612ed887828801612e48565b95989497509550505050565b600081518084526020808501945080840160005b83811015612f1d5781516001600160601b031687529582019590820190600101612ef8565b509495945050505050565b604081526000612f3b6040830185612ee4565b828103602084015261205f8185612ee4565b60008060408385031215612f6057600080fd5b82359150612f7060208401612cb8565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612fe557612fd283855163ffffffff808251168352806020830151166020840152506001600160601b0360408201511660408301525050565b9284019260609290920191600101612f95565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561302957613029612ff1565b60405290565b604051601f8201601f191681016001600160401b038111828210171561305757613057612ff1565b604052919050565b60006001600160401b0382111561307857613078612ff1565b5060051b60200190565b6000806040838503121561309557600080fd5b61309e83612cb8565b91506020808401356001600160401b038111156130ba57600080fd5b8401601f810186136130cb57600080fd5b80356130de6130d98261305f565b61302f565b81815260059190911b820183019083810190888311156130fd57600080fd5b928401925b8284101561311b57833582529284019290840190613102565b80955050505050509250929050565b80356001600160601b0381168114612cc957600080fd5b60008060006060848603121561315657600080fd5b8335925061316660208501612cb8565b91506131746040850161312a565b90509250925092565b6000806040838503121561319057600080fd5b612cea8361312a565b803563ffffffff81168114612cc957600080fd5b6000806000604084860312156131c257600080fd5b6131cb84613199565b925060208401356001600160401b038111156131e657600080fd5b6131f286828701612e48565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b81811015612fe557835163ffffffff168352928401929184019160010161321b565b60008060006060848603121561325257600080fd5b61325b84612cb8565b95602085013595506040909401359392505050565b815163ffffffff9081168252602080840151909116908201526040808301516001600160601b03169082015260608101610d4c565b600080604083850312156132b857600080fd5b6132c183612cb8565b9150612f706020840161312a565b6000806000604084860312156132e457600080fd5b8335925060208401356001600160401b038111156131e657600080fd5b600082601f83011261331257600080fd5b813560206133226130d98361305f565b82815260069290921b8401810191818101908684111561334157600080fd5b8286015b84811015613390576040818903121561335e5760008081fd5b613366613007565b813561337181612d35565b815261337e82860161312a565b81860152835291830191604001613345565b509695505050505050565b600080604083850312156133ae57600080fd5b6133b783612cb8565b915060208301356001600160401b038111156133d257600080fd5b6133de85828601613301565b9150509250929050565b6000806000606084860312156133fd57600080fd5b61340684612cb8565b925061341460208501613199565b9150604084013590509250925092565b60008060006060848603121561343957600080fd5b8335925061344960208501612cb8565b915061317460408501613199565b6000806000806080858703121561346d57600080fd5b61347685612cb8565b935061348460208601613199565b93969395505050506040820135916060013590565b600080604083850312156134ac57600080fd5b6132c18361312a565b6000806000606084860312156134ca57600080fd5b6134d384612cb8565b92506134e16020850161312a565b915060408401356001600160401b038111156134fc57600080fd5b61350886828701613301565b9150509250925092565b60208082526031908201527f5374616b6552656769737472792e71756f72756d4578697374733a2071756f726040820152701d5b48191bd95cc81b9bdd08195e1a5cdd607a1b606082015260800190565b60006020828403121561357557600080fd5b81516112f581612d35565b60208082526056908201527f5374616b6552656769737472792e6f6e6c79436f6f7264696e61746f724f776e60408201527f65723a2063616c6c6572206973206e6f7420746865206f776e6572206f6620746060820152753432903932b3b4b9ba393ca1b7b7b93234b730ba37b960511b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561362457600080fd5b6112f58261312a565b634e487b7160e01b600052601160045260246000fd5b60006000198214156136575761365761362d565b5060010190565b6020808252604c908201527f5374616b6552656769737472792e6f6e6c795265676973747279436f6f72646960408201527f6e61746f723a2063616c6c6572206973206e6f7420746865205265676973747260608201526b3ca1b7b7b93234b730ba37b960a11b608082015260a00190565b6000828210156136e2576136e261362d565b500390565b634e487b7160e01b600052603160045260246000fd5b60006040820160018060a01b03808616845260206040818601528286548085526060870191508760005282600020945060005b8181101561374e578554851683526001958601959284019201613730565b509098975050505050505050565b6000602080838503121561376f57600080fd5b82516001600160401b0381111561378557600080fd5b8301601f8101851361379657600080fd5b80516137a46130d98261305f565b81815260059190911b820183019083810190878311156137c357600080fd5b928401925b828410156137e1578351825292840192908401906137c8565b979650505050505050565b60008160001904831182151516156138065761380661362d565b500290565b60008261382857634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160601b0380831681851680830382111561384f5761384f61362d565b01949350505050565b6000600160ff1b82141561386e5761386e61362d565b5060000390565b60006001600160601b03838116908316818110156138955761389561362d565b039392505050565b600082198211156138b0576138b061362d565b500190565b6000816138c4576138c461362d565b506000190190565b60008083128015600160ff1b8501841216156138ea576138ea61362d565b6001600160ff1b03840183138116156139055761390561362d565b5050039056fe5374616b6552656769737472792e5f6164645374726174656779506172616d73a2646970667358221220f20e8d183279d1c22b6c4052a19a820f72a3f46e68e1f18e0c7f801a8559496964736f6c634300080c0033",
    "sourceMap": "201:865:123:-:0;;;254:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2269:51:102;;;;;2330:31;;;201:865:123;;14:153:156;-1:-1:-1;;;;;111:31:156;;101:42;;91:70;;157:1;154;147:12;91:70;14:153;:::o;172:486::-;308:6;316;369:2;357:9;348:7;344:23;340:32;337:52;;;385:1;382;375:12;337:52;417:9;411:16;436:53;483:5;436:53;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:55:156;537:25;571:55;:::i;:::-;645:7;635:17;;;172:486;;;;;:::o;:::-;201:865:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "201:865:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:146;;;;;;:::i;:::-;;:::i;:::-;;29348:151:101;;;;;;:::i;:::-;29453:32;;29427:7;29453:32;;;:18;:32;;;;;:39;;29348:151;;;;762:25:156;;;750:2;735:18;29348:151:101;;;;;;;;2016:56:102;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;23351:268:101:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2001:39:156;;;1983:58;;1971:2;1956:18;23351:268:101;1839:208:156;12019:891:101;;;;;;:::i;:::-;;:::i;2913:1550::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;24963:203::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;23723:139::-;;;;;;:::i;:::-;23820:28;;23794:7;23820:28;;;:14;:28;;;;;:35;;23723:139;24521:202;;;;;;:::i;:::-;24637:7;24663:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;;;:53;;24521:202;25384:242;;;;;;:::i;:::-;;:::i;748:48:102:-;;792:4;748:48;;10540:1151:101;;;;;;:::i;:::-;;:::i;6652:1876::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8438:32:156;;;8420:51;;8408:2;8393:18;6652:1876:101;8274:203:156;1270:44:102;;;;;;;;-1:-1:-1;;;;;8646:32:156;;;8628:51;;8616:2;8601:18;1270:44:102;8482:203:156;439::123;;;;;;:::i;:::-;;:::i;884:55:102:-;;937:2;884:55;;;;;9553:4:156;9541:17;;;9523:36;;9511:2;9496:18;884:55:102;9381:184:156;936:128:123;;;;;;:::i;:::-;;:::i;31695:1083:101:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2078:56:102:-;;;;;;:::i;:::-;;:::i;26832:236:101:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;23984:196::-;;;;;;:::i;:::-;;:::i;:::-;;;;12180:13:156;;-1:-1:-1;;;;;12176:39:156;12158:58;;12276:4;12264:17;;;12258:24;-1:-1:-1;;;;;12254:57:156;12232:20;;;12225:87;;;;12131:18;23984:196:101;11946:372:156;30217:199:101;;;;;;:::i;:::-;;:::i;9210:231::-;;;;;;:::i;:::-;;:::i;5234:982::-;;;;;;:::i;:::-;;:::i;1490:53:102:-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1490:53:102;;;9970:236:101;;;;;;:::i;:::-;;:::i;30953:368::-;;;;;;:::i;:::-;;:::i;29706:188::-;;;;;;:::i;:::-;;:::i;27662:270::-;;;;;;:::i;:::-;;:::i;:::-;;;15402:10:156;15390:23;;;15372:42;;15360:2;15345:18;27662:270:101;15228:192:156;1138:46:102;;;;;28599:413:101;;;;;;:::i;:::-;;:::i;800:130:123:-;;;;;;:::i;:::-;;:::i;25877:517:101:-;;;;;;:::i;:::-;;:::i;27183:355::-;;;;;;:::i;:::-;;:::i;8608:596::-;;;;;;:::i;:::-;;:::i;648:146:123:-;738:49;762:12;776:10;738:23;:49::i;:::-;;648:146;;:::o;2016:56:102:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2016:56:102;;;-1:-1:-1;;;;2016:56:102;;-1:-1:-1;;;;;2016:56:102;;-1:-1:-1;2016:56:102;:::o;23351:268:101:-;22902:32;;;23503:6;22902:32;;;:18;:32;;;;;:39;23480:12;;1562:89;;;;-1:-1:-1;;;1562:89:101;;;;;;;:::i;:::-;;;;;;;;;23522:12:::1;23540:50;23567:12;23581:8;23540:26;:50::i;:::-;-1:-1:-1::0;23521:69:101;23351:268;-1:-1:-1;;;;;23351:268:101:o;12019:891::-;1367:19;-1:-1:-1;;;;;1346:47:101;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1332:63:101;:10;-1:-1:-1;;;;;1332:63:101;;1324:162;;;;-1:-1:-1;;;1324:162:101;;;;;;;:::i;:::-;12218:12:::1;1570:27;1584:12;22902:32:::0;;22879:4;22902:32;;;:18;:32;;;;;:39;:44;;;22813:140;1570:27:::1;1562:89;;;;-1:-1:-1::0;;;1562:89:101::1;;;;;;;:::i;:::-;12262:15:::0;12302:13;12294:90:::2;;;::::0;;-1:-1:-1;;;12294:90:101;;18230:2:156;12294:90:101::2;::::0;::::2;18212:21:156::0;18249:18;;;18242:30;;;;18308:34;18288:18;;;18281:62;18379:34;18359:18;;;18352:62;18431:19;;12294:90:101::2;18028:428:156::0;12294:90:101::2;12402:34:::0;;::::2;12394:104;;;::::0;-1:-1:-1;;;12394:104:101;;18663:2:156;12394:104:101::2;::::0;::::2;18645:21:156::0;18702:2;18682:18;;;18675:30;18741:34;18721:18;;;18714:62;18812:27;18792:18;;;18785:55;18857:19;;12394:104:101::2;18461:421:156::0;12394:104:101::2;12552:28;::::0;::::2;12509:40;12552:28:::0;;;:14:::2;:28;::::0;;;;;12591:313:::2;12615:9;12611:1;:13;12591:313;;;12753:14;;12768:1;12753:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12704:15;12720;;12736:1;12720:18;;;;;;;:::i;:::-;;;;;;;12704:35;;;;;;;;:::i;:::-;;;;;;;;:46;;;:66;;;;;-1:-1:-1::0;;;;;12704:66:101::2;;;;;-1:-1:-1::0;;;;;12704:66:101::2;;;;;;12815:12;12789:104;;;12829:15;12845;;12861:1;12845:18;;;;;;;:::i;:::-;;;;;;;12829:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;:44:::0;-1:-1:-1;;;;;12829:44:101::2;12875:14:::0;;12890:1;12875:17;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12789:104;;;;;;;:::i;:::-;;;;;;;;12626:3:::0;::::2;::::0;::::2;:::i;:::-;;;;12591:313;;;;12232:678;;1496:1:::1;12019:891:::0;;;;;:::o;2913:1550::-;3085:15;;1114:10;-1:-1:-1;;;;;1136:19:101;1114:42;;1093:165;;;;-1:-1:-1;;;1093:165:101;;;;;;;:::i;:::-;3130:29:::1;3175:13:::0;-1:-1:-1;;;;;3162:34:101;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3162:34:101::1;-1:-1:-1::0;3130:66:101;-1:-1:-1;3206:27:101::1;3249:13:::0;-1:-1:-1;;;;;3236:34:101;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3236:34:101::1;;3206:64;;3285:9;3280:1131;3300:24:::0;;::::1;3280:1131;;;3370:18;3397:13;;3411:1;3397:16;;;;;;;:::i;:::-;::::0;;;::::1;;;;22879:4:::0;22902:32;;;:18;:32;;;;;:39;3397:16;;-1:-1:-1;22902:44:101;;;-1:-1:-1;3428:93:101::1;;;::::0;-1:-1:-1;;;3428:93:101;;20496:2:156;3428:93:101::1;::::0;::::1;20478:21:156::0;20535:2;20515:18;;;20508:30;20574:34;20554:18;;;20547:62;-1:-1:-1;;;20625:18:156;;;20618:51;20686:19;;3428:93:101::1;20294:417:156::0;3428:93:101::1;3674:19;3695:20:::0;3719:50:::1;3746:12;3760:8;3719:26;:50::i;:::-;3673:96;;;;3808:15;3783:165;;;::::0;-1:-1:-1;;;3783:165:101;;20918:2:156;3783:165:101::1;::::0;::::1;20900:21:156::0;20957:2;20937:18;;;20930:30;20996:34;20976:18;;;20969:62;21067:34;21047:18;;;21040:62;21139:29;21118:19;;;21111:58;21186:19;;3783:165:101::1;20716:495:156::0;3783:165:101::1;4006:17;4026:167;4083:10;4126:12;4166;4026:26;:167::i;:::-;4006:187;;4308:12;4289:13;4303:1;4289:16;;;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1::0;;;;;4289:31:101::1;;;-1:-1:-1::0;;;;;4289:31:101::1;;;::::0;::::1;4351:49;4375:12;4389:10;4351:23;:49::i;:::-;4334:11;4346:1;4334:14;;;;;;;;:::i;:::-;;;;;;:66;-1:-1:-1::0;;;;;4334:66:101::1;;;-1:-1:-1::0;;;;;4334:66:101::1;;;::::0;::::1;3331:1080;;;;3326:3;;;;;:::i;:::-;;;;3280:1131;;;-1:-1:-1::0;4429:13:101;;;;-1:-1:-1;2913:1550:101;-1:-1:-1;;;;;2913:1550:101:o;24963:203::-;25113:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;25106:53;;;;;;;;;;;;;;;;;25074:20;;25106:53;;25113:46;;25106:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25106:53:101;;;;;;;-1:-1:-1;;;25106:53:101;;-1:-1:-1;;;;;25106:53:101;;;;;;;;;;;;;;;;;;;;;;24963:203;;;;;:::o;25384:242::-;25472:6;25490:38;25531:46;25552:10;25564:12;25531:20;:46::i;:::-;25594:25;;;;25384:242;-1:-1:-1;;;;25384:242:101:o;10540:1151::-;1367:19;-1:-1:-1;;;;;1346:47:101;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1332:63:101;:10;-1:-1:-1;;;;;1332:63:101;;1324:162;;;;-1:-1:-1;;;1324:162:101;;;;;;;:::i;:::-;10691:12:::1;1570:27;1584:12;22902:32:::0;;22879:4;22902:32;;;:18;:32;;;;;:39;:44;;;22813:140;1570:27:::1;1562:89;;;;-1:-1:-1::0;;;1562:89:101::1;;;;;;;:::i;:::-;10740:22:::0;;10780:18;10772:92:::2;;;::::0;-1:-1:-1;;;10772:92:101;;21418:2:156;10772:92:101::2;::::0;::::2;21400:21:156::0;21457:2;21437:18;;;21430:30;21496:34;21476:18;;;21469:62;21567:31;21547:18;;;21540:59;21616:19;;10772:92:101::2;21216:425:156::0;10772:92:101::2;10918:28;::::0;::::2;10875:40;10918:28:::0;;;:14:::2;:28;::::0;;;;;;;10999:19:::2;:33:::0;;;;;10918:28;;11043:642:::2;11067:14;11063:1;:18;11043:642;;;11133:12;11107:85;;;11147:15;11163;11179:1;11163:18;;;;;;;;:::i;:::-;;;;;;;11147:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;::::2;:44:::0;11107:85:::2;::::0;-1:-1:-1;;;;;11147:44:101;;::::2;8628:51:156::0;;8601:18;11107:85:101::2;;;;;;;11237:12;11211:88;;;11251:15;11267;11283:1;11267:18;;;;;;;;:::i;:::-;;;;;;;11251:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;;::::2;:44:::0;11211:88:::2;::::0;;-1:-1:-1;;;;;11251:44:101;;::::2;21846:51:156::0;;21913:18;;;21906:34;;;;21819:18;11211:88:101::2;;;;;;;11462:22:::0;;11446:15;;11462:26:::2;::::0;11487:1:::2;::::0;11462:26:::2;:::i;:::-;11446:43;;;;;;;;:::i;:::-;;;;;;;;11408:15;11424;11440:1;11424:18;;;;;;;;:::i;:::-;;;;;;;11408:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:81;;:35;::::2;:81:::0;;-1:-1:-1;;;;;;11408:81:101::2;-1:-1:-1::0;;;;;11408:81:101;;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;;;;11408:81:101;;;::::2;;;;::::0;;11503:21;;:15;;:21;::::2;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;-1:-1:-1;;11503:21:101;;;;;;;;;;11602:27;;11581:20;;11602:31:::2;::::0;11503:21:::2;::::0;11602:31:::2;:::i;:::-;11581:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;11581:53:101::2;11538:20;11559:15;11575:1;11559:18;;;;;;;;:::i;:::-;;;;;;;11538:40;;;;;;;;:::i;:::-;;;;;;;;;:96;;;;;-1:-1:-1::0;;;;;11538:96:101::2;;;;;-1:-1:-1::0;;;;;11538:96:101::2;;;;;;11648:20;:26;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;-1:-1:-1;;11648:26:101;;;;;-1:-1:-1;;;;;;11648:26:101::2;::::0;;;;;11083:3;::::2;::::0;::::2;:::i;:::-;;;;11043:642;;;;10705:986;;;1496:1:::1;10540:1151:::0;;:::o;6652:1876::-;6823:7;1114:10;-1:-1:-1;;;;;1136:19:101;1114:42;;1093:165;;;;-1:-1:-1;;;1093:165:101;;;;;;;:::i;:::-;6842:23:::1;::::0;7246:1243:::1;7266:24:::0;;::::1;7246:1243;;;7311:18;7338:13;;7352:1;7338:16;;;;;;;:::i;:::-;::::0;;;::::1;;;;22879:4:::0;22902:32;;;:18;:32;;;;;:39;7338:16;;-1:-1:-1;22902:44:101;;;-1:-1:-1;7369:96:101::1;;;::::0;-1:-1:-1;;;7369:96:101;;22415:2:156;7369:96:101::1;::::0;::::1;22397:21:156::0;22454:2;22434:18;;;22427:30;22493:34;22473:18;;;22466:62;22564:26;22544:18;;;22537:54;22608:19;;7369:96:101::1;22213:420:156::0;7369:96:101::1;7645:18;7665:20:::0;7689:50:::1;7716:12;7730:8;7689:26;:50::i;:::-;7644:95;;;;7875:15;7870:151;;7924:1;::::0;-1:-1:-1;7810:1:112;:8;;;;-1:-1:-1;;;;;7969:22:101;::::1;7800:19:112::0;7943:63:101::1;;7870:151;8170:17;8190:165;8247:10;8289:12;8329:11;8190:26;:165::i;:::-;8170:185;;8429:49;8453:12;8467:10;8429:23;:49::i;:::-;;7297:1192;;;;7292:3;;;;;:::i;:::-;;;;7246:1243;;439:203:123::0;548:6;573:62;600:10;612:12;626:8;573:26;:62::i;:::-;566:69;;439:203;;;;;;:::o;936:128::-;1007:6;1032:25;1044:5;1051;1032:11;:25::i;31695:1083:101:-;31833:15;31860:23;31899:13;-1:-1:-1;;;;;31886:34:101;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31886:34:101;;31860:60;;31935:9;31930:818;31950:24;;;31930:818;;;31995:18;32022:13;;32036:1;32022:16;;;;;;;:::i;:::-;;;;;;;;22879:4;22902:32;;;:18;:32;;;;;:39;32022:16;;-1:-1:-1;22902:44:101;;;-1:-1:-1;32053:110:101;;;;-1:-1:-1;;;32053:110:101;;22840:2:156;32053:110:101;;;22822:21:156;22879:2;22859:18;;;22852:30;22918:34;22898:18;;;22891:62;22989:34;22969:18;;;22962:62;-1:-1:-1;;;23040:19:156;;;23033:37;23087:19;;32053:110:101;22638:474:156;32053:110:101;32202:32;;;;;;;:18;:32;;;;;:35;;:68;;;;:32;:35;;;;:::i;:::-;;;;;;;;;;:53;;;:68;;32177:218;;;;-1:-1:-1;;;32177:218:101;;23319:2:156;32177:218:101;;;23301:21:156;23358:2;23338:18;;;23331:30;23397:34;23377:18;;;23370:62;23468:34;23448:18;;;23441:62;23540:29;23519:19;;;23512:58;23587:19;;32177:218:101;23117:495:156;32177:218:101;32426:32;;;32409:14;32426:32;;;:18;:32;;;;;:39;;32479:259;32503:6;32499:1;:10;32479:259;;;32538:32;;;;;;;:18;:32;;;;;;;;:81;;;;32571:10;32580:1;32571:6;:10;:::i;:::-;:14;;;;:::i;:::-;32538:48;;;;;;;;:::i;:::-;;;;;;;;;;:66;;;:81;32534:190;;32676:1;32663:10;32672:1;32663:6;:10;:::i;:::-;:14;;;;:::i;:::-;32643:7;32651:1;32643:10;;;;;;;;:::i;:::-;;;;;;:35;;;;;;;;;;;32700:5;;32534:190;32511:3;;;;:::i;:::-;;;;32479:259;;;;31981:767;;31976:3;;;;;:::i;:::-;;;;31930:818;;;-1:-1:-1;32764:7:101;31695:1083;-1:-1:-1;;;;31695:1083:101:o;2078:56:102:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2078:56:102;;-1:-1:-1;2078:56:102;;-1:-1:-1;2078:56:102:o;26832:236:101:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;27008:32:101;;;:20;:32;;;;;:46;;;;;;;;;;;:53;;27055:5;;27008:53;;;;;;:::i;:::-;;;;;;;;;;27001:60;;;;;;;;27008:53;;;;27001:60;;;;;;;-1:-1:-1;;;27001:60:101;;;;;;;;;;-1:-1:-1;;;27001:60:101;;;-1:-1:-1;;;;;27001:60:101;;;;;;;;;26832:236;-1:-1:-1;;;;26832:236:101:o;23984:196::-;-1:-1:-1;;;;;;;;;;;;;;;;;24138:28:101;;;;;;;:14;:28;;;;;:35;;24167:5;;24138:35;;;;;;:::i;:::-;;;;;;;;;;24131:42;;;;;;;;;24138:35;;24131:42;-1:-1:-1;;;;;24131:42:101;;;;-1:-1:-1;;;24131:42:101;;-1:-1:-1;;;;;24131:42:101;;;;;;;;;23984:196;-1:-1:-1;;;23984:196:101:o;30217:199::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;30370:32:101;;;;;:18;:32;;;;;;:39;;30403:5;;30370:39;;;;;;:::i;:::-;;;;;;;;;;30363:46;;;;;;;;30370:39;;;;30363:46;;;;;;;-1:-1:-1;;;30363:46:101;;;;;;;;;;-1:-1:-1;;;30363:46:101;;;-1:-1:-1;;;;;30363:46:101;;;;;;;;;30217:199;-1:-1:-1;;;30217:199:101:o;9210:231::-;1367:19;-1:-1:-1;;;;;1346:47:101;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1332:63:101;:10;-1:-1:-1;;;;;1332:63:101;;1324:162;;;;-1:-1:-1;;;1324:162:101;;;;;;;:::i;:::-;9357:12:::1;1570:27;1584:12;22902:32:::0;;22879:4;22902:32;;;:18;:32;;;;;:39;:44;;;22813:140;1570:27:::1;1562:89;;;;-1:-1:-1::0;;;1562:89:101::1;;;;;;;:::i;:::-;9381:53:::2;9407:12;9421;9381:25;:53::i;5234:982::-:0;1114:10;-1:-1:-1;;;;;1136:19:101;1114:42;;1093:165;;;;-1:-1:-1;;;1093:165:101;;;;;;;:::i;:::-;5557:9:::1;5552:658;5572:24:::0;;::::1;5552:658;;;5617:18;5644:13;;5658:1;5644:16;;;;;;;:::i;:::-;::::0;;;::::1;;;;22879:4:::0;22902:32;;;:18;:32;;;;;:39;5644:16;;-1:-1:-1;22902:44:101;;;-1:-1:-1;5675:95:101::1;;;::::0;-1:-1:-1;;;5675:95:101;;23819:2:156;5675:95:101::1;::::0;::::1;23801:21:156::0;23858:2;23838:18;;;23831:30;23897:34;23877:18;;;23870:62;23968:25;23948:18;;;23941:53;24011:19;;5675:95:101::1;23617:419:156::0;5675:95:101::1;5875:17;5895:157;5952:10;5995:12;6036:1;5895:26;:157::i;:::-;5875:177;;6150:49;6174:12;6188:10;6150:23;:49::i;:::-;;5603:607;;5598:3;;;;;:::i;:::-;;;;5552:658;;;;5234:982:::0;;;:::o;9970:236::-;1367:19;-1:-1:-1;;;;;1346:47:101;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1332:63:101;:10;-1:-1:-1;;;;;1332:63:101;;1324:162;;;;-1:-1:-1;;;1324:162:101;;;;;;;:::i;:::-;10126:12:::1;1570:27;1584:12;22902:32:::0;;22879:4;22902:32;;;:18;:32;;;;;:39;:44;;;22813:140;1570:27:::1;1562:89;;;;-1:-1:-1::0;;;1562:89:101::1;;;;;;;:::i;:::-;10150:49:::2;10169:12;10183:15;10150:18;:49::i;30953:368::-:0;31162:32;;;31106:6;31162:32;;;:18;:32;;;;;:39;;31106:6;;31162:32;31195:5;;31162:39;;;;;;:::i;:::-;;;;;;;;;;31124:77;;;;;;;;31162:39;;;;31124:77;;;;;;;-1:-1:-1;;;31124:77:101;;;;;;;;;;-1:-1:-1;;;;;;;;31124:77:101;;;;;;;;;;;;-1:-1:-1;31211:64:101;31124:77;31263:11;31211:33;:64::i;29706:188::-;29804:32;;;29779:6;29804:32;;;:18;:32;;;;;;;29837:39;;29804:32;;29837:43;;;:::i;:::-;29804:77;;;;;;;;:::i;:::-;;;;;;;;;;:83;-1:-1:-1;;;29804:83:101;;-1:-1:-1;;;;;29804:83:101;;;-1:-1:-1;;29706:188:101:o;27662:270::-;27817:6;27842:83;27887:10;27899:12;27913:11;27842:44;:83::i;28599:413::-;28774:6;28833:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;;28774:6;;28833:46;28880:5;;28833:53;;;;;;:::i;:::-;;;;;;;;;;28792:94;;;;;;;;28833:53;;;;28792:94;;;;;;;-1:-1:-1;;;28792:94:101;;;;;;;;;;-1:-1:-1;;;;;;;;28792:94:101;;;;;;;;;;;;-1:-1:-1;28896:67:101;28792:94;28951:11;28896:33;:67::i;:::-;28980:25;;;;28599:413;-1:-1:-1;;;;;28599:413:101:o;800:130:123:-;872:6;897:26;913:4;919:3;897:15;:26::i;25877:517:101:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;26044:32:101;;;:20;:32;;;;;:46;;;;;;;;;;:53;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;26044:53:101;;26155:233;;26200:19;-1:-1:-1;26193:26:101;;-1:-1:-1;26193:26:101;26155:233;26272:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;26319:17;26335:1;26319:13;:17;:::i;:::-;26272:65;;;;;;;;:::i;:::-;;;;;;;;;;26250:87;;;;;;;;26272:65;;;;26250:87;;;;;;;-1:-1:-1;;;26250:87:101;;;;;;;;;;-1:-1:-1;;;;;;;;26250:87:101;;;;;;;;;;;;-1:-1:-1;26351:26:101;;-1:-1:-1;;26351:26:101;27183:355;27327:6;27364:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;27428:83;27385:10;27397:12;27499:11;27428:44;:83::i;:::-;27364:161;;;;;;;;;;:::i;:::-;;;;;;;;;;:167;-1:-1:-1;;;27364:167:101;;-1:-1:-1;;;;;27364:167:101;;27183:355;-1:-1:-1;;;;27183:355:101:o;8608:596::-;1114:10;-1:-1:-1;;;;;1136:19:101;1114:42;;1093:165;;;;-1:-1:-1;;;1093:165:101;;;;;;;:::i;:::-;22902:32;;;22879:4;22902:32;;;:18;:32;;;;;:39;:44;8795:94:::1;;;::::0;-1:-1:-1;;;8795:94:101;;24243:2:156;8795:94:101::1;::::0;::::1;24225:21:156::0;24282:2;24262:18;;;24255:30;24321:34;24301:18;;;24294:62;-1:-1:-1;;;24372:18:156;;;24365:51;24433:19;;8795:94:101::1;24041:417:156::0;8795:94:101::1;8899:49;8918:12;8932:15;8899:18;:49::i;:::-;8958:53;8984:12;8998;8958:25;:53::i;:::-;-1:-1:-1::0;;9022:32:101::1;;;::::0;;;:18:::1;:32;::::0;;;;;;;9060:136;;::::1;::::0;::::1;::::0;;::::1;9112:12;9060:136:::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;9022:175;;;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;9022:175:101::1;-1:-1:-1::0;;;9022:175:101::1;-1:-1:-1::0;;;;;;;;9022:175:101;;::::1;-1:-1:-1::0;;;9022:175:101::1;-1:-1:-1::0;;9022:175:101;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;8608:596::o;16378:1272::-;16556:32;;;16468:6;16556:32;;;:18;:32;;;;;;;:39;;;16468:6;;16556:32;16676:17;;16556:39;16676:17;:::i;:::-;16643:51;;;;;;;;:::i;:::-;;;;;;;;16605:89;;16756:10;16770:1;16756:15;16752:74;;;16794:21;-1:-1:-1;;;16794:21:101;;-1:-1:-1;;;;;16794:21:101;;-1:-1:-1;16787:28:101;;-1:-1:-1;16787:28:101;16752:74;16959:21;;16929:15;;16947:46;;-1:-1:-1;;;16959:21:101;;-1:-1:-1;;;;;16959:21:101;16982:10;16947:11;:46::i;:::-;17199:33;;16929:64;;-1:-1:-1;17243:12:101;17199:57;;;;:33;;:57;17195:423;;;17272:32;;-1:-1:-1;;;;;;;;17272:32:101;-1:-1:-1;;;;;;;;17272:32:101;;;;;;17195:423;;;17335:60;;;17382:12;17335:60;;-1:-1:-1;;;17335:60:101;;;-1:-1:-1;;17335:60:101;;;;;;;;;17409:32;;;17335:37;17409:32;;;-1:-1:-1;17409:32:101;;;;;;;;17447:159;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17447:159:101;;;;;;;;;17409:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17409:198:101;-1:-1:-1;;;;;;;;17409:198:101;;;;;;-1:-1:-1;;17409:198:101;;;;;;;;;;;;;;;;;;;;;;17195:423;17635:8;16378:1272;-1:-1:-1;;;;;16378:1272:101:o;21690:1051::-;21795:6;21803:4;21819:13;21842:20;21865:34;21886:12;23820:28;;23794:7;23820:28;;;:14;:28;;;;;:35;;23723:139;21865:34;-1:-1:-1;;;;;;;;;;;;;;;;;21842:57:101;;-1:-1:-1;22036:33:101;;;21963:31;22036:33;;;:19;:33;;;;;;;;21997:73;;-1:-1:-1;;;21997:73:101;;-1:-1:-1;;;;;21997:10:101;:28;;;;:73;;22026:8;;21997:73;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21997:73:101;;;;;;;;;;;;:::i;:::-;21963:107;;22085:9;22080:444;22104:12;22100:1;:16;22080:444;;;22234:28;;;;;;;:14;:28;;;;;:31;;22263:1;;22234:31;;;;;;:::i;:::-;;;;;;;;;22210:55;;;;;;;;;22234:31;;22210:55;-1:-1:-1;;;;;22210:55:101;;;;-1:-1:-1;;;22210:55:101;;-1:-1:-1;;;;;22210:55:101;;;;;22368:17;;22210:55;;-1:-1:-1;22368:17:101;;22383:1;;22368:17;;;;;;:::i;:::-;;;;;;;:21;22364:150;;;792:4:102;22446:21:101;:32;;;-1:-1:-1;;;;;22426:52:101;:14;22441:1;22426:17;;;;;;;;:::i;:::-;;;;;;;:52;;;;:::i;:::-;:72;;;;:::i;:::-;22409:90;;;;:::i;:::-;;;22364:150;22118:3;;;;:::i;:::-;;;;22080:444;;;-1:-1:-1;;;22657:35:101;;;22624:20;22657:35;;;;;;;;;;;22647:6;;-1:-1:-1;;;;;;;22657:35:101;;;22647:45;;;;;;-1:-1:-1;21690:1051:101;;;;;;:::o;14377:1857::-;14518:6;14587:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;14518:6;;14655:18;14651:1393;;14750:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;14802:159;;;;;;;;14858:12;14802:159;;;;;;;;;;-1:-1:-1;;;;;14802:159:101;;;;;;;;;14750:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14750:212:101;-1:-1:-1;;;;;;;;14750:212:101;;;-1:-1:-1;;;14750:212:101;-1:-1:-1;;14750:212:101;;;;;;;;;;;;;;;;;;;14651:1393;;;15068:30;15101:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;15148:15;15162:1;15148:13;:15;:::i;:::-;15101:63;;;;;;;;:::i;:::-;;;;;;;;;;15191:16;;-1:-1:-1;;;;;;;;15191:16:101;;;;;;-1:-1:-1;15101:63:101;;-1:-1:-1;15290:21:101;;;;15286:68;;;15338:1;15331:8;;;;;;;15286:68;15580:28;;15619:12;15580:52;;;;:28;;:52;15576:458;;;15652:27;;-1:-1:-1;;;;;;;;15652:27:101;-1:-1:-1;;;;;;;;15652:27:101;;;;;;15576:458;;;15718:55;;-1:-1:-1;;15718:55:101;-1:-1:-1;;;15760:12:101;15718:55;;;;;;;;;;;;;-1:-1:-1;15791:32:101;;;:20;:32;;;;;;;;:46;;;;;;;;;;15843:175;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15843:175:101;;;;;;;;;15791:228;;-1:-1:-1;15791:228:101;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15791:228:101;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15791:228:101;-1:-1:-1;;;15791:228:101;;;;;;;;;;;15576:458;14979:1065;14651:1393;16104:55;;;26996:4:156;26984:17;;26966:36;;-1:-1:-1;;;;;27038:39:156;;27033:2;27018:18;;27011:67;16124:10:101;;16104:55;;26939:18:156;16104:55:101;;;;;;;16176:51;16200:9;16216:8;16176:15;:51::i;:::-;16169:58;14377:1857;-1:-1:-1;;;;;;14377:1857:101:o;20144:242::-;20216:6;20246:1;20238:5;:9;20234:146;;;20293:6;20294:5;20293:6;:::i;:::-;20270:31;;:5;:31;:::i;:::-;20263:38;;;;20234:146;20339:30;20362:5;20339;:30;:::i;13969:223::-;14064:35;;;:21;:35;;;;;;;;;;;;:50;;-1:-1:-1;;14064:50:101;-1:-1:-1;;;;;14064:50:101;;;;;;;;14129:56;;1983:58:156;;;14129:56:101;;1956:18:156;14129:56:101;;;;;;;13969:223;;:::o;18193:1628::-;18356:1;18331:15;:22;:26;18323:95;;;;-1:-1:-1;;;18323:95:101;;27674:2:156;18323:95:101;;;27656:21:156;27713:2;27693:18;;;27686:30;-1:-1:-1;;;;;;;;;;;27732:18:156;;;27725:62;27823:26;27803:18;;;27796:54;27867:19;;18323:95:101;27472:420:156;18323:95:101;18453:22;;18513:28;;;18428:22;18513:28;;;:14;:28;;;;;;;;:35;;18579:34;18453:22;18513:35;18579:34;:::i;:::-;:66;;18558:182;;;;-1:-1:-1;;;18558:182:101;;28232:2:156;18558:182:101;;;28214:21:156;28271:2;28251:18;;;28244:30;-1:-1:-1;;;;;;;;;;;28290:18:156;;;28283:62;28381:34;28361:18;;;28354:62;-1:-1:-1;;;28432:19:156;;;28425:36;28478:19;;18558:182:101;28030:473:156;18558:182:101;18755:9;18750:1065;18774:14;18770:1;:18;18750:1065;;;18933:9;18928:290;18953:21;18973:1;18953:17;:21;:::i;:::-;18948:1;:27;18928:290;;;19073:15;19089:1;19073:18;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;19029:71:101;:14;:28;19044:12;19029:28;;;;;;;;;;;;;;;19058:1;19029:31;;;;;;;;:::i;:::-;;;;;;;;;;:40;-1:-1:-1;;;;;19029:40:101;:71;;19000:203;;;;-1:-1:-1;;;19000:203:101;;28710:2:156;19000:203:101;;;28692:21:156;28749:2;28729:18;;;28722:30;-1:-1:-1;;;;;;;;;;;28768:18:156;;;28761:62;28859:31;28839:18;;;28832:59;28908:19;;19000:203:101;28508:425:156;19000:203:101;18977:3;;;;:::i;:::-;;;;18928:290;;;;19288:1;19256:15;19272:1;19256:18;;;;;;;;:::i;:::-;;;;;;;:29;;;-1:-1:-1;;;;;19256:33:101;;19231:162;;;;-1:-1:-1;;;19231:162:101;;29140:2:156;19231:162:101;;;29122:21:156;29179:2;29159:18;;;29152:30;-1:-1:-1;;;;;;;;;;;29198:18:156;;;29191:62;29289:34;29269:18;;;29262:62;-1:-1:-1;;;29340:19:156;;;29333:37;29387:19;;19231:162:101;28938:474:156;19231:162:101;19407:28;;;;;;;:14;:28;;;;;19441:18;;:15;;19457:1;;19441:18;;;;;;:::i;:::-;;;;;;;;;;;;19407:53;;;;;;;-1:-1:-1;19407:53:101;;;;;;;;;;;;-1:-1:-1;;;;;19407:53:101;-1:-1:-1;;;19407:53:101;-1:-1:-1;;;;;19407:53:101;;;;;;;;;;19474:33;;;;;:19;:33;;;;;19513:18;;:15;;19529:1;;19513:18;;;;;;:::i;:::-;;;;;;;;;;;;:27;19474:67;;;;;;;-1:-1:-1;19474:67:101;;;;;;;;;;-1:-1:-1;;;;;;19474:67:101;-1:-1:-1;;;;;19474:67:101;;;;;;;;;19596:18;;19560:64;;;;;;19596:18;;19612:1;;19596:18;;;;;;:::i;:::-;;;;;;;;;;;;:27;19560:64;;-1:-1:-1;;;;;8646:32:156;;;8628:51;;8601:18;19560:64:101;;;;;;;19686:12;19643:161;;;19716:15;19732:1;19716:18;;;;;;;;:::i;:::-;;;;;;;:27;;;19761:15;19777:1;19761:18;;;;;;;;:::i;:::-;;;;;;;:29;;;19643:161;;;;;;;:::i;:::-;;;;;;;;18790:3;;;;:::i;:::-;;;;18750:1065;;;;18313:1508;;18193:1628;;:::o;20475:830::-;20905:11;:29;;;20890:44;;:11;:44;;;;20869:177;;;;-1:-1:-1;;;20869:177:101;;29619:2:156;20869:177:101;;;29601:21:156;29658:2;29638:18;;;29631:30;29697:34;29677:18;;;29670:62;29768:34;29748:18;;;29741:62;-1:-1:-1;;;29819:19:156;;;29812:53;29882:19;;20869:177:101;29417:490:156;20869:177:101;21077:33;;;;:38;;;;:89;;;21133:11;:33;;;21119:47;;:11;:47;;;21077:89;21056:242;;;;-1:-1:-1;;;21056:242:101;;30114:2:156;21056:242:101;;;30096:21:156;30153:3;30133:18;;;30126:31;30193:34;30173:18;;;30166:62;30264:34;30244:18;;;30237:62;30336:34;30315:19;;;30308:63;-1:-1:-1;;;30387:19:156;;;30380:41;30438:19;;21056:242:101;29912:551:156;21056:242:101;20475:830;;:::o;13134:829::-;13301:6;13336:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;;13508:206;13533:5;;13508:206;;13563:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;:86;;;;13610:5;13614:1;13610;:5;:::i;:::-;13563:53;;;;;;;;:::i;:::-;;;;;;;;;;:71;;;:86;13559:145;;13683:5;13687:1;13683;:5;:::i;:::-;13669:20;;;;;;13559:145;13540:3;;;;:::i;:::-;;;;13508:206;;;-1:-1:-1;13795:161:101;;-1:-1:-1;;;13795:161:101;;30811:2:156;13795:161:101;;;30793:21:156;30850:3;30830:18;;;30823:31;30890:34;30870:18;;;30863:62;30961:34;30941:18;;;30934:62;31033:34;31012:19;;;31005:63;31105:34;31084:19;;;31077:63;-1:-1:-1;;;31156:19:156;;;31149:32;31198:19;;13795:161:101;30609:614:156;19915:149:101;19988:6;20013:44;-1:-1:-1;;;;;20043:13:101;;;;20020:12;;20013:44;:::i;14:156:156:-;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:249::-;240:6;248;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:27;357:9;340:27;:::i;:::-;330:37;414:2;399:18;;;;386:32;;-1:-1:-1;;;175:249:156:o;429:182::-;486:6;539:2;527:9;518:7;514:23;510:32;507:52;;;555:1;552;545:12;507:52;578:27;595:9;578:27;:::i;1053:323::-;-1:-1:-1;;;;;1261:32:156;;;;1243:51;;-1:-1:-1;;;;;1330:39:156;1325:2;1310:18;;1303:67;1231:2;1216:18;;1053:323::o;1381:131::-;-1:-1:-1;;;;;1456:31:156;;1446:42;;1436:70;;1502:1;1499;1492:12;1436:70;1381:131;:::o;1517:317::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1683:27;1700:9;1683:27;:::i;:::-;1673:37;;1760:2;1749:9;1745:18;1732:32;1773:31;1798:5;1773:31;:::i;:::-;1823:5;1813:15;;;1517:317;;;;;:::o;2052:367::-;2115:8;2125:6;2179:3;2172:4;2164:6;2160:17;2156:27;2146:55;;2197:1;2194;2187:12;2146:55;-1:-1:-1;2220:20:156;;-1:-1:-1;;;;;2252:30:156;;2249:50;;;2295:1;2292;2285:12;2249:50;2332:4;2324:6;2320:17;2308:29;;2392:3;2385:4;2375:6;2372:1;2368:14;2360:6;2356:27;2352:38;2349:47;2346:67;;;2409:1;2406;2399:12;2424:842;2552:6;2560;2568;2576;2584;2637:2;2625:9;2616:7;2612:23;2608:32;2605:52;;;2653:1;2650;2643:12;2605:52;2676:27;2693:9;2676:27;:::i;:::-;2666:37;;2754:2;2743:9;2739:18;2726:32;-1:-1:-1;;;;;2818:2:156;2810:6;2807:14;2804:34;;;2834:1;2831;2824:12;2804:34;2873:70;2935:7;2926:6;2915:9;2911:22;2873:70;:::i;:::-;2962:8;;-1:-1:-1;2847:96:156;-1:-1:-1;3050:2:156;3035:18;;3022:32;;-1:-1:-1;3066:16:156;;;3063:36;;;3095:1;3092;3085:12;3063:36;;3134:72;3198:7;3187:8;3176:9;3172:24;3134:72;:::i;:::-;2424:842;;;;-1:-1:-1;2424:842:156;;-1:-1:-1;3225:8:156;;3108:98;2424:842;-1:-1:-1;;;2424:842:156:o;3271:347::-;3322:8;3332:6;3386:3;3379:4;3371:6;3367:17;3363:27;3353:55;;3404:1;3401;3394:12;3353:55;-1:-1:-1;3427:20:156;;-1:-1:-1;;;;;3459:30:156;;3456:50;;;3502:1;3499;3492:12;3456:50;3539:4;3531:6;3527:17;3515:29;;3591:3;3584:4;3575:6;3567;3563:19;3559:30;3556:39;3553:59;;;3608:1;3605;3598:12;3623:612;3711:6;3719;3727;3735;3788:2;3776:9;3767:7;3763:23;3759:32;3756:52;;;3804:1;3801;3794:12;3756:52;3843:9;3830:23;3862:31;3887:5;3862:31;:::i;:::-;3912:5;-1:-1:-1;3964:2:156;3949:18;;3936:32;;-1:-1:-1;4019:2:156;4004:18;;3991:32;-1:-1:-1;;;;;4035:30:156;;4032:50;;;4078:1;4075;4068:12;4032:50;4117:58;4167:7;4158:6;4147:9;4143:22;4117:58;:::i;:::-;3623:612;;;;-1:-1:-1;4194:8:156;-1:-1:-1;;;;3623:612:156:o;4240:467::-;4292:3;4330:5;4324:12;4357:6;4352:3;4345:19;4383:4;4412:2;4407:3;4403:12;4396:19;;4449:2;4442:5;4438:14;4470:1;4480:202;4494:6;4491:1;4488:13;4480:202;;;4559:13;;-1:-1:-1;;;;;4555:46:156;4543:59;;4622:12;;;;4657:15;;;;4516:1;4509:9;4480:202;;;-1:-1:-1;4698:3:156;;4240:467;-1:-1:-1;;;;;4240:467:156:o;4712:459::-;4965:2;4954:9;4947:21;4928:4;4991:55;5042:2;5031:9;5027:18;5019:6;4991:55;:::i;:::-;5094:9;5086:6;5082:22;5077:2;5066:9;5062:18;5055:50;5122:43;5158:6;5150;5122:43;:::i;5176:250::-;5242:6;5250;5303:2;5291:9;5282:7;5278:23;5274:32;5271:52;;;5319:1;5316;5309:12;5271:52;5355:9;5342:23;5332:33;;5384:36;5416:2;5405:9;5401:18;5384:36;:::i;:::-;5374:46;;5176:250;;;;;:::o;5724:717::-;5955:2;6007:21;;;6077:13;;5980:18;;;6099:22;;;5926:4;;5955:2;6178:15;;;;6152:2;6137:18;;;5926:4;6221:194;6235:6;6232:1;6229:13;6221:194;;;6284:49;6329:3;6320:6;6314:13;5506:10;5555:2;5547:5;5541:12;5537:21;5532:3;5525:34;5620:2;5612:4;5605:5;5601:16;5595:23;5591:32;5584:4;5579:3;5575:14;5568:56;;-1:-1:-1;;;;;5677:4:156;5670:5;5666:16;5660:23;5656:56;5649:4;5644:3;5640:14;5633:80;5431:288;;;6284:49;6390:15;;;;6362:4;6353:14;;;;;6257:1;6250:9;6221:194;;;-1:-1:-1;6432:3:156;;5724:717;-1:-1:-1;;;;;;5724:717:156:o;6446:127::-;6507:10;6502:3;6498:20;6495:1;6488:31;6538:4;6535:1;6528:15;6562:4;6559:1;6552:15;6578:257;6650:4;6644:11;;;6682:17;;-1:-1:-1;;;;;6714:34:156;;6750:22;;;6711:62;6708:88;;;6776:18;;:::i;:::-;6812:4;6805:24;6578:257;:::o;6840:275::-;6911:2;6905:9;6976:2;6957:13;;-1:-1:-1;;6953:27:156;6941:40;;-1:-1:-1;;;;;6996:34:156;;7032:22;;;6993:62;6990:88;;;7058:18;;:::i;:::-;7094:2;7087:22;6840:275;;-1:-1:-1;6840:275:156:o;7120:183::-;7180:4;-1:-1:-1;;;;;7205:6:156;7202:30;7199:56;;;7235:18;;:::i;:::-;-1:-1:-1;7280:1:156;7276:14;7292:4;7272:25;;7120:183::o;7308:961::-;7399:6;7407;7460:2;7448:9;7439:7;7435:23;7431:32;7428:52;;;7476:1;7473;7466:12;7428:52;7499:27;7516:9;7499:27;:::i;:::-;7489:37;;7545:2;7598;7587:9;7583:18;7570:32;-1:-1:-1;;;;;7617:6:156;7614:30;7611:50;;;7657:1;7654;7647:12;7611:50;7680:22;;7733:4;7725:13;;7721:27;-1:-1:-1;7711:55:156;;7762:1;7759;7752:12;7711:55;7798:2;7785:16;7821:60;7837:43;7877:2;7837:43;:::i;:::-;7821:60;:::i;:::-;7915:15;;;7997:1;7993:10;;;;7985:19;;7981:28;;;7946:12;;;;8021:19;;;8018:39;;;8053:1;8050;8043:12;8018:39;8077:11;;;;8097:142;8113:6;8108:3;8105:15;8097:142;;;8179:17;;8167:30;;8130:12;;;;8217;;;;8097:142;;;8258:5;8248:15;;;;;;;7308:961;;;;;:::o;8690:179::-;8757:20;;-1:-1:-1;;;;;8806:38:156;;8796:49;;8786:77;;8859:1;8856;8849:12;8874:322;8948:6;8956;8964;9017:2;9005:9;8996:7;8992:23;8988:32;8985:52;;;9033:1;9030;9023:12;8985:52;9069:9;9056:23;9046:33;;9098:36;9130:2;9119:9;9115:18;9098:36;:::i;:::-;9088:46;;9153:37;9186:2;9175:9;9171:18;9153:37;:::i;:::-;9143:47;;8874:322;;;;;:::o;9570:251::-;9636:6;9644;9697:2;9685:9;9676:7;9672:23;9668:32;9665:52;;;9713:1;9710;9703:12;9665:52;9736:28;9754:9;9736:28;:::i;9826:163::-;9893:20;;9953:10;9942:22;;9932:33;;9922:61;;9979:1;9976;9969:12;9994:481;10072:6;10080;10088;10141:2;10129:9;10120:7;10116:23;10112:32;10109:52;;;10157:1;10154;10147:12;10109:52;10180:28;10198:9;10180:28;:::i;:::-;10170:38;;10259:2;10248:9;10244:18;10231:32;-1:-1:-1;;;;;10278:6:156;10275:30;10272:50;;;10318:1;10315;10308:12;10272:50;10357:58;10407:7;10398:6;10387:9;10383:22;10357:58;:::i;:::-;9994:481;;10434:8;;-1:-1:-1;10331:84:156;;-1:-1:-1;;;;9994:481:156:o;10480:647::-;10649:2;10701:21;;;10771:13;;10674:18;;;10793:22;;;10620:4;;10649:2;10872:15;;;;10846:2;10831:18;;;10620:4;10915:186;10929:6;10926:1;10923:13;10915:186;;;10994:13;;11009:10;10990:30;10978:43;;11076:15;;;;11041:12;;;;10951:1;10944:9;10915:186;;11358:318;11433:6;11441;11449;11502:2;11490:9;11481:7;11477:23;11473:32;11470:52;;;11518:1;11515;11508:12;11470:52;11541:27;11558:9;11541:27;:::i;:::-;11531:37;11615:2;11600:18;;11587:32;;-1:-1:-1;11666:2:156;11651:18;;;11638:32;;11358:318;-1:-1:-1;;;11358:318:156:o;11681:260::-;5541:12;;5506:10;5537:21;;;5525:34;;5612:4;5601:16;;;5595:23;5591:32;;;5575:14;;;5568:56;5677:4;5666:16;;;5660:23;-1:-1:-1;;;;;5656:56:156;5640:14;;;5633:80;11875:2;11860:18;;11887:48;5431:288;12323:254;12388:6;12396;12449:2;12437:9;12428:7;12424:23;12420:32;12417:52;;;12465:1;12462;12455:12;12417:52;12488:27;12505:9;12488:27;:::i;:::-;12478:37;;12534;12567:2;12556:9;12552:18;12534:37;:::i;12582:477::-;12661:6;12669;12677;12730:2;12718:9;12709:7;12705:23;12701:32;12698:52;;;12746:1;12743;12736:12;12698:52;12782:9;12769:23;12759:33;;12843:2;12832:9;12828:18;12815:32;-1:-1:-1;;;;;12862:6:156;12859:30;12856:50;;;12902:1;12899;12892:12;13064:1035;13132:5;13185:3;13178:4;13170:6;13166:17;13162:27;13152:55;;13203:1;13200;13193:12;13152:55;13239:6;13226:20;13265:4;13289:60;13305:43;13345:2;13305:43;:::i;13289:60::-;13383:15;;;13469:1;13465:10;;;;13453:23;;13449:32;;;13414:12;;;;13493:15;;;13490:35;;;13521:1;13518;13511:12;13490:35;13557:2;13549:6;13545:15;13569:501;13585:6;13580:3;13577:15;13569:501;;;13663:4;13657:3;13652;13648:13;13644:24;13641:114;;;13709:1;13738:2;13734;13727:14;13641:114;13781:22;;:::i;:::-;13844:3;13831:17;13861:33;13886:7;13861:33;:::i;:::-;13907:22;;13965:31;13983:12;;;13965:31;:::i;:::-;13949:14;;;13942:55;14010:18;;14048:12;;;;13611:4;13602:14;13569:501;;;-1:-1:-1;14088:5:156;13064:1035;-1:-1:-1;;;;;;13064:1035:156:o;14104:465::-;14228:6;14236;14289:2;14277:9;14268:7;14264:23;14260:32;14257:52;;;14305:1;14302;14295:12;14257:52;14328:27;14345:9;14328:27;:::i;:::-;14318:37;;14406:2;14395:9;14391:18;14378:32;-1:-1:-1;;;;;14425:6:156;14422:30;14419:50;;;14465:1;14462;14455:12;14419:50;14488:75;14555:7;14546:6;14535:9;14531:22;14488:75;:::i;:::-;14478:85;;;14104:465;;;;;:::o;14574:322::-;14648:6;14656;14664;14717:2;14705:9;14696:7;14692:23;14688:32;14685:52;;;14733:1;14730;14723:12;14685:52;14756:27;14773:9;14756:27;:::i;:::-;14746:37;;14802;14835:2;14824:9;14820:18;14802:37;:::i;:::-;14792:47;;14886:2;14875:9;14871:18;14858:32;14848:42;;14574:322;;;;;:::o;14901:::-;14975:6;14983;14991;15044:2;15032:9;15023:7;15019:23;15015:32;15012:52;;;15060:1;15057;15050:12;15012:52;15096:9;15083:23;15073:33;;15125:36;15157:2;15146:9;15142:18;15125:36;:::i;:::-;15115:46;;15180:37;15213:2;15202:9;15198:18;15180:37;:::i;15660:391::-;15743:6;15751;15759;15767;15820:3;15808:9;15799:7;15795:23;15791:33;15788:53;;;15837:1;15834;15827:12;15788:53;15860:27;15877:9;15860:27;:::i;:::-;15850:37;;15906;15939:2;15928:9;15924:18;15906:37;:::i;:::-;15660:391;;15896:47;;-1:-1:-1;;;;15990:2:156;15975:18;;15962:32;;16041:2;16026:18;16013:32;;15660:391::o;16056:256::-;16122:6;16130;16183:2;16171:9;16162:7;16158:23;16154:32;16151:52;;;16199:1;16196;16189:12;16151:52;16222:28;16240:9;16222:28;:::i;16317:537::-;16449:6;16457;16465;16518:2;16506:9;16497:7;16493:23;16489:32;16486:52;;;16534:1;16531;16524:12;16486:52;16557:27;16574:9;16557:27;:::i;:::-;16547:37;;16603;16636:2;16625:9;16621:18;16603:37;:::i;:::-;16593:47;;16691:2;16680:9;16676:18;16663:32;-1:-1:-1;;;;;16710:6:156;16707:30;16704:50;;;16750:1;16747;16740:12;16704:50;16773:75;16840:7;16831:6;16820:9;16816:22;16773:75;:::i;:::-;16763:85;;;16317:537;;;;;:::o;16859:413::-;17061:2;17043:21;;;17100:2;17080:18;;;17073:30;17139:34;17134:2;17119:18;;17112:62;-1:-1:-1;;;17205:2:156;17190:18;;17183:47;17262:3;17247:19;;16859:413::o;17277:251::-;17347:6;17400:2;17388:9;17379:7;17375:23;17371:32;17368:52;;;17416:1;17413;17406:12;17368:52;17448:9;17442:16;17467:31;17492:5;17467:31;:::i;17533:490::-;17735:2;17717:21;;;17774:2;17754:18;;;17747:30;17813:34;17808:2;17793:18;;17786:62;17884:34;17879:2;17864:18;;17857:62;-1:-1:-1;;;17950:3:156;17935:19;;17928:53;18013:3;17998:19;;17533:490::o;18887:127::-;18948:10;18943:3;18939:20;18936:1;18929:31;18979:4;18976:1;18969:15;19003:4;19000:1;18993:15;19019:184;19077:6;19130:2;19118:9;19109:7;19105:23;19101:32;19098:52;;;19146:1;19143;19136:12;19098:52;19169:28;19187:9;19169:28;:::i;19537:127::-;19598:10;19593:3;19589:20;19586:1;19579:31;19629:4;19626:1;19619:15;19653:4;19650:1;19643:15;19669:135;19708:3;-1:-1:-1;;19729:17:156;;19726:43;;;19749:18;;:::i;:::-;-1:-1:-1;19796:1:156;19785:13;;19669:135::o;19809:480::-;20011:2;19993:21;;;20050:2;20030:18;;;20023:30;20089:34;20084:2;20069:18;;20062:62;20160:34;20155:2;20140:18;;20133:62;-1:-1:-1;;;20226:3:156;20211:19;;20204:43;20279:3;20264:19;;19809:480::o;21951:125::-;21991:4;22019:1;22016;22013:8;22010:34;;;22024:18;;:::i;:::-;-1:-1:-1;22061:9:156;;21951:125::o;22081:127::-;22142:10;22137:3;22133:20;22130:1;22123:31;22173:4;22170:1;22163:15;22197:4;22194:1;22187:15;24463:800;24648:4;24696:2;24685:9;24681:18;24735:1;24731;24726:3;24722:11;24718:19;24776:2;24768:6;24764:15;24753:9;24746:34;24799:2;24837;24832;24821:9;24817:18;24810:30;24860:6;24895;24889:13;24926:6;24918;24911:22;24964:2;24953:9;24949:18;24942:25;;24986:6;24983:1;24976:17;25029:2;25026:1;25016:16;25002:30;;25050:1;25060:177;25074:6;25071:1;25068:13;25060:177;;;25139:13;;25135:22;;25123:35;;25225:1;25213:14;;;;25178:12;;;;25089:9;25060:177;;;-1:-1:-1;25254:3:156;;24463:800;-1:-1:-1;;;;;;;;24463:800:156:o;25268:881::-;25363:6;25394:2;25437;25425:9;25416:7;25412:23;25408:32;25405:52;;;25453:1;25450;25443:12;25405:52;25486:9;25480:16;-1:-1:-1;;;;;25511:6:156;25508:30;25505:50;;;25551:1;25548;25541:12;25505:50;25574:22;;25627:4;25619:13;;25615:27;-1:-1:-1;25605:55:156;;25656:1;25653;25646:12;25605:55;25685:2;25679:9;25708:60;25724:43;25764:2;25724:43;:::i;25708:60::-;25802:15;;;25884:1;25880:10;;;;25872:19;;25868:28;;;25833:12;;;;25908:19;;;25905:39;;;25940:1;25937;25930:12;25905:39;25964:11;;;;25984:135;26000:6;25995:3;25992:15;25984:135;;;26066:10;;26054:23;;26017:12;;;;26097;;;;25984:135;;;26138:5;25268:881;-1:-1:-1;;;;;;;25268:881:156:o;26154:168::-;26194:7;26260:1;26256;26252:6;26248:14;26245:1;26242:21;26237:1;26230:9;26223:17;26219:45;26216:71;;;26267:18;;:::i;:::-;-1:-1:-1;26307:9:156;;26154:168::o;26327:217::-;26367:1;26393;26383:132;;26437:10;26432:3;26428:20;26425:1;26418:31;26472:4;26469:1;26462:15;26500:4;26497:1;26490:15;26383:132;-1:-1:-1;26529:9:156;;26327:217::o;26549:244::-;26588:3;-1:-1:-1;;;;;26669:2:156;26666:1;26662:10;26699:2;26696:1;26692:10;26730:3;26726:2;26722:12;26717:3;26714:21;26711:47;;;26738:18;;:::i;:::-;26774:13;;26549:244;-1:-1:-1;;;;26549:244:156:o;27089:136::-;27124:3;-1:-1:-1;;;27145:22:156;;27142:48;;;27170:18;;:::i;:::-;-1:-1:-1;27210:1:156;27206:13;;27089:136::o;27230:237::-;27269:4;-1:-1:-1;;;;;27374:10:156;;;;27344;;27396:12;;;27393:38;;;27411:18;;:::i;:::-;27448:13;;27230:237;-1:-1:-1;;;27230:237:156:o;27897:128::-;27937:3;27968:1;27964:6;27961:1;27958:13;27955:39;;;27974:18;;:::i;:::-;-1:-1:-1;28010:9:156;;27897:128::o;30468:136::-;30507:3;30535:5;30525:39;;30544:18;;:::i;:::-;-1:-1:-1;;;30580:18:156;;30468:136::o;31228:267::-;31267:4;31296:9;;;31321:10;;-1:-1:-1;;;31340:19:156;;31333:27;;31317:44;31314:70;;;31364:18;;:::i;:::-;-1:-1:-1;;;;;31411:27:156;;31404:35;;31396:44;;31393:70;;;31443:18;;:::i;:::-;-1:-1:-1;;31480:9:156;;31228:267::o",
    "linkReferences": {},
    "immutableReferences": {
      "70045": [
        {
          "start": 1422,
          "length": 32
        },
        {
          "start": 8393,
          "length": 32
        }
      ],
      "70048": [
        {
          "start": 953,
          "length": 32
        },
        {
          "start": 1721,
          "length": 32
        },
        {
          "start": 2550,
          "length": 32
        },
        {
          "start": 3437,
          "length": 32
        },
        {
          "start": 4504,
          "length": 32
        },
        {
          "start": 6059,
          "length": 32
        },
        {
          "start": 6312,
          "length": 32
        },
        {
          "start": 6604,
          "length": 32
        },
        {
          "start": 7566,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_WEIGHING_FUNCTION_LENGTH()": "7c172347",
    "WEIGHTING_DIVISOR()": "5e5a6775",
    "addStrategies(uint8,(address,uint96)[])": "c601527d",
    "applyDelta(uint96,int256)": "7f429822",
    "calculateDelta(uint96,uint96)": "f509551a",
    "delegation()": "df5cf723",
    "deregisterOperator(bytes32,bytes)": "bd29b8cd",
    "getCurrentStake(bytes32,uint8)": "5401ed27",
    "getCurrentTotalStake(uint8)": "d5eccc05",
    "getLatestStakeUpdate(bytes32,uint8)": "f851e198",
    "getStakeAtBlockNumber(bytes32,uint8,uint32)": "fa28c627",
    "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": "f2be94ae",
    "getStakeHistory(bytes32,uint8)": "2cd95940",
    "getStakeHistoryLength(bytes32,uint8)": "4bd26e09",
    "getStakeUpdateAtIndex(uint8,bytes32,uint256)": "ac6bfb03",
    "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": "dd9846b9",
    "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": "c8294c56",
    "getTotalStakeHistoryLength(uint8)": "0491b41c",
    "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": "81c07502",
    "getTotalStakeUpdateAtIndex(uint8,uint256)": "b6904b78",
    "initializeQuorum(uint8,uint96,(address,uint96)[])": "ff694a77",
    "minimumStakeForQuorum(uint8)": "c46778a5",
    "modifyStrategyParams(uint8,uint256[],uint96[])": "20b66298",
    "recordOperatorStakeUpdate(bytes32,uint8,uint96)": "74454c6d",
    "recordTotalStakeUpdate(uint8,int256)": "0390a4d5",
    "registerOperator(address,bytes32,bytes)": "25504777",
    "registryCoordinator()": "6d14a987",
    "removeStrategies(uint8,uint256[])": "5f1f2d77",
    "setMinimumStakeForQuorum(uint8,uint96)": "bc9a40c3",
    "strategiesPerQuorum(uint8,uint256)": "9f3ccf65",
    "strategyParams(uint8,uint256)": "08732461",
    "strategyParamsByIndex(uint8,uint256)": "adc804da",
    "strategyParamsLength(uint8)": "3ca5a5f5",
    "updateOperatorStake(address,bytes32,bytes)": "66acfefe",
    "weightOfOperatorForQuorum(uint8,address)": "1f9b74e0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"applyDelta\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"prev\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"cur\",\"type\":\"uint96\"}],\"name\":\"calculateDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"newStake\",\"type\":\"uint96\"}],\"name\":\"recordOperatorStakeUpdate\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"stakeDelta\",\"type\":\"int256\"}],\"name\":\"recordTotalStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"updateOperatorStake\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\"},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Function returns weight of **0** in the event that the operator has no stake history\"},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"details\":\"Function will revert if there are no indices for the given `blockNumber`\",\"params\":{\"blockNumber\":\"Block number to retrieve the stake indices from.\",\"quorumNumbers\":\"The quorum numbers to get the stake indices for.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"are the new multipliers for the strategies\",\"quorumNumber\":\"is the quorum number to which the strategies belong\",\"strategyIndices\":\"are the indices of the strategies to change\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum, and the total stake for each quorum\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"returns\":{\"_0\":\"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"reverts if the quorum does not exist\"}},\"version\":1},\"userdoc\":{\"events\":{\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"emitted when the minimum stake for a quorum is updated\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"QuorumCreated(uint8)\":{\"notice\":\"emitted when a new quorum is created\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds strategies and weights to the quorum\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for a certain quorum\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of an operator's stake history for the given quorum\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for the given quorum\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`.\"},\"initializeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of existing strategies for a specific quorum\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Remove strategies and their associated weights from the quorum's considered strategies\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"notice\":\"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/harnesses/StakeRegistryHarness.sol\":\"StakeRegistryHarness\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/StakeRegistry.sol\":{\"keccak256\":\"0x71f8a955229f07bbdd91691ff7270af12d29d2a885651e8616b5725e58ffb150\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db57947ee00cc97ddc46816968ee321ffee2831120991e37e6c7ecc703cd2a86\",\"dweb:/ipfs/Qmf1Yy9St7qEQqHRPnTeq7UZwEu9KLQUSGDLT4Dts64nK2\"]},\"src/StakeRegistryStorage.sol\":{\"keccak256\":\"0x23df9a79c886917d6f581ed8fd7dc573ff01e6215cd2721a75b3c285e6a75d89\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://86f455a0a23e7ad55f5dca08dacf591eec9963959df812351f21a8d84b9d2988\",\"dweb:/ipfs/QmNbZ8emJWZXDHDw7z2GrH7sc8gdpMNEQaYWE3KKNjrAmM\"]},\"src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e\",\"dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e\"]},\"src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637\",\"dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db\",\"dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]},\"src/libraries/BN254.sol\":{\"keccak256\":\"0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49\",\"dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91\"]},\"src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0x4ffce814c47fe37a37aad27c3f47467ec38b9d5ed2522b4227432338d603e9ba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ea1e591567eea0872726c626492b20b39b0dacfb4e94452cf15b21525257918\",\"dweb:/ipfs/QmbvBmSxoTQFEUsDjYnSKyH1DXsghJA21T3TMVHA4ZLQD6\"]},\"test/harnesses/StakeRegistryHarness.sol\":{\"keccak256\":\"0x8d2a52a86aecc9928910128a15bedaf165810db3cff59a5b466e47ef2bd65941\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aa1983fb4aca689e1110c34c66673e464408f78b8624df8043fe32c4dc30f395\",\"dweb:/ipfs/QmUmTBLB8WqacP38DVY5ccTmruBWLHjQegaLjPQML3Y9eV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRegistryCoordinator",
              "name": "_registryCoordinator",
              "type": "address"
            },
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegationManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinimumStakeForQuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorStakeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "QuorumCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToQuorum",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "multiplier",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyMultiplierUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromQuorum",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_WEIGHING_FUNCTION_LENGTH",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WEIGHTING_DIVISOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "_strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "applyDelta",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "prev",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "cur",
              "type": "uint96"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateDelta",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTotalStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestStakeUpdate",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumberAndIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeHistory",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateIndexAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeAtBlockNumberFromIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeIndicesAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "_strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumStakeForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "strategyIndices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "newMultipliers",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "newStake",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordOperatorStakeUpdate",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "int256",
              "name": "stakeDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordTotalStakeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerOperator",
          "outputs": [
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCoordinator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "indicesToRemove",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinimumStakeForQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesPerQuorum",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsByIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorStake",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightOfOperatorForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategies(uint8,(address,uint96)[])": {
            "details": "Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\"."
          },
          "deregisterOperator(bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for",
            "params": {
              "operatorId": "The id of the operator to deregister.",
              "quorumNumbers": "The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."
            }
          },
          "getCurrentStake(bytes32,uint8)": {
            "details": "Function returns weight of **0** in the event that the operator has no stake history"
          },
          "getCurrentTotalStake(uint8)": {
            "details": "Will revert if `_totalStakeHistory[quorumNumber]` is empty."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "details": "Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeHistory(bytes32,uint8)": {
            "params": {
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "index": "Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": {
            "details": "Function will revert if there are no indices for the given `blockNumber`",
            "params": {
              "blockNumber": "Block number to retrieve the stake indices from.",
              "quorumNumbers": "The quorum numbers to get the stake indices for."
            }
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "params": {
              "index": "Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "params": {
              "newMultipliers": "are the new multipliers for the strategies",
              "quorumNumber": "is the quorum number to which the strategies belong",
              "strategyIndices": "are the indices of the strategies to change"
            }
          },
          "registerOperator(address,bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered",
            "params": {
              "operator": "The address of the operator to register.",
              "operatorId": "The id of the operator to register.",
              "quorumNumbers": "The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."
            },
            "returns": {
              "_0": "The operator's current stake for each quorum, and the total stake for each quorum"
            }
          },
          "removeStrategies(uint8,uint256[])": {
            "details": "higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove"
          },
          "updateOperatorStake(address,bytes32,bytes)": {
            "returns": {
              "_0": "A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered."
            }
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "details": "reverts if the quorum does not exist"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_WEIGHING_FUNCTION_LENGTH()": {
            "notice": "Maximum length of dynamic arrays in the `strategyParams` mapping."
          },
          "WEIGHTING_DIVISOR()": {
            "notice": "Constant used as a divisor in calculating weights."
          },
          "addStrategies(uint8,(address,uint96)[])": {
            "notice": "Adds strategies and weights to the quorum"
          },
          "delegation()": {
            "notice": "The address of the Delegation contract for EigenLayer."
          },
          "deregisterOperator(bytes32,bytes)": {
            "notice": "Deregisters the operator with `operatorId` for the specified `quorumNumbers`."
          },
          "getCurrentStake(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`"
          },
          "getCurrentTotalStake(uint8)": {
            "notice": "Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for a certain quorum"
          },
          "getStakeAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "notice": "Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise."
          },
          "getStakeHistory(bytes32,uint8)": {
            "notice": "Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeHistoryLength(bytes32,uint8)": {
            "notice": "Returns the length of an operator's stake history for the given quorum"
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "notice": "Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "notice": "Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise."
          },
          "getTotalStakeHistoryLength(uint8)": {
            "notice": "Returns the length of the total stake history for the given quorum"
          },
          "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": {
            "notice": "Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "notice": "Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`."
          },
          "initializeQuorum(uint8,uint96,(address,uint96)[])": {
            "notice": "Initialize a new quorum and push its first history update"
          },
          "minimumStakeForQuorum(uint8)": {
            "notice": "In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "notice": "Modifies the weights of existing strategies for a specific quorum"
          },
          "registerOperator(address,bytes32,bytes)": {
            "notice": "Registers the `operator` with `operatorId` for the specified `quorumNumbers`."
          },
          "registryCoordinator()": {
            "notice": "the coordinator contract that this registry is associated with"
          },
          "removeStrategies(uint8,uint256[])": {
            "notice": "Remove strategies and their associated weights from the quorum's considered strategies"
          },
          "strategyParams(uint8,uint256)": {
            "notice": "mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"
          },
          "strategyParamsByIndex(uint8,uint256)": {
            "notice": "Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"
          },
          "strategyParamsLength(uint8)": {
            "notice": "Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."
          },
          "updateOperatorStake(address,bytes32,bytes)": {
            "notice": "Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator"
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "notice": "This function computes the total weight of the @param operator in the quorum @param quorumNumber."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/harnesses/StakeRegistryHarness.sol": "StakeRegistryHarness"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/StakeRegistry.sol": {
        "keccak256": "0x71f8a955229f07bbdd91691ff7270af12d29d2a885651e8616b5725e58ffb150",
        "urls": [
          "bzz-raw://db57947ee00cc97ddc46816968ee321ffee2831120991e37e6c7ecc703cd2a86",
          "dweb:/ipfs/Qmf1Yy9St7qEQqHRPnTeq7UZwEu9KLQUSGDLT4Dts64nK2"
        ],
        "license": "BUSL-1.1"
      },
      "src/StakeRegistryStorage.sol": {
        "keccak256": "0x23df9a79c886917d6f581ed8fd7dc573ff01e6215cd2721a75b3c285e6a75d89",
        "urls": [
          "bzz-raw://86f455a0a23e7ad55f5dca08dacf591eec9963959df812351f21a8d84b9d2988",
          "dweb:/ipfs/QmNbZ8emJWZXDHDw7z2GrH7sc8gdpMNEQaYWE3KKNjrAmM"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IBLSApkRegistry.sol": {
        "keccak256": "0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32",
        "urls": [
          "bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e",
          "dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IIndexRegistry.sol": {
        "keccak256": "0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf",
        "urls": [
          "bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637",
          "dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistryCoordinator.sol": {
        "keccak256": "0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9",
        "urls": [
          "bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db",
          "dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/BN254.sol": {
        "keccak256": "0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417",
        "urls": [
          "bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49",
          "dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91"
        ],
        "license": "MIT"
      },
      "src/libraries/BitmapUtils.sol": {
        "keccak256": "0x4ffce814c47fe37a37aad27c3f47467ec38b9d5ed2522b4227432338d603e9ba",
        "urls": [
          "bzz-raw://3ea1e591567eea0872726c626492b20b39b0dacfb4e94452cf15b21525257918",
          "dweb:/ipfs/QmbvBmSxoTQFEUsDjYnSKyH1DXsghJA21T3TMVHA4ZLQD6"
        ],
        "license": "BUSL-1.1"
      },
      "test/harnesses/StakeRegistryHarness.sol": {
        "keccak256": "0x8d2a52a86aecc9928910128a15bedaf165810db3cff59a5b466e47ef2bd65941",
        "urls": [
          "bzz-raw://aa1983fb4aca689e1110c34c66673e464408f78b8624df8043fe32c4dc30f395",
          "dweb:/ipfs/QmUmTBLB8WqacP38DVY5ccTmruBWLHjQegaLjPQML3Y9eV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/harnesses/StakeRegistryHarness.sol",
    "id": 75655,
    "exportedSymbols": {
      "BitmapUtils": [
        72455
      ],
      "IDelegationManager": [
        7102
      ],
      "IRegistryCoordinator": [
        70745
      ],
      "IStakeRegistry": [
        71147
      ],
      "IStrategy": [
        8135
      ],
      "StakeRegistry": [
        70015
      ],
      "StakeRegistryHarness": [
        75654
      ],
      "StakeRegistryStorage": [
        70108
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1030:123",
    "nodes": [
      {
        "id": 75575,
        "nodeType": "PragmaDirective",
        "src": "37:24:123",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 75576,
        "nodeType": "ImportDirective",
        "src": "63:37:123",
        "nodes": [],
        "absolutePath": "src/StakeRegistry.sol",
        "file": "../../src/StakeRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75655,
        "sourceUnit": 70016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75654,
        "nodeType": "ContractDefinition",
        "src": "201:865:123",
        "nodes": [
          {
            "id": 75592,
            "nodeType": "FunctionDefinition",
            "src": "254:179:123",
            "nodes": [],
            "body": {
              "id": 75591,
              "nodeType": "Block",
              "src": "426:7:123",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75587,
                    "name": "_registryCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75581,
                    "src": "384:20:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$70745",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  },
                  {
                    "id": 75588,
                    "name": "_delegationManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75584,
                    "src": "406:18:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  }
                ],
                "id": 75589,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 75586,
                  "name": "StakeRegistry",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70015,
                  "src": "370:13:123"
                },
                "nodeType": "ModifierInvocation",
                "src": "370:55:123"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75581,
                  "mutability": "mutable",
                  "name": "_registryCoordinator",
                  "nameLocation": "296:20:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75592,
                  "src": "275:41:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryCoordinator_$70745",
                    "typeString": "contract IRegistryCoordinator"
                  },
                  "typeName": {
                    "id": 75580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75579,
                      "name": "IRegistryCoordinator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70745,
                      "src": "275:20:123"
                    },
                    "referencedDeclaration": 70745,
                    "src": "275:20:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryCoordinator_$70745",
                      "typeString": "contract IRegistryCoordinator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75584,
                  "mutability": "mutable",
                  "name": "_delegationManager",
                  "nameLocation": "345:18:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75592,
                  "src": "326:37:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 75583,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75582,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "326:18:123"
                    },
                    "referencedDeclaration": 7102,
                    "src": "326:18:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "265:104:123"
            },
            "returnParameters": {
              "id": 75590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:123"
            },
            "scope": 75654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75610,
            "nodeType": "FunctionDefinition",
            "src": "439:203:123",
            "nodes": [],
            "body": {
              "id": 75609,
              "nodeType": "Block",
              "src": "556:86:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75604,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75594,
                        "src": "600:10:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75605,
                        "name": "quorumNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75596,
                        "src": "612:12:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 75606,
                        "name": "newStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75598,
                        "src": "626:8:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 75603,
                      "name": "_recordOperatorStakeUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69131,
                      "src": "573:26:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint8_$_t_uint96_$returns$_t_int256_$",
                        "typeString": "function (bytes32,uint8,uint96) returns (int256)"
                      }
                    },
                    "id": 75607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:62:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 75602,
                  "id": 75608,
                  "nodeType": "Return",
                  "src": "566:69:123"
                }
              ]
            },
            "functionSelector": "74454c6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordOperatorStakeUpdate",
            "nameLocation": "448:25:123",
            "parameters": {
              "id": 75599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75594,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "482:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75610,
                  "src": "474:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 75593,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75596,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "500:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75610,
                  "src": "494:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 75595,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:5:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75598,
                  "mutability": "mutable",
                  "name": "newStake",
                  "nameLocation": "521:8:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75610,
                  "src": "514:15:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 75597,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "473:57:123"
            },
            "returnParameters": {
              "id": 75602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75610,
                  "src": "548:6:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 75600,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:8:123"
            },
            "scope": 75654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75623,
            "nodeType": "FunctionDefinition",
            "src": "648:146:123",
            "nodes": [],
            "body": {
              "id": 75622,
              "nodeType": "Block",
              "src": "728:66:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75618,
                        "name": "quorumNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75612,
                        "src": "762:12:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 75619,
                        "name": "stakeDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75614,
                        "src": "776:10:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 75617,
                      "name": "_recordTotalStakeUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69220,
                      "src": "738:23:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_int256_$returns$_t_uint96_$",
                        "typeString": "function (uint8,int256) returns (uint96)"
                      }
                    },
                    "id": 75620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:49:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 75621,
                  "nodeType": "ExpressionStatement",
                  "src": "738:49:123"
                }
              ]
            },
            "functionSelector": "0390a4d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordTotalStakeUpdate",
            "nameLocation": "657:22:123",
            "parameters": {
              "id": 75615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75612,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "686:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75623,
                  "src": "680:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 75611,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:5:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75614,
                  "mutability": "mutable",
                  "name": "stakeDelta",
                  "nameLocation": "707:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75623,
                  "src": "700:17:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 75613,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:39:123"
            },
            "returnParameters": {
              "id": 75616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:123"
            },
            "scope": 75654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75638,
            "nodeType": "FunctionDefinition",
            "src": "800:130:123",
            "nodes": [],
            "body": {
              "id": 75637,
              "nodeType": "Block",
              "src": "880:50:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75633,
                        "name": "prev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75625,
                        "src": "913:4:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 75634,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75627,
                        "src": "919:3:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 75632,
                      "name": "_calculateDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69378,
                      "src": "897:15:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$returns$_t_int256_$",
                        "typeString": "function (uint96,uint96) pure returns (int256)"
                      }
                    },
                    "id": 75635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:26:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 75631,
                  "id": 75636,
                  "nodeType": "Return",
                  "src": "890:33:123"
                }
              ]
            },
            "functionSelector": "f509551a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDelta",
            "nameLocation": "809:14:123",
            "parameters": {
              "id": 75628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75625,
                  "mutability": "mutable",
                  "name": "prev",
                  "nameLocation": "831:4:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75638,
                  "src": "824:11:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 75624,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75627,
                  "mutability": "mutable",
                  "name": "cur",
                  "nameLocation": "844:3:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75638,
                  "src": "837:10:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 75626,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:25:123"
            },
            "returnParameters": {
              "id": 75631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75630,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75638,
                  "src": "872:6:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 75629,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "871:8:123"
            },
            "scope": 75654,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75653,
            "nodeType": "FunctionDefinition",
            "src": "936:128:123",
            "nodes": [],
            "body": {
              "id": 75652,
              "nodeType": "Block",
              "src": "1015:49:123",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75648,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75640,
                        "src": "1044:5:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 75649,
                        "name": "delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75642,
                        "src": "1051:5:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 75647,
                      "name": "_applyDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69416,
                      "src": "1032:11:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_int256_$returns$_t_uint96_$",
                        "typeString": "function (uint96,int256) pure returns (uint96)"
                      }
                    },
                    "id": 75650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:25:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 75646,
                  "id": 75651,
                  "nodeType": "Return",
                  "src": "1025:32:123"
                }
              ]
            },
            "functionSelector": "7f429822",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "applyDelta",
            "nameLocation": "945:10:123",
            "parameters": {
              "id": 75643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75640,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "963:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75653,
                  "src": "956:12:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 75639,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75642,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "977:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 75653,
                  "src": "970:12:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 75641,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:28:123"
            },
            "returnParameters": {
              "id": 75646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75653,
                  "src": "1007:6:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 75644,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:6:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:8:123"
            },
            "scope": 75654,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75577,
              "name": "StakeRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70015,
              "src": "234:13:123"
            },
            "id": 75578,
            "nodeType": "InheritanceSpecifier",
            "src": "234:13:123"
          }
        ],
        "canonicalName": "StakeRegistryHarness",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75654,
          70015,
          70108,
          71147,
          70498
        ],
        "name": "StakeRegistryHarness",
        "nameLocation": "210:20:123",
        "scope": 75655,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 123
}