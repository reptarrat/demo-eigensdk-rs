{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pausers",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_unpauser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "canPause",
          "type": "bool"
        }
      ],
      "name": "PauserStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousUnpauser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newUnpauser",
          "type": "address"
        }
      ],
      "name": "UnpauserChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "canPause",
          "type": "bool"
        }
      ],
      "name": "setIsPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newUnpauser",
          "type": "address"
        }
      ],
      "name": "setUnpauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161077838038061077883398101604081905261002f91610263565b60005b82518110156100775761006583828151811061005057610050610339565b6020026020010151600161008860201b60201c565b8061006f8161034f565b915050610032565b506100818161015a565b5050610378565b6001600160a01b0382166100f95760405162461bcd60e51b815260206004820152602d60248201527f50617573657252656769737472792e5f7365745061757365723a207a65726f2060448201526c1859191c995cdcc81a5b9c1d5d609a1b60648201526084015b60405180910390fd5b6001600160a01b03821660008181526020818152604091829020805460ff19168515159081179091558251938452908301527f65d3a1fd4c13f05cba164f80d03ce90fb4b5e21946bfc3ab7dbd434c2d0b9152910160405180910390a15050565b6001600160a01b0381166101c85760405162461bcd60e51b815260206004820152602f60248201527f50617573657252656769737472792e5f736574556e7061757365723a207a657260448201526e1bc81859191c995cdcc81a5b9c1d5d608a1b60648201526084016100f0565b600154604080516001600160a01b03928316815291831660208301527f06b4167a2528887a1e97a366eefe8549bfbf1ea3e6ac81cb2564a934d20e8892910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461025e57600080fd5b919050565b6000806040838503121561027657600080fd5b82516001600160401b038082111561028d57600080fd5b818501915085601f8301126102a157600080fd5b81516020828211156102b5576102b5610231565b8160051b604051601f19603f830116810181811086821117156102da576102da610231565b6040529283528183019350848101820192898411156102f857600080fd5b948201945b8386101561031d5761030e86610247565b855294820194938201936102fd565b965061032c9050878201610247565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561037157634e487b7160e01b600052601160045260246000fd5b5060010190565b6103f1806103876000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806346fbf68e146100515780638568520614610089578063ce5484281461009e578063eab66d7a146100b1575b600080fd5b61007461005f366004610313565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009c610097366004610335565b6100dc565b005b61009c6100ac366004610313565b61011d565b6001546100c4906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6001546001600160a01b0316331461010f5760405162461bcd60e51b815260040161010690610371565b60405180910390fd5b6101198282610153565b5050565b6001546001600160a01b031633146101475760405162461bcd60e51b815260040161010690610371565b61015081610220565b50565b6001600160a01b0382166101bf5760405162461bcd60e51b815260206004820152602d60248201527f50617573657252656769737472792e5f7365745061757365723a207a65726f2060448201526c1859191c995cdcc81a5b9c1d5d609a1b6064820152608401610106565b6001600160a01b03821660008181526020818152604091829020805460ff19168515159081179091558251938452908301527f65d3a1fd4c13f05cba164f80d03ce90fb4b5e21946bfc3ab7dbd434c2d0b9152910160405180910390a15050565b6001600160a01b03811661028e5760405162461bcd60e51b815260206004820152602f60248201527f50617573657252656769737472792e5f736574556e7061757365723a207a657260448201526e1bc81859191c995cdcc81a5b9c1d5d608a1b6064820152608401610106565b600154604080516001600160a01b03928316815291831660208301527f06b4167a2528887a1e97a366eefe8549bfbf1ea3e6ac81cb2564a934d20e8892910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461030e57600080fd5b919050565b60006020828403121561032557600080fd5b61032e826102f7565b9392505050565b6000806040838503121561034857600080fd5b610351836102f7565b91506020830135801515811461036657600080fd5b809150509250929050565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b60608201526080019056fea26469706673582212204a9ebab46c4f6f277340af077401b57f61954c183624c94447cdb69a79bf643b64736f6c634300080c0033",
    "sourceMap": "302:1876:28:-:0;;;761:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;834:9;829:102;853:8;:15;849:1;:19;829:102;;;889:31;902:8;911:1;902:11;;;;;;;;:::i;:::-;;;;;;;915:4;889:12;;;:31;;:::i;:::-;870:3;;;;:::i;:::-;;;;829:102;;;-1:-1:-1;940:23:28;953:9;940:12;:23::i;:::-;761:209;;302:1876;;1685:246;-1:-1:-1;;;;;1765:20:28;;1757:78;;;;-1:-1:-1;;;1757:78:28;;2120:2:156;1757:78:28;;;2102:21:156;2159:2;2139:18;;;2132:30;2198:34;2178:18;;;2171:62;-1:-1:-1;;;2249:18:156;;;2242:43;2302:19;;1757:78:28;;;;;;;;;-1:-1:-1;;;;;1845:16:28;;:8;:16;;;;;;;;;;;;:27;;-1:-1:-1;;1845:27:28;;;;;;;;;;1887:37;;2500:51:156;;;2567:18;;;2560:50;1887:37:28;;2473:18:156;1887:37:28;;;;;;;1685:246;;:::o;1937:239::-;-1:-1:-1;;;;;2007:25:28;;1999:85;;;;-1:-1:-1;;;1999:85:28;;2823:2:156;1999:85:28;;;2805:21:156;2862:2;2842:18;;;2835:30;2901:34;2881:18;;;2874:62;-1:-1:-1;;;2952:18:156;;;2945:45;3007:19;;1999:85:28;2621:411:156;1999:85:28;2115:8;;2099:38;;;-1:-1:-1;;;;;2115:8:28;;;3249:34:156;;3319:15;;;3314:2;3299:18;;3292:43;2099:38:28;;3184:18:156;2099:38:28;;;;;;;2147:8;:22;;-1:-1:-1;;;;;;2147:22:28;-1:-1:-1;;;;;2147:22:28;;;;;;;;;;1937:239::o;14:127:156:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:156;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1216::-;432:6;440;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;536:16;;-1:-1:-1;;;;;601:14:156;;;598:34;;;628:1;625;618:12;598:34;666:6;655:9;651:22;641:32;;711:7;704:4;700:2;696:13;692:27;682:55;;733:1;730;723:12;682:55;762:2;756:9;784:4;807:2;803;800:10;797:36;;;813:18;;:::i;:::-;859:2;856:1;852:10;891:2;885:9;954:2;950:7;945:2;941;937:11;933:25;925:6;921:38;1009:6;997:10;994:22;989:2;977:10;974:18;971:46;968:72;;;1020:18;;:::i;:::-;1056:2;1049:22;1106:18;;;1140:15;;;;-1:-1:-1;1182:11:156;;;1178:20;;;1210:19;;;1207:39;;;1242:1;1239;1232:12;1207:39;1266:11;;;;1286:159;1302:6;1297:3;1294:15;1286:159;;;1368:34;1398:3;1368:34;:::i;:::-;1356:47;;1319:12;;;;1423;;;;1286:159;;;1464:6;-1:-1:-1;1489:49:156;;-1:-1:-1;1519:18:156;;;1489:49;:::i;:::-;1479:59;;;;;;328:1216;;;;;:::o;1549:127::-;1610:10;1605:3;1601:20;1598:1;1591:31;1641:4;1638:1;1631:15;1665:4;1662:1;1655:15;1681:232;1720:3;-1:-1:-1;;1741:17:156;;1738:140;;;1800:10;1795:3;1791:20;1788:1;1781:31;1835:4;1832:1;1825:15;1863:4;1860:1;1853:15;1738:140;-1:-1:-1;1905:1:156;1894:13;;1681:232::o;3037:304::-;302:1876:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806346fbf68e146100515780638568520614610089578063ce5484281461009e578063eab66d7a146100b1575b600080fd5b61007461005f366004610313565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009c610097366004610335565b6100dc565b005b61009c6100ac366004610313565b61011d565b6001546100c4906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6001546001600160a01b0316331461010f5760405162461bcd60e51b815260040161010690610371565b60405180910390fd5b6101198282610153565b5050565b6001546001600160a01b031633146101475760405162461bcd60e51b815260040161010690610371565b61015081610220565b50565b6001600160a01b0382166101bf5760405162461bcd60e51b815260206004820152602d60248201527f50617573657252656769737472792e5f7365745061757365723a207a65726f2060448201526c1859191c995cdcc81a5b9c1d5d609a1b6064820152608401610106565b6001600160a01b03821660008181526020818152604091829020805460ff19168515159081179091558251938452908301527f65d3a1fd4c13f05cba164f80d03ce90fb4b5e21946bfc3ab7dbd434c2d0b9152910160405180910390a15050565b6001600160a01b03811661028e5760405162461bcd60e51b815260206004820152602f60248201527f50617573657252656769737472792e5f736574556e7061757365723a207a657260448201526e1bc81859191c995cdcc81a5b9c1d5d608a1b6064820152608401610106565b600154604080516001600160a01b03928316815291831660208301527f06b4167a2528887a1e97a366eefe8549bfbf1ea3e6ac81cb2564a934d20e8892910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461030e57600080fd5b919050565b60006020828403121561032557600080fd5b61032e826102f7565b9392505050565b6000806040838503121561034857600080fd5b610351836102f7565b91506020830135801515811461036657600080fd5b809150509250929050565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b60608201526080019056fea26469706673582212204a9ebab46c4f6f277340af077401b57f61954c183624c94447cdb69a79bf643b64736f6c634300080c0033",
    "sourceMap": "302:1876:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;548:14:156;;541:22;523:41;;511:2;496:18;426:40:28;;;;;;;;1279:127;;;;;;:::i;:::-;;:::i;:::-;;1573:106;;;;;;:::i;:::-;;:::i;596:23::-;;;;;-1:-1:-1;;;;;596:23:28;;;;;;-1:-1:-1;;;;;1091:32:156;;;1073:51;;1061:2;1046:18;596:23:28;927:203:156;1279:127:28;682:8;;-1:-1:-1;;;;;682:8:28;668:10;:22;660:77;;;;-1:-1:-1;;;660:77:28;;;;;;;:::i;:::-;;;;;;;;;1366:33:::1;1379:9;1390:8;1366:12;:33::i;:::-;1279:127:::0;;:::o;1573:106::-;682:8;;-1:-1:-1;;;;;682:8:28;668:10;:22;660:77;;;;-1:-1:-1;;;660:77:28;;;;;;;:::i;:::-;1647:25:::1;1660:11;1647:12;:25::i;:::-;1573:106:::0;:::o;1685:246::-;-1:-1:-1;;;;;1765:20:28;;1757:78;;;;-1:-1:-1;;;1757:78:28;;1748:2:156;1757:78:28;;;1730:21:156;1787:2;1767:18;;;1760:30;1826:34;1806:18;;;1799:62;-1:-1:-1;;;1877:18:156;;;1870:43;1930:19;;1757:78:28;1546:409:156;1757:78:28;-1:-1:-1;;;;;1845:16:28;;:8;:16;;;;;;;;;;;;:27;;-1:-1:-1;;1845:27:28;;;;;;;;;;1887:37;;2128:51:156;;;2195:18;;;2188:50;1887:37:28;;2101:18:156;1887:37:28;;;;;;;1685:246;;:::o;1937:239::-;-1:-1:-1;;;;;2007:25:28;;1999:85;;;;-1:-1:-1;;;1999:85:28;;2451:2:156;1999:85:28;;;2433:21:156;2490:2;2470:18;;;2463:30;2529:34;2509:18;;;2502:62;-1:-1:-1;;;2580:18:156;;;2573:45;2635:19;;1999:85:28;2249:411:156;1999:85:28;2115:8;;2099:38;;;-1:-1:-1;;;;;2115:8:28;;;2877:34:156;;2947:15;;;2942:2;2927:18;;2920:43;2099:38:28;;2812:18:156;2099:38:28;;;;;;;2147:8;:22;;-1:-1:-1;;;;;;2147:22:28;-1:-1:-1;;;;;2147:22:28;;;;;;;;;;1937:239::o;14:173:156:-;82:20;;-1:-1:-1;;;;;131:31:156;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:156:o;575:347::-;640:6;648;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;740:29;759:9;740:29;:::i;:::-;730:39;;819:2;808:9;804:18;791:32;866:5;859:13;852:21;845:5;842:32;832:60;;888:1;885;878:12;832:60;911:5;901:15;;;575:347;;;;;:::o;1135:406::-;1337:2;1319:21;;;1376:2;1356:18;;;1349:30;1415:34;1410:2;1395:18;;1388:62;-1:-1:-1;;;1481:2:156;1466:18;;1459:40;1531:3;1516:19;;1135:406::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isPauser(address)": "46fbf68e",
    "setIsPauser(address,bool)": "85685206",
    "setUnpauser(address)": "ce548428",
    "unpauser()": "eab66d7a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pausers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_unpauser\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canPause\",\"type\":\"bool\"}],\"name\":\"PauserStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousUnpauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUnpauser\",\"type\":\"address\"}],\"name\":\"UnpauserChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"canPause\",\"type\":\"bool\"}],\"name\":\"setIsPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUnpauser\",\"type\":\"address\"}],\"name\":\"setUnpauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"setIsPauser(address,bool)\":{\"params\":{\"canPause\":\"Whether the address should be added or removed as pauser\",\"newPauser\":\"Address to be added/removed as pauser\"}}},\"title\":\"Defines pauser & unpauser roles + modifiers to be used elsewhere.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isPauser(address)\":{\"notice\":\"Mapping of addresses to whether they hold the pauser role.\"},\"setIsPauser(address,bool)\":{\"notice\":\"Sets new pauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold\"},\"setUnpauser(address)\":{\"notice\":\"Sets new unpauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold\"},\"unpauser()\":{\"notice\":\"Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/permissions/PauserRegistry.sol\":\"PauserRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/permissions/PauserRegistry.sol\":{\"keccak256\":\"0x9365dfcbea8def048478d43a9d76e7897b82b17bbd0e86aec97deb72a2ee99d7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ba56d80f46222864ee36259f99688a53a281f2da13579b7cd5b9b52f795eb54\",\"dweb:/ipfs/Qmdf4KmCD5Q5CyMmhsbFbPhuKTJpy8rt8ZRXiJS9zmk45T\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pausers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_unpauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pauser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "canPause",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserStatusChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousUnpauser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newUnpauser",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnpauserChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPauser",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPauser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "canPause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIsPauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newUnpauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnpauser"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unpauser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "setIsPauser(address,bool)": {
            "params": {
              "canPause": "Whether the address should be added or removed as pauser",
              "newPauser": "Address to be added/removed as pauser"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isPauser(address)": {
            "notice": "Mapping of addresses to whether they hold the pauser role."
          },
          "setIsPauser(address,bool)": {
            "notice": "Sets new pauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold"
          },
          "setUnpauser(address)": {
            "notice": "Sets new unpauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold"
          },
          "unpauser()": {
            "notice": "Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/permissions/PauserRegistry.sol": "PauserRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/permissions/PauserRegistry.sol": {
        "keccak256": "0x9365dfcbea8def048478d43a9d76e7897b82b17bbd0e86aec97deb72a2ee99d7",
        "urls": [
          "bzz-raw://3ba56d80f46222864ee36259f99688a53a281f2da13579b7cd5b9b52f795eb54",
          "dweb:/ipfs/Qmdf4KmCD5Q5CyMmhsbFbPhuKTJpy8rt8ZRXiJS9zmk45T"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/permissions/PauserRegistry.sol",
    "id": 10926,
    "exportedSymbols": {
      "IPauserRegistry": [
        7778
      ],
      "PauserRegistry": [
        10925
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2142:28",
    "nodes": [
      {
        "id": 10784,
        "nodeType": "PragmaDirective",
        "src": "37:24:28",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 10785,
        "nodeType": "ImportDirective",
        "src": "63:43:28",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol",
        "file": "../interfaces/IPauserRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10926,
        "sourceUnit": 7779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10925,
        "nodeType": "ContractDefinition",
        "src": "302:1876:28",
        "nodes": [
          {
            "id": 10793,
            "nodeType": "VariableDeclaration",
            "src": "426:40:28",
            "nodes": [],
            "baseFunctions": [
              7771
            ],
            "constant": false,
            "documentation": {
              "id": 10789,
              "nodeType": "StructuredDocumentation",
              "src": "351:70:28",
              "text": "@notice Mapping of addresses to whether they hold the pauser role."
            },
            "functionSelector": "46fbf68e",
            "mutability": "mutable",
            "name": "isPauser",
            "nameLocation": "458:8:28",
            "scope": 10925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10792,
              "keyType": {
                "id": 10790,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "426:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10791,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "445:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 10796,
            "nodeType": "VariableDeclaration",
            "src": "596:23:28",
            "nodes": [],
            "baseFunctions": [
              7777
            ],
            "constant": false,
            "documentation": {
              "id": 10794,
              "nodeType": "StructuredDocumentation",
              "src": "473:118:28",
              "text": "@notice Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses."
            },
            "functionSelector": "eab66d7a",
            "mutability": "mutable",
            "name": "unpauser",
            "nameLocation": "611:8:28",
            "scope": 10925,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10795,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "596:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 10808,
            "nodeType": "ModifierDefinition",
            "src": "626:129:28",
            "nodes": [],
            "body": {
              "id": 10807,
              "nodeType": "Block",
              "src": "650:105:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10799,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "668:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "668:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10801,
                          "name": "unpauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10796,
                          "src": "682:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "668:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e646572206973206e6f74207065726d697373696f6e656420617320756e706175736572",
                        "id": 10803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "692:44:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea890b3dbb9a78e0cb9fce3af7fa4df32bce8f7429615ea40e18d113f9f57fc",
                          "typeString": "literal_string \"msg.sender is not permissioned as unpauser\""
                        },
                        "value": "msg.sender is not permissioned as unpauser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea890b3dbb9a78e0cb9fce3af7fa4df32bce8f7429615ea40e18d113f9f57fc",
                          "typeString": "literal_string \"msg.sender is not permissioned as unpauser\""
                        }
                      ],
                      "id": 10798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "660:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:77:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10805,
                  "nodeType": "ExpressionStatement",
                  "src": "660:77:28"
                },
                {
                  "id": 10806,
                  "nodeType": "PlaceholderStatement",
                  "src": "747:1:28"
                }
              ]
            },
            "name": "onlyUnpauser",
            "nameLocation": "635:12:28",
            "parameters": {
              "id": 10797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:28"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10841,
            "nodeType": "FunctionDefinition",
            "src": "761:209:28",
            "nodes": [],
            "body": {
              "id": 10840,
              "nodeType": "Block",
              "src": "819:151:28",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 10834,
                    "nodeType": "Block",
                    "src": "875:56:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10828,
                                "name": "_pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10811,
                                "src": "902:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 10830,
                              "indexExpression": {
                                "id": 10829,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10817,
                                "src": "911:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "902:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 10831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "915:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 10827,
                            "name": "_setIsPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10899,
                            "src": "889:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 10832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "889:31:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10833,
                        "nodeType": "ExpressionStatement",
                        "src": "889:31:28"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10820,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10817,
                      "src": "849:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10821,
                        "name": "_pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10811,
                        "src": "853:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "853:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "849:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10835,
                  "initializationExpression": {
                    "assignments": [
                      10817
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10817,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "842:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 10835,
                        "src": "834:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "834:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10819,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "846:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "834:13:28"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "870:3:28",
                      "subExpression": {
                        "id": 10824,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10817,
                        "src": "870:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10826,
                    "nodeType": "ExpressionStatement",
                    "src": "870:3:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "829:102:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10837,
                        "name": "_unpauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10813,
                        "src": "953:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10836,
                      "name": "_setUnpauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10924,
                      "src": "940:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:23:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10839,
                  "nodeType": "ExpressionStatement",
                  "src": "940:23:28"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10811,
                  "mutability": "mutable",
                  "name": "_pausers",
                  "nameLocation": "790:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10841,
                  "src": "773:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10809,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "773:7:28",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10810,
                    "nodeType": "ArrayTypeName",
                    "src": "773:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10813,
                  "mutability": "mutable",
                  "name": "_unpauser",
                  "nameLocation": "808:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10841,
                  "src": "800:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:46:28"
            },
            "returnParameters": {
              "id": 10815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:28"
            },
            "scope": 10925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10857,
            "nodeType": "FunctionDefinition",
            "src": "1279:127:28",
            "nodes": [],
            "body": {
              "id": 10856,
              "nodeType": "Block",
              "src": "1356:50:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10852,
                        "name": "newPauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10844,
                        "src": "1379:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10853,
                        "name": "canPause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10846,
                        "src": "1390:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10851,
                      "name": "_setIsPauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10899,
                      "src": "1366:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 10854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:33:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10855,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:33:28"
                }
              ]
            },
            "documentation": {
              "id": 10842,
              "nodeType": "StructuredDocumentation",
              "src": "976:298:28",
              "text": "@notice Sets new pauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold\n @param newPauser Address to be added/removed as pauser\n @param canPause Whether the address should be added or removed as pauser"
            },
            "functionSelector": "85685206",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10848,
                  "name": "onlyUnpauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10808,
                  "src": "1343:12:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1343:12:28"
              }
            ],
            "name": "setIsPauser",
            "nameLocation": "1288:11:28",
            "parameters": {
              "id": 10847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10844,
                  "mutability": "mutable",
                  "name": "newPauser",
                  "nameLocation": "1308:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10857,
                  "src": "1300:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10846,
                  "mutability": "mutable",
                  "name": "canPause",
                  "nameLocation": "1324:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10857,
                  "src": "1319:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10845,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1299:34:28"
            },
            "returnParameters": {
              "id": 10850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:0:28"
            },
            "scope": 10925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10870,
            "nodeType": "FunctionDefinition",
            "src": "1573:106:28",
            "nodes": [],
            "body": {
              "id": 10869,
              "nodeType": "Block",
              "src": "1637:42:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10866,
                        "name": "newUnpauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10860,
                        "src": "1660:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10865,
                      "name": "_setUnpauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10924,
                      "src": "1647:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:25:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10868,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:25:28"
                }
              ]
            },
            "documentation": {
              "id": 10858,
              "nodeType": "StructuredDocumentation",
              "src": "1412:156:28",
              "text": "@notice Sets new unpauser - only callable by unpauser, as the unpauser is expected to be kept more secure, e.g. being a multisig with a higher threshold"
            },
            "functionSelector": "ce548428",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10862,
                  "name": "onlyUnpauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10808,
                  "src": "1624:12:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1624:12:28"
              }
            ],
            "name": "setUnpauser",
            "nameLocation": "1582:11:28",
            "parameters": {
              "id": 10861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10860,
                  "mutability": "mutable",
                  "name": "newUnpauser",
                  "nameLocation": "1602:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10870,
                  "src": "1594:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:21:28"
            },
            "returnParameters": {
              "id": 10864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1637:0:28"
            },
            "scope": 10925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10899,
            "nodeType": "FunctionDefinition",
            "src": "1685:246:28",
            "nodes": [],
            "body": {
              "id": 10898,
              "nodeType": "Block",
              "src": "1747:184:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10878,
                          "name": "pauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10872,
                          "src": "1765:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1783:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1775:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1775:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1775:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1765:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617573657252656769737472792e5f7365745061757365723a207a65726f206164647265737320696e707574",
                        "id": 10884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1787:47:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c4944a092c215d24625f63a54be510c5ece3fce723530f27b92674218c8d9b7",
                          "typeString": "literal_string \"PauserRegistry._setPauser: zero address input\""
                        },
                        "value": "PauserRegistry._setPauser: zero address input"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c4944a092c215d24625f63a54be510c5ece3fce723530f27b92674218c8d9b7",
                          "typeString": "literal_string \"PauserRegistry._setPauser: zero address input\""
                        }
                      ],
                      "id": 10877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1757:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10886,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:78:28"
                },
                {
                  "expression": {
                    "id": 10891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10887,
                        "name": "isPauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10793,
                        "src": "1845:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10889,
                      "indexExpression": {
                        "id": 10888,
                        "name": "pauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10872,
                        "src": "1854:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1845:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10890,
                      "name": "canPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10874,
                      "src": "1864:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1845:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10892,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:27:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10894,
                        "name": "pauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10872,
                        "src": "1907:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10895,
                        "name": "canPause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10874,
                        "src": "1915:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10893,
                      "name": "PauserStatusChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7757,
                      "src": "1887:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 10896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10897,
                  "nodeType": "EmitStatement",
                  "src": "1882:42:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setIsPauser",
            "nameLocation": "1694:12:28",
            "parameters": {
              "id": 10875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10872,
                  "mutability": "mutable",
                  "name": "pauser",
                  "nameLocation": "1715:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10899,
                  "src": "1707:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10874,
                  "mutability": "mutable",
                  "name": "canPause",
                  "nameLocation": "1728:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10899,
                  "src": "1723:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10873,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:31:28"
            },
            "returnParameters": {
              "id": 10876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:28"
            },
            "scope": 10925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10924,
            "nodeType": "FunctionDefinition",
            "src": "1937:239:28",
            "nodes": [],
            "body": {
              "id": 10923,
              "nodeType": "Block",
              "src": "1989:187:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10905,
                          "name": "newUnpauser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10901,
                          "src": "2007:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2022:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2022:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2007:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617573657252656769737472792e5f736574556e7061757365723a207a65726f206164647265737320696e707574",
                        "id": 10911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:49:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0c046a44febc0f26280b43f221b9f6e7aa95de62781dcd0b00a4c4be747b189",
                          "typeString": "literal_string \"PauserRegistry._setUnpauser: zero address input\""
                        },
                        "value": "PauserRegistry._setUnpauser: zero address input"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0c046a44febc0f26280b43f221b9f6e7aa95de62781dcd0b00a4c4be747b189",
                          "typeString": "literal_string \"PauserRegistry._setUnpauser: zero address input\""
                        }
                      ],
                      "id": 10904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1999:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:85:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10913,
                  "nodeType": "ExpressionStatement",
                  "src": "1999:85:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10915,
                        "name": "unpauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10796,
                        "src": "2115:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10916,
                        "name": "newUnpauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10901,
                        "src": "2125:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10914,
                      "name": "UnpauserChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7763,
                      "src": "2099:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10918,
                  "nodeType": "EmitStatement",
                  "src": "2094:43:28"
                },
                {
                  "expression": {
                    "id": 10921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10919,
                      "name": "unpauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10796,
                      "src": "2147:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10920,
                      "name": "newUnpauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10901,
                      "src": "2158:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2147:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10922,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:22:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setUnpauser",
            "nameLocation": "1946:12:28",
            "parameters": {
              "id": 10902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10901,
                  "mutability": "mutable",
                  "name": "newUnpauser",
                  "nameLocation": "1967:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10924,
                  "src": "1959:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:21:28"
            },
            "returnParameters": {
              "id": 10903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:28"
            },
            "scope": 10925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10787,
              "name": "IPauserRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7778,
              "src": "329:15:28"
            },
            "id": 10788,
            "nodeType": "InheritanceSpecifier",
            "src": "329:15:28"
          }
        ],
        "canonicalName": "PauserRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10786,
          "nodeType": "StructuredDocumentation",
          "src": "108:193:28",
          "text": " @title Defines pauser & unpauser roles + modifiers to be used elsewhere.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10925,
          7778
        ],
        "name": "PauserRegistry",
        "nameLocation": "311:14:28",
        "scope": 10926,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 28
}