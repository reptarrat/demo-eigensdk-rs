{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "_strategyManager",
          "type": "address"
        },
        {
          "internalType": "contract ISlasher",
          "name": "_slasher",
          "type": "address"
        },
        {
          "internalType": "contract IEigenPodManager",
          "name": "_eigenPodManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MinWithdrawalDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "newOperatorDetails",
          "type": "tuple"
        }
      ],
      "name": "OperatorDetailsModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "OperatorMetadataURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "operatorDetails",
          "type": "tuple"
        }
      ],
      "name": "OperatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "OperatorSharesDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "OperatorSharesIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerForceUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "StrategyWithdrawalDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "oldWithdrawalRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newWithdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        }
      ],
      "name": "WithdrawalQueued",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_APPROVAL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKER_DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainETHStrategy",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateCurrentStakerDelegationDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegationApprover",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateDelegationApprovalDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stakerNonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateStakerDelegationDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        }
      ],
      "name": "calculateWithdrawalRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "middlewareTimesIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "receiveAsTokens",
          "type": "bool"
        }
      ],
      "name": "completeQueuedWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal[]",
          "name": "withdrawals",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[][]",
          "name": "tokens",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "middlewareTimesIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "receiveAsTokens",
          "type": "bool[]"
        }
      ],
      "name": "completeQueuedWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cumulativeWithdrawalsQueued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "decreaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "approverSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        }
      ],
      "name": "delegateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "stakerSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "approverSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        }
      ],
      "name": "delegateToBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "delegationApprover",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "delegationApproverSaltIsSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "earningsReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodManager",
      "outputs": [
        {
          "internalType": "contract IEigenPodManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getDelegatableShares",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "getOperatorShares",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "getWithdrawalDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "increaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPausedStatus",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minWithdrawalDelayBlocks",
          "type": "uint256"
        },
        {
          "internalType": "contract IStrategy[]",
          "name": "_strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_withdrawalDelayBlocks",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
          "name": "withdrawalsToMigrate",
          "type": "tuple[]"
        }
      ],
      "name": "migrateQueuedWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minWithdrawalDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "newOperatorDetails",
          "type": "tuple"
        }
      ],
      "name": "modifyOperatorDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "operatorDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            }
          ],
          "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
          "name": "queuedWithdrawalParams",
          "type": "tuple[]"
        }
      ],
      "name": "queueWithdrawals",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "registeringOperatorDetails",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "registerAsOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "withdrawalDelayBlocks",
          "type": "uint256[]"
        }
      ],
      "name": "setStrategyWithdrawalDelayBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "stakerOptOutWindowBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyManager",
      "outputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyWithdrawalDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "undelegate",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "withdrawalRoots",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "updateOperatorMetadataURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1137:48580:3:-:0;;;2862:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5623:34:4;;;;;5667;;;;;5711:18;;;;3074:22:3::1;:20;:22::i;:::-;-1:-1:-1::0;;3126:13:3::1;3106:33;::::0;-1:-1:-1;1137:48580:3;;5388:279:60;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:60;;1015:2:156;5447:66:60;;;997:21:156;1054:2;1034:18;;;1027:30;1093:34;1073:18;;;1066:62;-1:-1:-1;;;1144:18:156;;;1137:37;1191:19;;5447:66:60;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:60;5588:15;5573:30;;;;;;5622:28;;1363:36:156;;;5622:28:60;;1351:2:156;1336:18;5622:28:60;;;;;;;5523:138;5388:279::o;14:149:156:-;-1:-1:-1;;;;;107:31:156;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:640::-;323:6;331;339;392:2;380:9;371:7;367:23;363:32;360:52;;;408:1;405;398:12;360:52;440:9;434:16;459:49;502:5;459:49;:::i;:::-;577:2;562:18;;556:25;527:5;;-1:-1:-1;590:51:156;556:25;590:51;:::i;:::-;712:2;697:18;;691:25;660:7;;-1:-1:-1;725:51:156;691:25;725:51;:::i;:::-;795:7;785:17;;;168:640;;;;;:::o;1221:184::-;1137:48580:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061035d5760003560e01c80635f966f14116101d3578063b7f06ebe11610104578063cf80873e116100a2578063f16172b01161007c578063f16172b01461094f578063f2fde38b14610962578063f698da2514610975578063fabc1cbc1461097d57600080fd5b8063cf80873e14610908578063da8be86414610929578063eea9064b1461093c57600080fd5b8063c488375a116100de578063c488375a14610825578063c5e480db14610845578063c94b5111146108eb578063ca661c04146108fe57600080fd5b8063b7f06ebe146107cb578063bb45fef2146107ee578063c448feb81461081c57600080fd5b8063886f1195116101715780639104c3191161014b5780639104c3191461075657806399be81c814610771578063a178848414610784578063b1344271146107a457600080fd5b8063886f1195146107125780638da5cb5b14610725578063900413471461073657600080fd5b80636d70f7ae116101ad5780636d70f7ae146106b9578063715018a6146106cc578063778e55f3146106d45780637f548071146106ff57600080fd5b80635f966f141461065157806360d7faed1461067d57806365da12641461069057600080fd5b806328a573ae116102ad5780634665bcda1161024b578063597b36da11610225578063597b36da146106005780635ac86ab7146106135780635c975abb146106365780635cfe8d2c1461063e57600080fd5b80634665bcda146105c75780634fc40b61146105ee578063595c6a67146105f857600080fd5b806339b70e381161028757806339b70e381461050f5780633cdeb5e01461054e5780633e28391d1461057d57806343377382146105a057600080fd5b806328a573ae146104c957806329c77d4f146104dc57806333404396146104fc57600080fd5b8063132d49671161031a57806316928365116102f457806316928365146104435780631bbce0911461047c57806320606b701461048f57806322bf40e4146104b657600080fd5b8063132d49671461040a578063136439dd1461041d5780631522bf021461043057600080fd5b80630449ca391461036257806304a4f979146103885780630b9f487a146103af5780630dd8dd02146103c25780630f589e59146103e257806310d67a2f146103f7575b600080fd5b610375610370366004614abb565b610990565b6040519081526020015b60405180910390f35b6103757f3b89fca151cbe5122d58acee86cf184413d751d585779bdd19d3bbfa3a306dce81565b6103756103bd366004614b21565b610a15565b6103d56103d0366004614abb565b610ad7565b60405161037f9190614b7c565b6103f56103f0366004614c19565b610e53565b005b6103f5610405366004614c6c565b610fa3565b6103f5610418366004614c90565b611056565b6103f561042b366004614cd1565b61110d565b6103f561043e366004614cea565b61124c565b610375610451366004614c6c565b6001600160a01b0316600090815260996020526040902060010154600160a01b900463ffffffff1690565b61037561048a366004614c90565b611260565b6103757f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6103f56104c4366004614d55565b61128e565b6103f56104d7366004614c90565b6113d2565b6103756104ea366004614c6c565b609b6020526000908152604090205481565b6103f561050a366004614dfc565b611482565b6105367f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161037f565b61053661055c366004614c6c565b6001600160a01b039081166000908152609960205260409020600101541690565b61059061058b366004614c6c565b6115bf565b604051901515815260200161037f565b6103757f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b81565b6105367f000000000000000000000000000000000000000000000000000000000000000081565b6103756213c68081565b6103f56115df565b61037561060e36600461511b565b6116a6565b610590610621366004615157565b606654600160ff9092169190911b9081161490565b606654610375565b6103f561064c3660046151cd565b6116d6565b61053661065f366004614c6c565b6001600160a01b039081166000908152609960205260409020541690565b6103f561068b36600461532d565b611981565b61053661069e366004614c6c565b609a602052600090815260409020546001600160a01b031681565b6105906106c7366004614c6c565b611a1c565b6103f5611a3c565b6103756106e23660046153bc565b609860209081526000928352604080842090915290825290205481565b6103f561070d36600461549d565b611a50565b606554610536906001600160a01b031681565b6033546001600160a01b0316610536565b61074961074436600461552d565b611b55565b60405161037f91906155b7565b61053673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6103f561077f3660046155ca565b611c2f565b610375610792366004614c6c565b609f6020526000908152604090205481565b6105367f000000000000000000000000000000000000000000000000000000000000000081565b6105906107d9366004614cd1565b609e6020526000908152604090205460ff1681565b6105906107fc3660046155ff565b609c60209081526000928352604080842090915290825290205460ff1681565b610375609d5481565b610375610833366004614c6c565b60a16020526000908152604090205481565b6108b5610853366004614c6c565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03948516815260998352839020835191820184528054851682526001015493841691810191909152600160a01b90920463ffffffff169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff169082015260600161037f565b6103756108f936600461562b565b611d01565b61037562034bc081565b61091b610916366004614c6c565b611dba565b60405161037f9291906156ac565b6103d5610937366004614c6c565b612172565b6103f561094a3660046156d1565b612636565b6103f561095d366004615729565b612642565b6103f5610970366004614c6c565b6126d3565b610375612749565b6103f561098b366004614cd1565b612787565b609d54600090815b83811015610a0d57600060a160008787858181106109b8576109b8615745565b90506020020160208101906109cd9190614c6c565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828111156109fc578092505b50610a0681615771565b9050610998565b509392505050565b604080517f3b89fca151cbe5122d58acee86cf184413d751d585779bdd19d3bbfa3a306dce6020808301919091526001600160a01b038681168385015288811660608401528716608083015260a0820185905260c08083018590528351808403909101815260e0909201909252805191012060009081610a93612749565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f19018152919052805160209091012098975050505050505050565b60665460609060019060029081161415610b0c5760405162461bcd60e51b8152600401610b039061578c565b60405180910390fd5b6000836001600160401b03811115610b2657610b26614e9e565b604051908082528060200260200182016040528015610b4f578160200160208202803683370190505b50336000908152609a60205260408120549192506001600160a01b03909116905b85811015610e4857868682818110610b8a57610b8a615745565b9050602002810190610b9c91906157c3565b610baa9060208101906157e3565b9050878783818110610bbe57610bbe615745565b9050602002810190610bd091906157c3565b610bda90806157e3565b905014610c4f5760405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608401610b03565b6000878783818110610c6357610c63615745565b9050602002810190610c7591906157c3565b610c86906060810190604001614c6c565b6001600160a01b03161415610d145760405162461bcd60e51b815260206004820152604860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a206d7573742070726f766964652076616c6964207769746864726177616c606482015267206164647265737360c01b608482015260a401610b03565b610e193383898985818110610d2b57610d2b615745565b9050602002810190610d3d91906157c3565b610d4e906060810190604001614c6c565b8a8a86818110610d6057610d60615745565b9050602002810190610d7291906157c3565b610d7c90806157e3565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e92508d9150889050818110610dc257610dc2615745565b9050602002810190610dd491906157c3565b610de29060208101906157e3565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506128e392505050565b838281518110610e2b57610e2b615745565b602090810291909101015280610e4081615771565b915050610b70565b509095945050505050565b336000908152609960205260409020546001600160a01b031615610eed5760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a206f70657261746f722068617320616c72656164792072656769736064820152641d195c995960da1b608482015260a401610b03565b610ef73384612ea3565b604080518082019091526060815260006020820152610f19338083600061313f565b336001600160a01b03167f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e285604051610f52919061582c565b60405180910390a2336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908484604051610f9592919061587e565b60405180910390a250505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a91906158ad565b6001600160a01b0316336001600160a01b03161461104a5760405162461bcd60e51b8152600401610b03906158ca565b611053816134e4565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110b55750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6110d15760405162461bcd60e51b8152600401610b0390615914565b6110da836115bf565b15611108576001600160a01b038084166000908152609a602052604090205416611106818585856135db565b505b505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611155573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111799190615971565b6111955760405162461bcd60e51b8152600401610b039061598e565b6066548181161461120e5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608401610b03565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b611254613656565b611106848484846136b0565b6001600160a01b0383166000908152609b602052604081205461128585828686611d01565b95945050505050565b600054610100900460ff16158080156112ae5750600054600160ff909116105b806112c85750303b1580156112c8575060005460ff166001145b61132b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b03565b6000805460ff19166001179055801561134e576000805461ff0019166101001790555b61135888886138d6565b6113606139bc565b60975561136c89613a53565b61137586613aa5565b611381858585856136b0565b80156113c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114315750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61144d5760405162461bcd60e51b8152600401610b0390615914565b611456836115bf565b15611108576001600160a01b038084166000908152609a60205260409020541661110681858585613bab565b606654600290600490811614156114ab5760405162461bcd60e51b8152600401610b039061578c565b600260c95414156114fe5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b03565b600260c95560005b888110156115ae5761159e8a8a8381811061152357611523615745565b905060200281019061153591906159d6565b89898481811061154757611547615745565b905060200281019061155991906157e3565b89898681811061156b5761156b615745565b9050602002013588888781811061158457611584615745565b905060200201602081019061159991906159ec565b613c26565b6115a781615771565b9050611506565b5050600160c9555050505050505050565b6001600160a01b039081166000908152609a602052604090205416151590565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164b9190615971565b6116675760405162461bcd60e51b8152600401610b039061598e565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000816040516020016116b99190615a7d565b604051602081830303815290604052805190602001209050919050565b60005b815181101561197d5760008282815181106116f6576116f6615745565b602002602001015190506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cd293f6f846040518263ffffffff1660e01b815260040161174f9190615a90565b60408051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190615b3c565b91509150811561196f576040808401516001600160a01b0381166000908152609f602052918220805491928291906117c883615771565b919050555060006040518060e00160405280846001600160a01b031681526020018760a001516001600160a01b031681526020018760600151600001516001600160a01b03168152602001838152602001876080015163ffffffff16815260200187600001518152602001876020015181525090506000611848826116a6565b6000818152609e602052604090205490915060ff16156118de5760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e6d6967726174655175657565645760448201527f69746864726177616c733a207769746864726177616c20616c72656164792065606482015264786973747360d81b608482015260a401610b03565b6000818152609e602052604090819020805460ff19166001179055517f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f9906119299083908590615b6a565b60405180910390a160408051868152602081018390527fdc00758b65eef71dc3780c04ebe36cab6bdb266c3a698187e29e0f0dca012630910160405180910390a1505050505b8360010193505050506116d9565b5050565b606654600290600490811614156119aa5760405162461bcd60e51b8152600401610b039061578c565b600260c95414156119fd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b03565b600260c955611a0f8686868686613c26565b5050600160c95550505050565b6001600160a01b0390811660009081526099602052604090205416151590565b611a44613656565b611a4e6000613a53565b565b4283602001511015611ad45760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a401610b03565b6000609b6000876001600160a01b03166001600160a01b031681526020019081526020016000205490506000611b108783888860200151611d01565b6001600160a01b0388166000908152609b602052604090206001840190558551909150611b409088908390614410565b611b4c8787868661313f565b50505050505050565b6060600082516001600160401b03811115611b7257611b72614e9e565b604051908082528060200260200182016040528015611b9b578160200160208202803683370190505b50905060005b8351811015610a0d576001600160a01b03851660009081526098602052604081208551909190869084908110611bd957611bd9615745565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110611c1457611c14615745565b6020908102919091010152611c2881615771565b9050611ba1565b611c3833611a1c565b611cba5760405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a401610b03565b336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908383604051611cf592919061587e565b60405180910390a25050565b604080517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b6020808301919091526001600160a01b0387811683850152851660608301526080820186905260a08083018590528351808403909101815260c0909201909252805191012060009081611d77612749565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f190181529190528051602090910120979650505050505050565b6040516360f4062b60e01b81526001600160a01b03828116600483015260609182916000917f0000000000000000000000000000000000000000000000000000000000000000909116906360f4062b90602401602060405180830381865afa158015611e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4e9190615b83565b6040516394f649dd60e01b81526001600160a01b03868116600483015291925060009182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa158015611ebe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ee69190810190615bf7565b9150915060008313611efd57909590945092505050565b606080835160001415611fb7576040805160018082528183019092529060208083019080368337505060408051600180825281830190925292945090506020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600081518110611f7257611f72615745565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600081518110611fa657611fa6615745565b602002602001018181525050612165565b8351611fc4906001615cb1565b6001600160401b03811115611fdb57611fdb614e9e565b604051908082528060200260200182016040528015612004578160200160208202803683370190505b50915081516001600160401b0381111561202057612020614e9e565b604051908082528060200260200182016040528015612049578160200160208202803683370190505b50905060005b84518110156120e35784818151811061206a5761206a615745565b602002602001015183828151811061208457612084615745565b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106120b6576120b6615745565b60200260200101518282815181106120d0576120d0615745565b602090810291909101015260010161204f565b5073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600184516121089190615cc9565b8151811061211857612118615745565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600184516121489190615cc9565b8151811061215857612158615745565b6020026020010181815250505b9097909650945050505050565b6066546060906001906002908116141561219e5760405162461bcd60e51b8152600401610b039061578c565b6121a7836115bf565b6122275760405162461bcd60e51b8152602060048201526044602482018190527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a207374908201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b608482015260a401610b03565b61223083611a1c565b156122a35760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608401610b03565b6001600160a01b03831661231f5760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608401610b03565b6001600160a01b038084166000818152609a6020526040902054909116903314806123525750336001600160a01b038216145b8061237957506001600160a01b038181166000908152609960205260409020600101541633145b6123eb5760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608401610b03565b6000806123f786611dba565b9092509050336001600160a01b0387161461244d57826001600160a01b0316866001600160a01b03167ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a60405160405180910390a35b826001600160a01b0316866001600160a01b03167ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af4467660405160405180910390a36001600160a01b0386166000908152609a6020526040902080546001600160a01b031916905581516124cf57604080516000815260208101909152945061262d565b81516001600160401b038111156124e8576124e8614e9e565b604051908082528060200260200182016040528015612511578160200160208202803683370190505b50945060005b825181101561262b5760408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084838151811061257757612577615745565b60200260200101518260008151811061259257612592615745565b60200260200101906001600160a01b031690816001600160a01b0316815250508383815181106125c4576125c4615745565b6020026020010151816000815181106125df576125df615745565b6020026020010181815250506125f889878b85856128e3565b88848151811061260a5761260a615745565b6020026020010181815250505050808061262390615771565b915050612517565b505b50505050919050565b6111083384848461313f565b61264b33611a1c565b6126c95760405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a401610b03565b6110533382612ea3565b6126db613656565b6001600160a01b0381166127405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b03565b61105381613a53565b60007f000000000000000000000000000000000000000000000000000000000000000046141561277a575060975490565b6127826139bc565b905090565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127fe91906158ad565b6001600160a01b0316336001600160a01b03161461282e5760405162461bcd60e51b8152600401610b03906158ca565b6066541981196066541916146128ac5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608401610b03565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001611241565b60006001600160a01b03861661297a5760405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a401610b03565b8251612a045760405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a401610b03565b60005b8351811015612db1576001600160a01b03861615612a5d57612a5d8688868481518110612a3657612a36615745565b6020026020010151868581518110612a5057612a50615745565b60200260200101516135db565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b0316848281518110612a8d57612a8d615745565b60200260200101516001600160a01b03161415612b56577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663beffbb8988858481518110612ae657612ae6615745565b60200260200101516040518363ffffffff1660e01b8152600401612b1f9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015612b3957600080fd5b505af1158015612b4d573d6000803e3d6000fd5b50505050612da9565b846001600160a01b0316876001600160a01b03161480612c2857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b4da03d858381518110612bb257612bb2615745565b60200260200101516040518263ffffffff1660e01b8152600401612be591906001600160a01b0391909116815260200190565b602060405180830381865afa158015612c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c269190615971565b155b612cf45760405162461bcd60e51b8152602060048201526084602482018190527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448301527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648301527f73742062652073616d652061646472657373206173207374616b657220696620908201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c482015260e401610b03565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c80d4e588868481518110612d3657612d36615745565b6020026020010151868581518110612d5057612d50615745565b60200260200101516040518463ffffffff1660e01b8152600401612d7693929190615ce0565b600060405180830381600087803b158015612d9057600080fd5b505af1158015612da4573d6000803e3d6000fd5b505050505b600101612a07565b506001600160a01b0386166000908152609f60205260408120805491829190612dd983615771565b919050555060006040518060e00160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018381526020014363ffffffff1681526020018681526020018581525090506000612e41826116a6565b6000818152609e602052604090819020805460ff19166001179055519091507f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f990612e8f9083908590615b6a565b60405180910390a198975050505050505050565b6000612eb26020830183614c6c565b6001600160a01b03161415612f4c5760405162461bcd60e51b815260206004820152605460248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a2063616e6e6f742073657420606561726e696e677352656365696064820152737665726020746f207a65726f206164647265737360601b608482015260a401610b03565b6213c680612f606060830160408401615d04565b63ffffffff1611156130155760405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c401610b03565b6001600160a01b0382166000908152609960205260409081902060010154600160a01b900463ffffffff16906130519060608401908401615d04565b63ffffffff1610156130e75760405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a401610b03565b6001600160a01b0382166000908152609960205260409020819061310b8282615d41565b505060405133907ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac90611cf590849061582c565b606654600090600190811614156131685760405162461bcd60e51b8152600401610b039061578c565b613171856115bf565b156131ee5760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2073746160448201527f6b657220697320616c7265616479206163746976656c792064656c65676174656064820152601960fa1b608482015260a401610b03565b6131f784611a1c565b6132775760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a206f706560448201527f7261746f72206973206e6f74207265676973746572656420696e20456967656e6064820152642630bcb2b960d91b608482015260a401610b03565b6001600160a01b038085166000908152609960205260409020600101541680158015906132ad5750336001600160a01b03821614155b80156132c25750336001600160a01b03861614155b1561342f5742846020015110156133415760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608401610b03565b6001600160a01b0381166000908152609c6020908152604080832086845290915290205460ff16156133db5760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608401610b03565b6001600160a01b0381166000908152609c6020908152604080832086845282528220805460ff1916600117905585015161341c908890889085908890610a15565b905061342d82828760000151614410565b505b6001600160a01b038681166000818152609a602052604080822080546001600160a01b031916948a169485179055517fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049190a360008061348e88611dba565b9150915060005b82518110156113c7576134dc888a8584815181106134b5576134b5615745565b60200260200101518585815181106134cf576134cf615745565b6020026020010151613bab565b600101613495565b6001600160a01b0381166135725760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a401610b03565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03808516600090815260986020908152604080832093861683529290529081208054839290613612908490615cc9565b92505081905550836001600160a01b03167f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd848484604051610f9593929190615ce0565b6033546001600160a01b03163314611a4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b03565b8281146137385760405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a401610b03565b8260005b818110156138ce57600086868381811061375857613758615745565b905060200201602081019061376d9190614c6c565b6001600160a01b038116600090815260a1602052604081205491925086868581811061379b5761379b615745565b90506020020135905062034bc081111561385f5760405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c401610b03565b6001600160a01b038316600081815260a160209081526040918290208490558151928352820184905281018290527f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9060600160405180910390a1505050806138c790615771565b905061373c565b505050505050565b6065546001600160a01b03161580156138f757506001600160a01b03821615155b6139795760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a401610b03565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261197d826134e4565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62034bc0811115613b6a5760405162461bcd60e51b815260206004820152607860248201527f44656c65676174696f6e4d616e616765722e5f696e697469616c697a654d696e60448201527f5769746864726177616c44656c6179426c6f636b733a205f6d696e576974686460648201527f726177616c44656c6179426c6f636b732063616e6e6f74206265203e204d415860848201527f5f5749544844524157414c5f44454c41595f424c4f434b53000000000000000060a482015260c401610b03565b609d5460408051918252602082018390527fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b69910160405180910390a1609d55565b6001600160a01b03808516600090815260986020908152604080832093861683529290529081208054839290613be2908490615cb1565b92505081905550836001600160a01b03167f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c848484604051610f9593929190615ce0565b6000613c3461060e87615da4565b6000818152609e602052604090205490915060ff16613cb55760405162461bcd60e51b81526020600482015260436024820152600080516020615edc83398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a401610b03565b609d544390613cca60a0890160808a01615d04565b63ffffffff16613cda9190615cb1565b1115613d625760405162461bcd60e51b815260206004820152605f6024820152600080516020615edc83398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a401610b03565b613d726060870160408801614c6c565b6001600160a01b0316336001600160a01b031614613dff5760405162461bcd60e51b81526020600482015260506024820152600080516020615edc83398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a401610b03565b8115613e8157613e1260a08701876157e3565b85149050613e815760405162461bcd60e51b81526020600482015260426024820152600080516020615edc83398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a401610b03565b6000818152609e60205260409020805460ff191690558115613fe65760005b613ead60a08801886157e3565b9050811015613fe0574360a16000613ec860a08b018b6157e3565b85818110613ed857613ed8615745565b9050602002016020810190613eed9190614c6c565b6001600160a01b03168152602081019190915260400160002054613f1760a08a0160808b01615d04565b63ffffffff16613f279190615cb1565b1115613f455760405162461bcd60e51b8152600401610b0390615db6565b613fd8613f556020890189614c6c565b33613f6360a08b018b6157e3565b85818110613f7357613f73615745565b9050602002016020810190613f889190614c6c565b613f9560c08c018c6157e3565b86818110613fa557613fa5615745565b905060200201358a8a87818110613fbe57613fbe615745565b9050602002016020810190613fd39190614c6c565b6145ca565b600101613ea0565b506143d5565b336000908152609a60205260408120546001600160a01b0316905b61400e60a08901896157e3565b90508110156143d2574360a1600061402960a08c018c6157e3565b8581811061403957614039615745565b905060200201602081019061404e9190614c6c565b6001600160a01b0316815260208101919091526040016000205461407860a08b0160808c01615d04565b63ffffffff166140889190615cb1565b11156140a65760405162461bcd60e51b8152600401610b0390615db6565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06140c860a08a018a6157e3565b838181106140d8576140d8615745565b90506020020160208101906140ed9190614c6c565b6001600160a01b0316141561423d57600061410b60208a018a614c6c565b905060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630e81073c8361414c60c08e018e6157e3565b8781811061415c5761415c615745565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af11580156141b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141d49190615b83565b6001600160a01b038084166000908152609a602052604090205491925016801561423557614235818461420a60a08f018f6157e3565b8881811061421a5761421a615745565b905060200201602081019061422f9190614c6c565b85613bab565b5050506143ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4623ea13389898581811061427f5761427f615745565b90506020020160208101906142949190614c6c565b6142a160a08d018d6157e3565b868181106142b1576142b1615745565b90506020020160208101906142c69190614c6c565b6142d360c08e018e6157e3565b878181106142e3576142e3615745565b60405160e088901b6001600160e01b03191681526001600160a01b03968716600482015294861660248601529290941660448401526020909102013560648201526084019050600060405180830381600087803b15801561434357600080fd5b505af1158015614357573d6000803e3d6000fd5b505050506001600160a01b038216156143ca576143ca823361437c60a08c018c6157e3565b8581811061438c5761438c615745565b90506020020160208101906143a19190614c6c565b6143ae60c08d018d6157e3565b868181106143be576143be615745565b90506020020135613bab565b600101614001565b50505b6040518181527fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d9060200160405180910390a1505050505050565b6001600160a01b0383163b1561452a57604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e906144509086908690600401615e3e565b602060405180830381865afa15801561446d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144919190615e9b565b6001600160e01b031916146111085760405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a401610b03565b826001600160a01b031661453e838361470a565b6001600160a01b0316146111085760405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a401610b03565b6001600160a01b03831673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac014156146755760405162387b1360e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063387b13009061463e90889088908790600401615ce0565b600060405180830381600087803b15801561465857600080fd5b505af115801561466c573d6000803e3d6000fd5b50505050614703565b60405163c608c7f360e01b81526001600160a01b03858116600483015284811660248301526044820184905282811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063c608c7f390608401600060405180830381600087803b1580156146ef57600080fd5b505af11580156113c7573d6000803e3d6000fd5b5050505050565b60008060006147198585614726565b91509150610a0d81614796565b60008082516041141561475d5760208301516040840151606085015160001a61475187828585614951565b9450945050505061478f565b825160401415614787576020830151604084015161477c868383614a3e565b93509350505061478f565b506000905060025b9250929050565b60008160048111156147aa576147aa615ec5565b14156147b35750565b60018160048111156147c7576147c7615ec5565b14156148155760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b03565b600281600481111561482957614829615ec5565b14156148775760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b03565b600381600481111561488b5761488b615ec5565b14156148e45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b03565b60048160048111156148f8576148f8615ec5565b14156110535760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b03565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156149885750600090506003614a35565b8460ff16601b141580156149a057508460ff16601c14155b156149b15750600090506004614a35565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614a05573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614a2e57600060019250925050614a35565b9150600090505b94509492505050565b6000806001600160ff1b03831681614a5b60ff86901c601b615cb1565b9050614a6987828885614951565b935093505050935093915050565b60008083601f840112614a8957600080fd5b5081356001600160401b03811115614aa057600080fd5b6020830191508360208260051b850101111561478f57600080fd5b60008060208385031215614ace57600080fd5b82356001600160401b03811115614ae457600080fd5b614af085828601614a77565b90969095509350505050565b6001600160a01b038116811461105357600080fd5b8035614b1c81614afc565b919050565b600080600080600060a08688031215614b3957600080fd5b8535614b4481614afc565b94506020860135614b5481614afc565b93506040860135614b6481614afc565b94979396509394606081013594506080013592915050565b6020808252825182820181905260009190848201906040850190845b81811015614bb457835183529284019291840191600101614b98565b50909695505050505050565b600060608284031215614bd257600080fd5b50919050565b60008083601f840112614bea57600080fd5b5081356001600160401b03811115614c0157600080fd5b60208301915083602082850101111561478f57600080fd5b600080600060808486031215614c2e57600080fd5b614c388585614bc0565b925060608401356001600160401b03811115614c5357600080fd5b614c5f86828701614bd8565b9497909650939450505050565b600060208284031215614c7e57600080fd5b8135614c8981614afc565b9392505050565b600080600060608486031215614ca557600080fd5b8335614cb081614afc565b92506020840135614cc081614afc565b929592945050506040919091013590565b600060208284031215614ce357600080fd5b5035919050565b60008060008060408587031215614d0057600080fd5b84356001600160401b0380821115614d1757600080fd5b614d2388838901614a77565b90965094506020870135915080821115614d3c57600080fd5b50614d4987828801614a77565b95989497509550505050565b60008060008060008060008060c0898b031215614d7157600080fd5b8835614d7c81614afc565b97506020890135614d8c81614afc565b9650604089013595506060890135945060808901356001600160401b0380821115614db657600080fd5b614dc28c838d01614a77565b909650945060a08b0135915080821115614ddb57600080fd5b50614de88b828c01614a77565b999c989b5096995094979396929594505050565b6000806000806000806000806080898b031215614e1857600080fd5b88356001600160401b0380821115614e2f57600080fd5b614e3b8c838d01614a77565b909a50985060208b0135915080821115614e5457600080fd5b614e608c838d01614a77565b909850965060408b0135915080821115614e7957600080fd5b614e858c838d01614a77565b909650945060608b0135915080821115614ddb57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614ed657614ed6614e9e565b60405290565b604080519081016001600160401b0381118282101715614ed657614ed6614e9e565b60405160c081016001600160401b0381118282101715614ed657614ed6614e9e565b604051601f8201601f191681016001600160401b0381118282101715614f4857614f48614e9e565b604052919050565b63ffffffff8116811461105357600080fd5b8035614b1c81614f50565b60006001600160401b03821115614f8657614f86614e9e565b5060051b60200190565b600082601f830112614fa157600080fd5b81356020614fb6614fb183614f6d565b614f20565b82815260059290921b84018101918181019086841115614fd557600080fd5b8286015b84811015614ff9578035614fec81614afc565b8352918301918301614fd9565b509695505050505050565b600082601f83011261501557600080fd5b81356020615025614fb183614f6d565b82815260059290921b8401810191818101908684111561504457600080fd5b8286015b84811015614ff95780358352918301918301615048565b600060e0828403121561507157600080fd5b615079614eb4565b905061508482614b11565b815261509260208301614b11565b60208201526150a360408301614b11565b6040820152606082013560608201526150be60808301614f62565b608082015260a08201356001600160401b03808211156150dd57600080fd5b6150e985838601614f90565b60a084015260c084013591508082111561510257600080fd5b5061510f84828501615004565b60c08301525092915050565b60006020828403121561512d57600080fd5b81356001600160401b0381111561514357600080fd5b61514f8482850161505f565b949350505050565b60006020828403121561516957600080fd5b813560ff81168114614c8957600080fd5b60006040828403121561518c57600080fd5b615194614edc565b905081356151a181614afc565b815260208201356bffffffffffffffffffffffff811681146151c257600080fd5b602082015292915050565b600060208083850312156151e057600080fd5b82356001600160401b03808211156151f757600080fd5b818501915085601f83011261520b57600080fd5b8135615219614fb182614f6d565b81815260059190911b8301840190848101908883111561523857600080fd5b8585015b83811015615312578035858111156152545760008081fd5b860160e0818c03601f190181131561526c5760008081fd5b615274614efe565b89830135888111156152865760008081fd5b6152948e8c83870101614f90565b825250604080840135898111156152ab5760008081fd5b6152b98f8d83880101615004565b8c8401525060606152cb818601614b11565b82840152608091506152df8f83870161517a565b908301526152ef60c08501614f62565b908201526152fe838301614b11565b60a08201528552505091860191860161523c565b5098975050505050505050565b801515811461105357600080fd5b60008060008060006080868803121561534557600080fd5b85356001600160401b038082111561535c57600080fd5b9087019060e0828a03121561537057600080fd5b9095506020870135908082111561538657600080fd5b5061539388828901614a77565b9095509350506040860135915060608601356153ae8161531f565b809150509295509295909350565b600080604083850312156153cf57600080fd5b82356153da81614afc565b915060208301356153ea81614afc565b809150509250929050565b60006040828403121561540757600080fd5b61540f614edc565b905081356001600160401b038082111561542857600080fd5b818401915084601f83011261543c57600080fd5b813560208282111561545057615450614e9e565b615462601f8301601f19168201614f20565b9250818352868183860101111561547857600080fd5b8181850182850137600081838501015282855280860135818601525050505092915050565b600080600080600060a086880312156154b557600080fd5b85356154c081614afc565b945060208601356154d081614afc565b935060408601356001600160401b03808211156154ec57600080fd5b6154f889838a016153f5565b9450606088013591508082111561550e57600080fd5b5061551b888289016153f5565b95989497509295608001359392505050565b6000806040838503121561554057600080fd5b823561554b81614afc565b915060208301356001600160401b0381111561556657600080fd5b61557285828601614f90565b9150509250929050565b600081518084526020808501945080840160005b838110156155ac57815187529582019590820190600101615590565b509495945050505050565b602081526000614c89602083018461557c565b600080602083850312156155dd57600080fd5b82356001600160401b038111156155f357600080fd5b614af085828601614bd8565b6000806040838503121561561257600080fd5b823561561d81614afc565b946020939093013593505050565b6000806000806080858703121561564157600080fd5b843561564c81614afc565b935060208501359250604085013561566381614afc565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156155ac5781516001600160a01b031687529582019590820190600101615687565b6040815260006156bf6040830185615673565b8281036020840152611285818561557c565b6000806000606084860312156156e657600080fd5b83356156f181614afc565b925060208401356001600160401b0381111561570c57600080fd5b615718868287016153f5565b925050604084013590509250925092565b60006060828403121561573b57600080fd5b614c898383614bc0565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156157855761578561575b565b5060010190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60008235605e198336030181126157d957600080fd5b9190910192915050565b6000808335601e198436030181126157fa57600080fd5b8301803591506001600160401b0382111561581457600080fd5b6020019150600581901b360382131561478f57600080fd5b60608101823561583b81614afc565b6001600160a01b03908116835260208401359061585782614afc565b166020830152604083013561586b81614f50565b63ffffffff811660408401525092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156158bf57600080fd5b8151614c8981614afc565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60208082526037908201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60408201527f616e616765724f72456967656e506f644d616e61676572000000000000000000606082015260800190565b60006020828403121561598357600080fd5b8151614c898161531f565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000823560de198336030181126157d957600080fd5b6000602082840312156159fe57600080fd5b8135614c898161531f565b600060018060a01b03808351168452806020840151166020850152806040840151166040850152506060820151606084015263ffffffff608083015116608084015260a082015160e060a0850152615a6460e0850182615673565b905060c083015184820360c0860152611285828261557c565b602081526000614c896020830184615a09565b602081526000825160e06020840152615aad610100840182615673565b90506020840151601f19848303016040850152615aca828261557c565b915050604084015160018060a01b03808216606086015260608601519150808251166080860152506bffffffffffffffffffffffff60208201511660a0850152506080840151615b2260c085018263ffffffff169052565b5060a08401516001600160a01b03811660e0850152610a0d565b60008060408385031215615b4f57600080fd5b8251615b5a8161531f565b6020939093015192949293505050565b82815260406020820152600061514f6040830184615a09565b600060208284031215615b9557600080fd5b5051919050565b600082601f830112615bad57600080fd5b81516020615bbd614fb183614f6d565b82815260059290921b84018101918181019086841115615bdc57600080fd5b8286015b84811015614ff95780518352918301918301615be0565b60008060408385031215615c0a57600080fd5b82516001600160401b0380821115615c2157600080fd5b818501915085601f830112615c3557600080fd5b81516020615c45614fb183614f6d565b82815260059290921b84018101918181019089841115615c6457600080fd5b948201945b83861015615c8b578551615c7c81614afc565b82529482019490820190615c69565b91880151919650909350505080821115615ca457600080fd5b5061557285828601615b9c565b60008219821115615cc457615cc461575b565b500190565b600082821015615cdb57615cdb61575b565b500390565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d1657600080fd5b8135614c8981614f50565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135615d4c81614afc565b615d568183615d21565b50600181016020830135615d6981614afc565b615d738183615d21565b506040830135615d8281614f50565b815463ffffffff60a01b191660a09190911b63ffffffff60a01b161790555050565b6000615db0368361505f565b92915050565b6020808252606e90820152600080516020615edc83398151915260408201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360608201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260808201526d207468697320737472617465677960901b60a082015260c00190565b82815260006020604081840152835180604085015260005b81811015615e7257858101830151858201606001528201615e56565b81811115615e84576000606083870101525b50601f01601f191692909201606001949350505050565b600060208284031215615ead57600080fd5b81516001600160e01b031981168114614c8957600080fd5b634e487b7160e01b600052602160045260246000fdfe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a2646970667358221220c4f1d4de8cdcd5014909565a65d9a3617cb25b629b7151ad2aae3136b41215f064736f6c634300080c0033",
    "sourceMap": "1137:48580:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45814:472;;;;;;:::i;:::-;;:::i;:::-;;;1014:25:156;;;1002:2;987:18;45814:472:3;;;;;;;;1131:155:4;;1194:92;1131:155;;48784:630:3;;;;;;:::i;:::-;;:::i;13868:1412::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4821:756::-;;;;;;:::i;:::-;;:::i;:::-;;5826:138:27;;;;;;:::i;:::-;;:::i;22065:571:3:-;;;;;;:::i;:::-;;:::i;3832:392:27:-;;;;;;:::i;:::-;;:::i;23107:243:3:-;;;;;;:::i;:::-;;:::i;42879:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42980:26:3;42954:7;42980:26;;;:16;:26;;;;;:51;;;-1:-1:-1;;;42980:51:3;;;;;42879:159;46790:408;;;;;;:::i;:::-;;:::i;649:130:4:-;;699:80;649:130;;3318:614:3;;;;;;:::i;:::-;;:::i;21037:486::-;;;;;;:::i;:::-;;:::i;3336:46:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;17809:471:3;;;;;;:::i;:::-;;:::i;1676:49:4:-;;;;;;;;-1:-1:-1;;;;;9831:32:156;;;9813:51;;9801:2;9786:18;1676:49:4;9642:228:156;42642:147:3;;;;;;:::i;:::-;-1:-1:-1;;;;;42737:26:3;;;42711:7;42737:26;;;:16;:26;;;;;:45;;;;;42642:147;41696:123;;;;;;:::i;:::-;;:::i;:::-;;;10357:14:156;;10350:22;10332:41;;10320:2;10305:18;41696:123:3;10192:187:156;878:152:4;;939:91;878:152;;1884:49;;;;;1885:74:3;;1944:15;1885:74;;4299:136:27;;;:::i;46352:150:3:-;;;;;;:::i;:::-;;:::i;5606:149:27:-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;5418:87;5491:7;;5418:87;;18517:1978:3;;;;;;:::i;:::-;;:::i;42407:143::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42500:26:3;;;42474:7;42500:26;;;:16;:26;;;;;:43;;;42407:143;16722:353;;;;;;:::i;:::-;;:::i;3132:46:4:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3132:46:4;;;41926:148:3;;;;;;:::i;:::-;;:::i;2071:101:59:-;;;:::i;2585:71:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9692:1244:3;;;;;;:::i;:::-;;:::i;1825:37:27:-;;;;;-1:-1:-1;;;;;1825:37:27;;;1441:85:59;1513:6;;-1:-1:-1;;;;;1513:6:59;1441:85;;43128:368:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2027:104::-;;2088:42;2027:104;;6474:262;;;;;;:::i;:::-;;:::i;4877:62:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1784:33;;;;;4580:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3825:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4424:39;;;;;;5439:66;;;;;;:::i;:::-;;;;;;;;;;;;;;42177:140:3;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42284:26:3;;;;;:16;:26;;;;;42277:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42277:33:3;;;;;;;;;;42177:140;;;;;24964:13:156;;-1:-1:-1;;;;;24960:22:156;;;24942:41;;25043:4;25031:17;;;25025:24;25021:33;;;24999:20;;;24992:63;25103:17;;;25097:24;25123:10;25093:41;25071:20;;;25064:71;24892:2;24877:18;42177:140:3;24692:449:156;47628:560:3;;;;;;:::i;:::-;;:::i;2024:60:4:-;;2078:6;2024:60;;43721:1765:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11261:2250::-;;;;;;:::i;:::-;;:::i;7739:352::-;;;;;;:::i;:::-;;:::i;5989:265::-;;;;;;:::i;:::-;;:::i;2321:198:59:-;;;;;;:::i;:::-;;:::i;41357:227:3:-;;;:::i;4911:437:27:-;;;;;;:::i;:::-;;:::i;45814:472:3:-;45941:24;;45896:7;;;45975:273;45995:21;;;45975:273;;;46037:27;46067:29;:44;46097:10;;46108:1;46097:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;46067:44:3;-1:-1:-1;;;;;46067:44:3;;;;;;;;;;;;;46037:74;;46151:15;46129:19;:37;46125:113;;;46204:19;46186:37;;46125:113;-1:-1:-1;46018:3:3;;;:::i;:::-;;;45975:273;;;-1:-1:-1;46264:15:3;45814:472;-1:-1:-1;;;45814:472:3:o;48784:630::-;49107:101;;;1194:92:4;49107:101:3;;;;28179:25:156;;;;-1:-1:-1;;;;;28278:15:156;;;28258:18;;;28251:43;28330:15;;;28310:18;;;28303:43;28382:15;;28362:18;;;28355:43;28414:19;;;28407:35;;;28458:19;;;;28451:35;;;49107:101:3;;;;;;;;;;28151:19:156;;;;49107:101:3;;;49084:134;;;;;-1:-1:-1;;;49333:17:3;:15;:17::i;:::-;49304:67;;-1:-1:-1;;;49304:67:3;;;28755:27:156;28798:11;;;28791:27;;;;28834:12;;;28827:28;;;28871:12;;49304:67:3;;;;;;-1:-1:-1;;49304:67:3;;;;;;49294:78;;49304:67;49294:78;;;;;48784:630;-1:-1:-1;;;;;;;;48784:630:3:o;13868:1412::-;5724:7:27;;14033:16:3;;1520:1;;5695:10:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;;;;;;:::i;:::-;;;;;;;;;14061:32:3::1;14110:22:::0;-1:-1:-1;;;;;14096:44:3;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;14096:44:3::1;-1:-1:-1::0;14181:10:3::1;14150:16;14169:23:::0;;;:11:::1;:23;::::0;;;;;14061:79;;-1:-1:-1;;;;;;14169:23:3;;::::1;::::0;14203:1039:::1;14223:33:::0;;::::1;14203:1039;;;14332:22;;14355:1;14332:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:39;;14285:22;;14308:1;14285:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;:43;;:86;14277:155;;;::::0;-1:-1:-1;;;14277:155:3;;30912:2:156;14277:155:3::1;::::0;::::1;30894:21:156::0;30951:2;30931:18;;;30924:30;30990:34;30970:18;;;30963:62;31061:26;31041:18;;;31034:54;31105:19;;14277:155:3::1;30710:420:156::0;14277:155:3::1;14502:1;14454:22:::0;;14477:1;14454:25;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;14454:50:3::1;;;14446:135;;;::::0;-1:-1:-1;;;14446:135:3;;31337:2:156;14446:135:3::1;::::0;::::1;31319:21:156::0;31376:2;31356:18;;;31349:30;31415:34;31395:18;;;31388:62;31486:34;31466:18;;;31459:62;-1:-1:-1;;;31537:19:156;;;31530:39;31586:19;;14446:135:3::1;31135:476:156::0;14446:135:3::1;14922:309;14980:10;15018:8;15056:22;;15079:1;15056:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;15122:22;;15145:1;15122:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;14922:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15184:22:3;;-1:-1:-1;15184:22:3;;-1:-1:-1;15207:1:3;;-1:-1:-1;15184:25:3;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;14922:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;14922:31:3::1;::::0;-1:-1:-1;;;14922:309:3:i:1;:::-;14901:15;14917:1;14901:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:330;14258:3;::::1;::::0;::::1;:::i;:::-;;;;14203:1039;;;-1:-1:-1::0;15258:15:3;;13868:1412;-1:-1:-1;;;;;13868:1412:3:o;4821:756::-;5010:10;5050:1;4993:28;;;:16;:28;;;;;:45;-1:-1:-1;;;;;4993:45:3;:59;4972:175;;;;-1:-1:-1;;;4972:175:3;;31818:2:156;4972:175:3;;;31800:21:156;31857:2;31837:18;;;31830:30;31896:34;31876:18;;;31869:62;31967:34;31947:18;;;31940:62;-1:-1:-1;;;32018:19:156;;;32011:36;32064:19;;4972:175:3;31616:473:156;4972:175:3;5157:59;5177:10;5189:26;5157:19;:59::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;5338:70:3;5348:10;;5372:23;5405:1;5338:9;:70::i;:::-;5465:10;-1:-1:-1;;;;;5446:58:3;;5477:26;5446:58;;;;;;:::i;:::-;;;;;;;;5546:10;-1:-1:-1;;;;;5519:51:3;;5558:11;;5519:51;;;;;;;:::i;:::-;;;;;;;;4962:615;4821:756;;;:::o;5826:138:27:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;22065:571:3:-;2353:10;-1:-1:-1;;;;;2375:15:3;2353:38;;;:80;;-1:-1:-1;2395:10:3;-1:-1:-1;;;;;2417:15:3;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:3;;;;;;;:::i;:::-;22293:19:::1;22305:6;22293:11;:19::i;:::-;22289:341;;;-1:-1:-1::0;;;;;22347:19:3;;::::1;22328:16;22347:19:::0;;;:11:::1;:19;::::0;;;;;::::1;22444:175;22347:19:::0;22359:6;22564:8;22598:6;22444:23:::1;:175::i;:::-;22314:316;22289:341;22065:571:::0;;;:::o;3832:392:27:-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;9813:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;9786:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:27;;35130:2:156;4025:107:27::1;::::0;::::1;35112:21:156::0;35169:2;35149:18;;;35142:30;35208:34;35188:18;;;35181:62;35279:26;35259:18;;;35252:54;35323:19;;4025:107:27::1;34928:420:156::0;4025:107:27::1;4142:7;:25:::0;;;4182:35:::1;::::0;1014:25:156;;;4189:10:27::1;::::0;4182:35:::1;::::0;1002:2:156;987:18;4182:35:27::1;;;;;;;;3832:392:::0;:::o;23107:243:3:-;1334:13:59;:11;:13::i;:::-;23275:68:3::1;23309:10;;23321:21;;23275:33;:68::i;46790:408::-:0;-1:-1:-1;;;;;47037:19:3;;46945:7;47037:19;;;:11;:19;;;;;;47110:81;47049:6;47037:19;47174:8;47184:6;47110:35;:81::i;:::-;47103:88;46790:408;-1:-1:-1;;;;;46790:408:3:o;3318:614::-;3111:19:60;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:60;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:60;1476:19:62;:23;;;3219:66:60;;-1:-1:-1;3268:12:60;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:60;;35555:2:156;3157:201:60;;;35537:21:156;35594:2;35574:18;;;35567:30;35633:34;35613:18;;;35606:62;-1:-1:-1;;;35684:18:156;;;35677:44;35738:19;;3157:201:60;35353:410:156;3157:201:60;3368:12;:16;;-1:-1:-1;;3368:16:60;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:60;;;;;3394:65;3619:55:3::1;3637:15;3654:19;3619:17;:55::i;:::-;3704:27;:25;:27::i;:::-;3684:17;:47:::0;3741:32:::1;3760:12:::0;3741:18:::1;:32::i;:::-;3783:62;3819:25;3783:35;:62::i;:::-;3855:70;3889:11;;3902:22;;3855:33;:70::i;:::-;3483:14:60::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:60;;;3553:14;;-1:-1:-1;35920:36:156;;3553:14:60;;35908:2:156;35893:18;3553:14:60;;;;;;;3479:99;3101:483;3318:614:3;;;;;;;;:::o;21037:486::-;2353:10;-1:-1:-1;;;;;2375:15:3;2353:38;;;:80;;-1:-1:-1;2395:10:3;-1:-1:-1;;;;;2417:15:3;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:3;;;;;;;:::i;:::-;21265:19:::1;21277:6;21265:11;:19::i;:::-;21261:256;;;-1:-1:-1::0;;;;;21319:19:3;;::::1;21300:16;21319:19:::0;;;:11:::1;:19;::::0;;;;;::::1;21409:97;21319:19:::0;21331:6;21480:8;21498:6;21409:23:::1;:97::i;17809:471::-:0;5724:7:27;;1664:1:3;;5695:10:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;;;;;;:::i;:::-;1815:1:61::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:61;;36169:2:156;2561:63:61::1;::::0;::::1;36151:21:156::0;36208:2;36188:18;;;36181:30;36247:33;36227:18;;;36220:61;36298:18;;2561:63:61::1;35967:355:156::0;2561:63:61::1;1815:1;2699:7;:18:::0;18106:9:3::2;18101:173;18121:22:::0;;::::2;18101:173;;;18164:99;18190:11;;18202:1;18190:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18206:6;;18213:1;18206:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18217:22;;18240:1;18217:25;;;;;;;:::i;:::-;;;;;;;18244:15;;18260:1;18244:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18164:25;:99::i;:::-;18145:3;::::0;::::2;:::i;:::-;;;18101:173;;;-1:-1:-1::0;;1772:1:61::1;2872:7;:22:::0;-1:-1:-1;;;;;;;;17809:471:3:o;41696:123::-;-1:-1:-1;;;;;41778:19:3;;;41754:4;41778:19;;;:11;:19;;;;;;;:33;;;41696:123::o;4299:136:27:-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;9813:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;9786:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:27::1;:27:::0;;;4391:37:::1;::::0;1014:25:156;;;4398:10:27::1;::::0;4391:37:::1;::::0;1002:2:156;987:18;4391:37:27::1;;;;;;;4299:136::o:0;46352:150:3:-;46436:7;46483:10;46472:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;46462:33;;;;;;46455:40;;46352:150;;;:::o;18517:1978::-;18656:9;18652:1828;18675:20;:27;18671:1;:31;18652:1828;;;18719:77;18799:20;18820:1;18799:23;;;;;;;;:::i;:::-;;;;;;;18719:103;;18895:14;18911:25;18940:15;-1:-1:-1;;;;;18940:39:3;;18980:19;18940:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18894:106;;;;19080:9;19076:1335;;;19126:26;;;;;-1:-1:-1;;;;;19255:35:3;;19109:14;19255:35;;;:27;:35;;;;;;;19126:26;;19255:35;;;19308:37;19255:35;19308:37;:::i;:::-;;;;;;19364:36;19403:448;;;;;;;;19444:6;-1:-1:-1;;;;;19403:448:3;;;;;19485:19;:36;;;-1:-1:-1;;;;;19403:448:3;;;;;19555:19;:38;;;:49;;;-1:-1:-1;;;;;19403:448:3;;;;;19633:5;19403:448;;;;19672:19;:40;;;19403:448;;;;;;19746:19;:30;;;19403:448;;;;19806:19;:26;;;19403:448;;;19364:487;;19912:15;19930:43;19954:18;19930:23;:43::i;:::-;20104:27;;;;:18;:27;;;;;;19912:61;;-1:-1:-1;20104:27:3;;20103:28;20095:110;;;;-1:-1:-1;;;20095:110:3;;40274:2:156;20095:110:3;;;40256:21:156;40313:2;40293:18;;;40286:30;40352:34;40332:18;;;40325:62;40423:34;40403:18;;;40396:62;-1:-1:-1;;;40474:19:156;;;40467:36;40520:19;;20095:110:3;40072:473:156;20095:110:3;20223:27;;;;:18;:27;;;;;;;:34;;-1:-1:-1;;20223:34:3;20253:4;20223:34;;;20281:45;;;;;20242:7;;20307:18;;20281:45;:::i;:::-;;;;;;;;20350:46;;;41067:25:156;;;41123:2;41108:18;;41101:34;;;20350:46:3;;41040:18:156;20350:46:3;;;;;;;19091:1320;;;;19076:1335;20452:3;;;;;18705:1775;;;18652:1828;;;;18517:1978;:::o;16722:353::-;5724:7:27;;1664:1:3;;5695:10:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;;;;;;:::i;:::-;1815:1:61::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:61;;36169:2:156;2561:63:61::1;::::0;::::1;36151:21:156::0;36208:2;36188:18;;;36181:30;36247:33;36227:18;;;36220:61;36298:18;;2561:63:61::1;35967:355:156::0;2561:63:61::1;1815:1;2699:7;:18:::0;16984:84:3::2;17010:10:::0;17022:6;;17030:20;17052:15;16984:25:::2;:84::i;:::-;-1:-1:-1::0;;1772:1:61::1;2872:7;:22:::0;-1:-1:-1;;;;16722:353:3:o;41926:148::-;-1:-1:-1;;;;;42009:26:3;;;41985:4;42009:26;;;:16;:26;;;;;:43;;:57;;;41926:148::o;2071:101:59:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;9692:1244:3:-;10046:15;10011:24;:31;;;:50;;9990:162;;;;-1:-1:-1;;;9990:162:3;;41348:2:156;9990:162:3;;;41330:21:156;41387:2;41367:18;;;41360:30;41426:34;41406:18;;;41399:62;41497:34;41477:18;;;41470:62;-1:-1:-1;;;41548:19:156;;;41541:32;41590:19;;9990:162:3;41146:469:156;9990:162:3;10233:26;10262:11;:19;10274:6;-1:-1:-1;;;;;10262:19:3;-1:-1:-1;;;;;10262:19:3;;;;;;;;;;;;;10233:48;;10291:24;10318:164;10367:6;10387:18;10419:8;10441:24;:31;;;10318:35;:164::i;:::-;-1:-1:-1;;;;;10516:19:3;;;;;;:11;:19;;;;;10559:1;10538:22;;10516:44;;10706:34;;10291:191;;-1:-1:-1;10635:106:3;;10528:6;;10291:191;;10635:44;:106::i;:::-;10860:69;10870:6;10878:8;10888:26;10916:12;10860:9;:69::i;:::-;9942:994;;9692:1244;;;;;:::o;43128:368::-;43247:16;43275:23;43315:10;:17;-1:-1:-1;;;;;43301:32:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43301:32:3;;43275:58;;43348:9;43343:124;43367:10;:17;43363:1;:21;43343:124;;;-1:-1:-1;;;;;43417:24:3;;;;;;:14;:24;;;;;43442:13;;43417:24;;;43442:10;;43453:1;;43442:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;43417:39:3;-1:-1:-1;;;;;43417:39:3;;;;;;;;;;;;;43405:6;43412:1;43405:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;43386:3;;;:::i;:::-;;;43343:124;;6474:262;6565:22;6576:10;6565;:22::i;:::-;6557:106;;;;-1:-1:-1;;;6557:106:3;;41822:2:156;6557:106:3;;;41804:21:156;41861:2;41841:18;;;41834:30;41900:34;41880:18;;;41873:62;41971:34;41951:18;;;41944:62;-1:-1:-1;;;42022:19:156;;;42015:38;42070:19;;6557:106:3;41620:475:156;6557:106:3;6705:10;-1:-1:-1;;;;;6678:51:3;;6717:11;;6678:51;;;;;;;:::i;:::-;;;;;;;;6474:262;;:::o;47628:560::-;47910:78;;;939:91:4;47910:78:3;;;;42359:25:156;;;;-1:-1:-1;;;;;42458:15:156;;;42438:18;;;42431:43;42510:15;;42490:18;;;42483:43;42542:18;;;42535:34;;;42585:19;;;;42578:35;;;47910:78:3;;;;;;;;;;42331:19:156;;;;47910:78:3;;;47887:111;;;;;-1:-1:-1;;;48111:17:3;:15;:17::i;:::-;48082:65;;-1:-1:-1;;;48082:65:3;;;28755:27:156;28798:11;;;28791:27;;;;28834:12;;;28827:28;;;28871:12;;48082:65:3;;;;;;-1:-1:-1;;48082:65:3;;;;;;48072:76;;48082:65;48072:76;;;;;47628:560;-1:-1:-1;;;;;;;47628:560:3:o;43721:1765::-;43922:38;;-1:-1:-1;;;43922:38:3;;-1:-1:-1;;;;;9831:32:156;;;43922:38:3;;;9813:51:156;43788:18:3;;;;-1:-1:-1;;43922:15:3;:30;;;;;;9786:18:156;;43922:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44068:35;;-1:-1:-1;;;44068:35:3;;-1:-1:-1;;;;;9831:32:156;;;44068:35:3;;;9813:51:156;43903:57:3;;-1:-1:-1;;;;;44068:15:3;:27;;;;;;9786:18:156;;44068:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44068:35:3;;;;;;;;;;;;:::i;:::-;43970:133;;;;44216:1;44203:9;:14;44199:98;;44241:21;;44264;;-1:-1:-1;43721:1765:3;-1:-1:-1;;;43721:1765:3:o;44199:98::-;44307:29;44346:23;44384:21;:28;44416:1;44384:33;44380:1062;;;44519:18;;;44535:1;44519:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44560:16:3;;;44574:1;44560:16;;;;;;;;;44506:31;;-1:-1:-1;44574:1:3;-1:-1:-1;44560:16:3;;;;;;;;;;;-1:-1:-1;44560:16:3;44551:25;;2088:42;44590:10;44601:1;44590:13;;;;;;;;:::i;:::-;;;;;;:38;-1:-1:-1;;;;;44590:38:3;;;-1:-1:-1;;;;;44590:38:3;;;;;44662:9;44642:6;44649:1;44642:9;;;;;;;;:::i;:::-;;;;;;:30;;;;;44380:1062;;;44820:28;;:32;;44851:1;44820:32;:::i;:::-;-1:-1:-1;;;;;44804:49:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44804:49:3;;44791:62;;44890:10;:17;-1:-1:-1;;;;;44876:32:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44876:32:3;;44867:41;;45011:9;45006:219;45030:21;:28;45026:1;:32;45006:219;;;45096:21;45118:1;45096:24;;;;;;;;:::i;:::-;;;;;;;45080:10;45091:1;45080:13;;;;;;;;:::i;:::-;;;;;;:40;-1:-1:-1;;;;;45080:40:3;;;-1:-1:-1;;;;;45080:40:3;;;;;45150:21;45172:1;45150:24;;;;;;;;:::i;:::-;;;;;;;45138:6;45145:1;45138:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;45205:3;;45006:219;;;;2088:42;45309:10;45340:1;45320:10;:17;:21;;;;:::i;:::-;45309:33;;;;;;;;:::i;:::-;;;;;;:58;-1:-1:-1;;;;;45309:58:3;;;-1:-1:-1;;;;;45309:58:3;;;;;45421:9;45381:6;45408:1;45388:10;:17;:21;;;;:::i;:::-;45381:29;;;;;;;;:::i;:::-;;;;;;:50;;;;;44380:1062;45460:10;;45472:6;;-1:-1:-1;43721:1765:3;-1:-1:-1;;;;;43721:1765:3:o;11261:2250::-;5724:7:27;;11364:32:3;;1520:1;;5695:10:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;;;;;;:::i;:::-;11416:19:3::1;11428:6;11416:11;:19::i;:::-;11408:100;;;::::0;-1:-1:-1;;;11408:100:3;;45195:2:156;11408:100:3::1;::::0;::::1;45177:21:156::0;45234:2;45214:18;;;45207:30;;;45273:34;45253:18;;;45246:62;45344:34;45324:18;;;45317:62;-1:-1:-1;;;45395:19:156;;;45388:35;45440:19;;11408:100:3::1;44993:472:156::0;11408:100:3::1;11527:18;11538:6;11527:10;:18::i;:::-;11526:19;11518:93;;;::::0;-1:-1:-1;;;11518:93:3;;45672:2:156;11518:93:3::1;::::0;::::1;45654:21:156::0;45711:2;45691:18;;;45684:30;45750:34;45730:18;;;45723:62;45821:31;45801:18;;;45794:59;45870:19;;11518:93:3::1;45470:425:156::0;11518:93:3::1;-1:-1:-1::0;;;;;11629:20:3;::::1;11621:93;;;::::0;-1:-1:-1;;;11621:93:3;;46102:2:156;11621:93:3::1;::::0;::::1;46084:21:156::0;46141:2;46121:18;;;46114:30;46180:34;46160:18;;;46153:62;46251:30;46231:18;;;46224:58;46299:19;;11621:93:3::1;45900:424:156::0;11621:93:3::1;-1:-1:-1::0;;;;;11743:19:3;;::::1;11724:16;11743:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;11793:10:::1;:20;::::0;:62:::1;;-1:-1:-1::0;11833:10:3::1;-1:-1:-1::0;;;;;11833:22:3;::::1;;11793:62;:141;;;-1:-1:-1::0;;;;;;11889:26:3;;::::1;;::::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;11875:10;:59;11793:141;11772:249;;;::::0;-1:-1:-1;;;11772:249:3;;46531:2:156;11772:249:3::1;::::0;::::1;46513:21:156::0;46570:2;46550:18;;;46543:30;46609:34;46589:18;;;46582:62;46680:31;46660:18;;;46653:59;46729:19;;11772:249:3::1;46329:425:156::0;11772:249:3::1;12199:29;12230:23:::0;12257:28:::1;12278:6;12257:20;:28::i;:::-;12198:87:::0;;-1:-1:-1;12198:87:3;-1:-1:-1;12383:10:3::1;-1:-1:-1::0;;;;;12383:20:3;::::1;;12379:96;;12455:8;-1:-1:-1::0;;;;;12424:40:3::1;12447:6;-1:-1:-1::0;;;;;12424:40:3::1;;;;;;;;;;;12379:96;12549:8;-1:-1:-1::0;;;;;12523:35:3::1;12541:6;-1:-1:-1::0;;;;;12523:35:3::1;;;;;;;;;;;-1:-1:-1::0;;;;;12568:19:3;::::1;12598:1;12568:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;12568:32:3::1;::::0;;12704:17;;12700:772:::1;;12760:16;::::0;;12774:1:::1;12760:16:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;12700:772:3::1;;;12839:10;:17;-1:-1:-1::0;;;;;12825:32:3::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12825:32:3::1;;12807:50;;12876:9;12871:591;12895:10;:17;12891:1;:21;12871:591;;;12973:18;::::0;;12989:1:::1;12973:18:::0;;;;;::::1;::::0;;;12937:33:::1;::::0;12973:18:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;13040:16:3::1;::::0;;13054:1:::1;13040:16:::0;;;;;::::1;::::0;;;12937:54;;-1:-1:-1;13009:28:3::1;::::0;13040:16;-1:-1:-1;13040:16:3::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;13040:16:3::1;13009:47;;13094:10;13105:1;13094:13;;;;;;;;:::i;:::-;;;;;;;13074:14;13089:1;13074:17;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;13074:33:3::1;;;-1:-1:-1::0;;;;;13074:33:3::1;;;::::0;::::1;13142:6;13149:1;13142:9;;;;;;;;:::i;:::-;;;;;;;13125:11;13137:1;13125:14;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;13191:256;13253:6;13291:8;13333:6;13373:14;13417:11;13191:31;:256::i;:::-;13170:15;13186:1;13170:18;;;;;;;;:::i;:::-;;;;;;:277;;;::::0;::::1;12919:543;;12914:3;;;;;:::i;:::-;;;;12871:591;;;;12700:772;13482:22;;;11261:2250:::0;;;;:::o;7739:352::-;8011:73;8021:10;8033:8;8043:26;8071:12;8011:9;:73::i;5989:265::-;6092:22;6103:10;6092;:22::i;:::-;6084:102;;;;-1:-1:-1;;;6084:102:3;;46961:2:156;6084:102:3;;;46943:21:156;47000:2;46980:18;;;46973:30;47039:34;47019:18;;;47012:62;47110:34;47090:18;;;47083:62;-1:-1:-1;;;47161:19:156;;;47154:34;47205:19;;6084:102:3;46759:471:156;6084:102:3;6196:51;6216:10;6228:18;6196:19;:51::i;2321:198:59:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:59;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:59;;47437:2:156;2401:73:59::1;::::0;::::1;47419:21:156::0;47476:2;47456:18;;;47449:30;47515:34;47495:18;;;47488:62;-1:-1:-1;;;47566:18:156;;;47559:36;47612:19;;2401:73:59::1;47235:402:156::0;2401:73:59::1;2484:28;2503:8;2484:18;:28::i;41357:227:3:-:0;41405:7;41445:17;41428:13;:34;41424:154;;;-1:-1:-1;41485:17:3;;;41357:227::o;41424:154::-;41540:27;:25;:27::i;:::-;41533:34;;41357:227;:::o;4911:437:27:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:27;;47844:2:156;5104:150:27::1;::::0;::::1;47826:21:156::0;47883:2;47863:18;;;47856:30;47922:34;47902:18;;;47895:62;47993:26;47973:18;;;47966:54;48037:19;;5104:150:27::1;47642:420:156::0;5104:150:27::1;5264:7;:25:::0;;;5304:37:::1;::::0;1014:25:156;;;5313:10:27::1;::::0;5304:37:::1;::::0;1002:2:156;987:18;5304:37:27::1;868:177:156::0;35063:2938:3;35280:7;-1:-1:-1;;;;;35307:20:3;;35299:113;;;;-1:-1:-1;;;35299:113:3;;48269:2:156;35299:113:3;;;48251:21:156;48308:2;48288:18;;;48281:30;48347:34;48327:18;;;48320:62;48418:34;48398:18;;;48391:62;-1:-1:-1;;;48469:19:156;;;48462:47;48526:19;;35299:113:3;48067:484:156;35299:113:3;35430:17;;35422:112;;;;-1:-1:-1;;;35422:112:3;;48758:2:156;35422:112:3;;;48740:21:156;48797:2;48777:18;;;48770:30;48836:34;48816:18;;;48809:62;48907:34;48887:18;;;48880:62;-1:-1:-1;;;48958:19:156;;;48951:44;49012:19;;35422:112:3;48556:481:156;35422:112:3;35692:9;35687:1588;35711:10;:17;35707:1;:21;35687:1588;;;-1:-1:-1;;;;;35795:22:3;;;35791:264;;35837:203;35893:8;35931:6;35969:10;35980:1;35969:13;;;;;;;;:::i;:::-;;;;;;;36012:6;36019:1;36012:9;;;;;;;;:::i;:::-;;;;;;;35837:23;:203::i;:::-;2088:42;-1:-1:-1;;;;;36146:39:3;:10;36157:1;36146:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;36146:39:3;;36142:1091;;;36654:15;-1:-1:-1;;;;;36654:28:3;;36683:6;36691;36698:1;36691:9;;;;;;;;:::i;:::-;;;;;;;36654:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;49234:32:156;;;;49216:51;;49298:2;49283:18;;49276:34;49204:2;49189:18;;49042:274;36654:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36142:1091;;;36779:10;-1:-1:-1;;;;;36769:20:3;:6;-1:-1:-1;;;;;36769:20:3;;:84;;;;36794:15;-1:-1:-1;;;;;36794:44:3;;36839:10;36850:1;36839:13;;;;;;;;:::i;:::-;;;;;;;36794:59;;;;;;;;;;;;;;-1:-1:-1;;;;;9831:32:156;;;;9813:51;;9801:2;9786:18;;9642:228;36794:59:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36793:60;36769:84;36740:287;;;;-1:-1:-1;;;36740:287:3;;49523:2:156;36740:287:3;;;49505:21:156;49562:3;49542:18;;;49535:31;;;49602:34;49582:18;;;49575:62;49673:34;49653:18;;;49646:62;49745:34;49724:19;;;49717:63;49817:34;49796:19;;;49789:63;-1:-1:-1;;;49868:19:156;;;49861:35;49913:19;;36740:287:3;49321:617:156;36740:287:3;37156:15;-1:-1:-1;;;;;37156:28:3;;37185:6;37193:10;37204:1;37193:13;;;;;;;;:::i;:::-;;;;;;;37208:6;37215:1;37208:9;;;;;;;;:::i;:::-;;;;;;;37156:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36142:1091;37259:3;;35687:1588;;;-1:-1:-1;;;;;;37362:35:3;;37346:13;37362:35;;;:27;:35;;;;;;;;;;;37407:37;37362:35;37407:37;:::i;:::-;;;;;;37455:28;37486:257;;;;;;;;37519:6;-1:-1:-1;;;;;37486:257:3;;;;;37552:8;-1:-1:-1;;;;;37486:257:3;;;;;37586:10;-1:-1:-1;;;;;37486:257:3;;;;;37617:5;37486:257;;;;37655:12;37486:257;;;;;;37694:10;37486:257;;;;37726:6;37486:257;;;37455:288;;37754:22;37779:35;37803:10;37779:23;:35::i;:::-;37862:34;;;;:18;:34;;;;;;;:41;;-1:-1:-1;;37862:41:3;37899:4;37862:41;;;37919:44;37754:60;;-1:-1:-1;37919:44:3;;;;37754:60;;37952:10;;37919:44;:::i;:::-;;;;;;;;37980:14;35063:2938;-1:-1:-1;;;;;;;;35063:2938:3:o;23943:907::-;24122:1;24075:35;;;;:18;:35;:::i;:::-;-1:-1:-1;;;;;24075:49:3;;;24054:180;;;;-1:-1:-1;;;24054:180:3;;50543:2:156;24054:180:3;;;50525:21:156;50582:2;50562:18;;;50555:30;50621:34;50601:18;;;50594:62;50692:34;50672:18;;;50665:62;-1:-1:-1;;;50743:19:156;;;50736:51;50804:19;;24054:180:3;50341:488:156;24054:180:3;1944:15;24265:43;;;;;;;;:::i;:::-;:79;;;;24244:234;;;;-1:-1:-1;;;24244:234:3;;51286:2:156;24244:234:3;;;51268:21:156;51325:3;51305:18;;;51298:31;51365:34;51345:18;;;51338:62;51436:34;51416:18;;;51409:62;51508:34;51487:19;;;51480:63;-1:-1:-1;;;51559:19:156;;;51552:43;51612:19;;24244:234:3;51084:553:156;24244:234:3;-1:-1:-1;;;;;24556:26:3;;;;;;:16;:26;;;;;;;:51;;;-1:-1:-1;;;24556:51:3;;;;;24509:43;;;;;;;;;:::i;:::-;:98;;;;24488:228;;;;-1:-1:-1;;;24488:228:3;;51844:2:156;24488:228:3;;;51826:21:156;51883:2;51863:18;;;51856:30;51922:34;51902:18;;;51895:62;51993:34;51973:18;;;51966:62;-1:-1:-1;;;52044:19:156;;;52037:50;52104:19;;24488:228:3;51642:487:156;24488:228:3;-1:-1:-1;;;;;24726:26:3;;;;;;:16;:26;;;;;24755:18;;24726:47;24755:18;24726:26;:47;:::i;:::-;-1:-1:-1;;24788:55:3;;24812:10;;24788:55;;;;24824:18;;24788:55;:::i;25680:2921::-;5724:7:27;;1383:1:3;;5695::27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;;;;;;:::i;:::-;25917:19:3::1;25929:6;25917:11;:19::i;:::-;25916:20;25908:98;;;::::0;-1:-1:-1;;;25908:98:3;;53299:2:156;25908:98:3::1;::::0;::::1;53281:21:156::0;53338:2;53318:18;;;53311:30;53377:34;53357:18;;;53350:62;53448:34;53428:18;;;53421:62;-1:-1:-1;;;53499:19:156;;;53492:32;53541:19;;25908:98:3::1;53097:469:156::0;25908:98:3::1;26024:20;26035:8;26024:10;:20::i;:::-;26016:102;;;::::0;-1:-1:-1;;;26016:102:3;;53773:2:156;26016:102:3::1;::::0;::::1;53755:21:156::0;53812:2;53792:18;;;53785:30;53851:34;53831:18;;;53824:62;53922:34;53902:18;;;53895:62;-1:-1:-1;;;53973:19:156;;;53966:36;54019:19;;26016:102:3::1;53571:473:156::0;26016:102:3::1;-1:-1:-1::0;;;;;26284:26:3;;::::1;26254:27;26284:26:::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;26746:33:::0;;;::::1;::::0;:70:::1;;-1:-1:-1::0;26783:10:3::1;-1:-1:-1::0;;;;;26783:33:3;::::1;;;26746:70;:96;;;;-1:-1:-1::0;26820:10:3::1;-1:-1:-1::0;;;;;26820:22:3;::::1;;;26746:96;26742:1267;;;26962:15;26925:26;:33;;;:52;;26900:166;;;::::0;-1:-1:-1;;;26900:166:3;;54251:2:156;26900:166:3::1;::::0;::::1;54233:21:156::0;54290:2;54270:18;;;54263:30;54329:34;54309:18;;;54302:62;54400:25;54380:18;;;54373:53;54443:19;;26900:166:3::1;54049:419:156::0;26900:166:3::1;-1:-1:-1::0;;;;;27198:50:3;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;;;::::1;;27197:65;27172:179;;;::::0;-1:-1:-1;;;27172:179:3;;54675:2:156;27172:179:3::1;::::0;::::1;54657:21:156::0;54714:2;54694:18;;;54687:30;54753:34;54733:18;;;54726:62;54824:25;54804:18;;;54797:53;54867:19;;27172:179:3::1;54473:419:156::0;27172:179:3::1;-1:-1:-1::0;;;;;27365:50:3;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;:71;;-1:-1:-1;;27365:71:3::1;27432:4;27365:71;::::0;;27693:33;::::1;::::0;27521:219:::1;::::0;27576:6;;27600:8;;27395:19;;27416:12;;27521:37:::1;:219::i;:::-;27492:248;;27813:185;27875:19;27912:18;27948:26;:36;;;27813:44;:185::i;:::-;26844:1165;26742:1267;-1:-1:-1::0;;;;;28112:19:3;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;28112:30:3::1;::::0;;::::1;::::0;;::::1;::::0;;28157:33;::::1;::::0;28112:19;28157:33:::1;28202:29;28233:23:::0;28272:28:::1;28293:6;28272:20;:28::i;:::-;28201:99;;;;28316:9;28311:284;28335:10;:17;28331:1;:21;28311:284;;;28369:183;28421:8;28455:6;28489:10;28500:1;28489:13;;;;;;;;:::i;:::-;;;;;;;28528:6;28535:1;28528:9;;;;;;;;:::i;:::-;;;;;;;28369:23;:183::i;:::-;28579:3;;28311:284;;6024:360:27::0;-1:-1:-1;;;;;6127:40:27;;6106:160;;;;-1:-1:-1;;;6106:160:27;;55099:2:156;6106:160:27;;;55081:21:156;55138:2;55118:18;;;55111:30;55177:34;55157:18;;;55150:62;55248:34;55228:18;;;55221:62;-1:-1:-1;;;55299:19:156;;;55292:40;55349:19;;6106:160:27;54897:477:156;6106:160:27;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:27;;;55639:34:156;;55709:15;;;55704:2;55689:18;;55682:43;6281:52:27;;55574:18:156;6281:52:27;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:27;-1:-1:-1;;;;;6343:34:27;;;;;;;;;;6024:360::o;34287:308:3:-;-1:-1:-1;;;;;34470:24:3;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34508:6;;34470:24;:44;;34508:6;;34470:44;:::i;:::-;;;;;;;;34553:8;-1:-1:-1;;;;;34529:59:3;;34563:6;34571:8;34581:6;34529:59;;;;;;;;:::i;1599:130:59:-;1513:6;;-1:-1:-1;;;;;1513:6:59;929:10:63;1662:23:59;1654:68;;;;-1:-1:-1;;;1654:68:59;;55938:2:156;1654:68:59;;;55920:21:156;;;55957:18;;;55950:30;56016:34;55996:18;;;55989:62;56068:18;;1654:68:59;55736:356:156;39489:1259:3;39671:51;;;39650:172;;;;-1:-1:-1;;;39650:172:3;;56299:2:156;39650:172:3;;;56281:21:156;56338:2;56318:18;;;56311:30;56377:34;56357:18;;;56350:62;56448:34;56428:18;;;56421:62;-1:-1:-1;;;56499:19:156;;;56492:41;56550:19;;39650:172:3;56097:478:156;39650:172:3;39852:11;39832:17;39880:862;39904:9;39900:1;:13;39880:862;;;39934:18;39955:11;;39967:1;39955:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;40027:39:3;;39983:41;40027:39;;;:29;:39;;;;;;39934:35;;-1:-1:-1;40123:22:3;;40146:1;40123:25;;;;;;;:::i;:::-;;;;;;;40080:68;;2078:6:4;40187:32:3;:63;;40162:237;;;;-1:-1:-1;;;40162:237:3;;56782:2:156;40162:237:3;;;56764:21:156;56821:3;56801:18;;;56794:31;56861:34;56841:18;;;56834:62;56932:34;56912:18;;;56905:62;57004:34;56983:19;;;56976:63;-1:-1:-1;;;57055:19:156;;;57048:50;57115:19;;40162:237:3;56580:560:156;40162:237:3;-1:-1:-1;;;;;40465:39:3;;;;;;:29;:39;;;;;;;;;:74;;;40558:173;;57365:51:156;;;57432:18;;57425:34;;;57475:18;;57468:34;;;40558:173:3;;57353:2:156;57338:18;40558:173:3;;;;;;;39920:822;;;39915:3;;;;:::i;:::-;;;39880:862;;;;39640:1108;39489:1259;;;;:::o;2943:441:27:-;3077:14;;-1:-1:-1;;;;;3077:14:27;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:27;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:27;;57715:2:156;3048:197:27;;;57697:21:156;57754:2;57734:18;;;57727:30;57793:34;57773:18;;;57766:62;57864:34;57844:18;;;57837:62;-1:-1:-1;;;57915:19:156;;;57908:38;57963:19;;3048:197:27;57513:475:156;3048:197:27;3255:7;:26;;;3296:36;;1014:25:156;;;3303:10:27;;3296:36;;1002:2:156;987:18;3296:36:27;;;;;;;3342:35;3361:15;3342:18;:35::i;49522:193:3:-;49656:19;;;;;;;;;;;-1:-1:-1;;;49656:19:3;;;;;49618:89;;699:80:4;49618:89:3;;;58224:25:156;49646:30:3;58265:18:156;;;58258:34;49678:13:3;58308:18:156;;;58301:34;49701:4:3;58351:18:156;;;;58344:60;;;;49618:89:3;;;;;;;;;;58196:19:156;;;;49618:89:3;;;49608:100;;;;;;49522:193::o;2673:187:59:-;2765:6;;;-1:-1:-1;;;;;2781:17:59;;;-1:-1:-1;;;;;;2781:17:59;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;38774:486:3:-;2078:6:4;38894:25:3;:56;;38873:223;;;;-1:-1:-1;;;38873:223:3;;58617:2:156;38873:223:3;;;58599:21:156;58656:3;58636:18;;;58629:31;58696:34;58676:18;;;58669:62;58767:34;58747:18;;;58740:62;58839:34;58818:19;;;58811:63;58911:26;58890:19;;;58883:55;58955:19;;38873:223:3;58415:565:156;38873:223:3;39139:24;;39111:80;;;41067:25:156;;;41123:2;41108:18;;41101:34;;;39111:80:3;;41040:18:156;39111:80:3;;;;;;;39201:24;:52;38774:486::o;33909:247::-;-1:-1:-1;;;;;34031:24:3;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34069:6;;34031:24;:44;;34069:6;;34031:44;:::i;:::-;;;;;;;;34114:8;-1:-1:-1;;;;;34090:59:3;;34124:6;34132:8;34142:6;34090:59;;;;;;;;:::i;28944:4834::-;29150:22;29175:35;;29199:10;29175:35;:::i;:::-;29242:34;;;;:18;:34;;;;;;29150:60;;-1:-1:-1;29242:34:3;;29221:149;;;;-1:-1:-1;;;29221:149:3;;59647:2:156;29221:149:3;;;59629:21:156;59686:2;59666:18;;;59659:30;-1:-1:-1;;;;;;;;;;;59705:18:156;;;59698:62;59796:34;59776:18;;;59769:62;-1:-1:-1;;;59847:19:156;;;59840:34;59891:19;;29221:149:3;59445:471:156;29221:149:3;29426:24;;29454:12;;29402:21;;;;;;;;:::i;:::-;:48;;;;;;:::i;:::-;:64;;29381:207;;;;-1:-1:-1;;;29381:207:3;;60123:2:156;29381:207:3;;;60105:21:156;60162:2;60142:18;;;60135:30;-1:-1:-1;;;;;;;;;;;60181:18:156;;;60174:62;60272:34;60252:18;;;60245:62;60344:33;60323:19;;;60316:62;60395:19;;29381:207:3;59921:499:156;29381:207:3;29634:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29620:35:3;:10;-1:-1:-1;;;;;29620:35:3;;29599:163;;;;-1:-1:-1;;;29599:163:3;;60627:2:156;29599:163:3;;;60609:21:156;60666:2;60646:18;;;60639:30;-1:-1:-1;;;;;;;;;;;60685:18:156;;;60678:62;60776:34;60756:18;;;60749:62;-1:-1:-1;;;60827:19:156;;;60820:47;60884:19;;29599:163:3;60425:484:156;29599:163:3;29777:15;29773:217;;;29850:21;;;;:10;:21;:::i;:::-;29833:45;;;-1:-1:-1;29808:171:3;;;;-1:-1:-1;;;29808:171:3;;61116:2:156;29808:171:3;;;61098:21:156;61155:2;61135:18;;;61128:30;-1:-1:-1;;;;;;;;;;;61174:18:156;;;61167:62;61265:34;61245:18;;;61238:62;-1:-1:-1;;;61316:19:156;;;61309:33;61359:19;;29808:171:3;60914:470:156;29808:171:3;30061:34;;;;:18;:34;;;;;30054:41;;-1:-1:-1;;30054:41:3;;;30237:3484;;;;30277:9;30272:697;30296:21;;;;:10;:21;:::i;:::-;:28;;30292:1;:32;30272:697;;;30458:12;30399:29;:55;30429:21;;;;:10;:21;:::i;:::-;30451:1;30429:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30399:55:3;;;;;;;;;;;;-1:-1:-1;30399:55:3;;30375:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;30346:276;;;;-1:-1:-1;;;30346:276:3;;;;;;;:::i;:::-;30641:278;30695:17;;;;:10;:17;:::i;:::-;30746:10;30788:21;;;;:10;:21;:::i;:::-;30810:1;30788:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;30842:17;;;;:10;:17;:::i;:::-;30860:1;30842:20;;;;;;;:::i;:::-;;;;;;;30891:6;;30898:1;30891:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;30641:23;:278::i;:::-;30949:3;;30272:697;;;;30237:3484;;;31176:10;31138:23;31164;;;:11;:23;;;;;;-1:-1:-1;;;;;31164:23:3;;31201:2510;31225:21;;;;:10;:21;:::i;:::-;:28;;31221:1;:32;31201:2510;;;31387:12;31328:29;:55;31358:21;;;;:10;:21;:::i;:::-;31380:1;31358:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31328:55:3;;;;;;;;;;;;-1:-1:-1;31328:55:3;;31304:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;31275:277;;;;-1:-1:-1;;;31275:277:3;;;;;;;:::i;:::-;2088:42;31814:21;;;;:10;:21;:::i;:::-;31836:1;31814:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31814:50:3;;31810:1852;;;31888:14;31905:17;;;;:10;:17;:::i;:::-;31888:34;-1:-1:-1;32202:36:3;-1:-1:-1;;;;;32241:15:3;:25;;31888:34;32343:17;;;;:10;:17;:::i;:::-;32361:1;32343:20;;;;;;;:::i;:::-;32241:145;;-1:-1:-1;;;;;;32241:145:3;;;;;;;-1:-1:-1;;;;;49234:32:156;;;32241:145:3;;;49216:51:156;32343:20:3;;;;;;;49283:18:156;;;49276:34;-1:-1:-1;49189:18:156;;32241:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32435:19:3;;;32408:24;32435:19;;;:11;:19;;;;;;32202:184;;-1:-1:-1;32435:19:3;32534:30;;32530:451;;32592:366;32656:16;32795:6;32841:21;;;;:10;:21;:::i;:::-;32863:1;32841:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;32903:28;32592:23;:366::i;:::-;31866:1133;;;31810:1852;;;33027:15;-1:-1:-1;;;;;33027:25:3;;33053:10;33065:6;;33072:1;33065:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33076:21;;;;:10;:21;:::i;:::-;33098:1;33076:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33102:17;;;;:10;:17;:::i;:::-;33120:1;33102:20;;;;;;;:::i;:::-;33027:96;;;;;;-1:-1:-1;;;;;;33027:96:3;;;-1:-1:-1;;;;;62727:15:156;;;33027:96:3;;;62709:34:156;62779:15;;;62759:18;;;62752:43;62831:15;;;;62811:18;;;62804:43;33102:20:3;;;;;;62863:18:156;;;62856:34;62643:19;;;-1:-1:-1;33027:96:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;33203:29:3;;;33199:445;;33260:361;33324:15;33462:10;33512:21;;;;:10;:21;:::i;:::-;33534:1;33512:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33574:17;;;;:10;:17;:::i;:::-;33592:1;33574:20;;;;;;;:::i;:::-;;;;;;;33260:23;:361::i;:::-;33691:3;;31201:2510;;;;31124:2597;30237:3484;33736:35;;1014:25:156;;;33736:35:3;;1002:2:156;987:18;33736:35:3;;;;;;;29140:4638;28944:4834;;;;;:::o;974:926:23:-;-1:-1:-1;;;;;1476:19:62;;;:23;1410:484:23;;1481:56;;-1:-1:-1;;;1481:56:23;;;1541:18;-1:-1:-1;;;;;1481:33:23;;;574:10;;1481:56;;1515:10;;1527:9;;1481:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1481:78:23;;1456:220;;;;-1:-1:-1;;;1456:220:23;;64069:2:156;1456:220:23;;;64051:21:156;64108:2;64088:18;;;64081:30;64147:34;64127:18;;;64120:62;64218:34;64198:18;;;64191:62;-1:-1:-1;;;64269:19:156;;;64262:50;64329:19;;1456:220:23;63867:487:156;1410:484:23;1772:6;-1:-1:-1;;;;;1732:46:23;:36;1746:10;1758:9;1732:13;:36::i;:::-;-1:-1:-1;;;;;1732:46:23;;1707:176;;;;-1:-1:-1;;;1707:176:23;;64561:2:156;1707:176:23;;;64543:21:156;64600:2;64580:18;;;64573:30;64639:34;64619:18;;;64612:62;64710:34;64690:18;;;64683:62;-1:-1:-1;;;64761:19:156;;;64754:38;64809:19;;1707:176:23;64359:475:156;38292:476:3;-1:-1:-1;;;;;38434:34:3;;2088:42;38434:34;38430:332;;;38484:161;;-1:-1:-1;;;38484:161:3;;-1:-1:-1;;;;;38484:15:3;:38;;;;:161;;38551:6;;38588:10;;38624:6;;38484:161;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38430:332;;;38676:75;;-1:-1:-1;;;38676:75:3;;-1:-1:-1;;;;;65540:15:156;;;38676:75:3;;;65522:34:156;65592:15;;;65572:18;;;65565:43;65624:18;;;65617:34;;;65687:15;;;65667:18;;;65660:43;38676:15:3;:38;;;;65456:19:156;;38676:75:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38430:332;38292:476;;;;;:::o;4402:227:88:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;2243:1373::-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:88;;-1:-1:-1;3563:35:88;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:88;;66048:2:156;766:34:88;;;66030:21:156;66087:2;66067:18;;;66060:30;66126:26;66106:18;;;66099:54;66170:18;;766:34:88;65846:348:156;708:465:88;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:88;;66401:2:156;881:41:88;;;66383:21:156;66440:2;66420:18;;;66413:30;66479:33;66459:18;;;66452:61;66530:18;;881:41:88;66199:355:156;817:356:88;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:88;;66761:2:156;998:44:88;;;66743:21:156;66800:2;66780:18;;;66773:30;66839:34;66819:18;;;66812:62;-1:-1:-1;;;66890:18:156;;;66883:32;66932:19;;998:44:88;66559:398:156;939:234:88;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:88;;67164:2:156;1118:44:88;;;67146:21:156;67203:2;67183:18;;;67176:30;67242:34;67222:18;;;67215:62;-1:-1:-1;;;67293:18:156;;;67286:32;67335:19;;1118:44:88;66962:398:156;5810:1603:88;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:88;;-1:-1:-1;6962:30:88;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:88;;-1:-1:-1;7071:30:88;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;67592:25:156;;;67665:4;67653:17;;67633:18;;;67626:45;;;;67687:18;;;67680:34;;;67730:18;;;67723:34;;;7224:24:88;;67564:19:156;;7224:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:88;;-1:-1:-1;;7224:24:88;;;-1:-1:-1;;;;;;;7262:20:88;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:88;;-1:-1:-1;5810:1603:88;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:88;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;14:378:156:-;88:8;98:6;152:3;145:4;137:6;133:17;129:27;119:55;;170:1;167;160:12;119:55;-1:-1:-1;193:20:156;;-1:-1:-1;;;;;225:30:156;;222:50;;;268:1;265;258:12;222:50;305:4;297:6;293:17;281:29;;365:3;358:4;348:6;345:1;341:14;333:6;329:27;325:38;322:47;319:67;;;382:1;379;372:12;397:466;501:6;509;562:2;550:9;541:7;537:23;533:32;530:52;;;578:1;575;568:12;530:52;618:9;605:23;-1:-1:-1;;;;;643:6:156;640:30;637:50;;;683:1;680;673:12;637:50;722:81;795:7;786:6;775:9;771:22;722:81;:::i;:::-;822:8;;696:107;;-1:-1:-1;397:466:156;-1:-1:-1;;;;397:466:156:o;1232:131::-;-1:-1:-1;;;;;1307:31:156;;1297:42;;1287:70;;1353:1;1350;1343:12;1368:134;1436:20;;1465:31;1436:20;1465:31;:::i;:::-;1368:134;;;:::o;1507:667::-;1602:6;1610;1618;1626;1634;1687:3;1675:9;1666:7;1662:23;1658:33;1655:53;;;1704:1;1701;1694:12;1655:53;1743:9;1730:23;1762:31;1787:5;1762:31;:::i;:::-;1812:5;-1:-1:-1;1869:2:156;1854:18;;1841:32;1882:33;1841:32;1882:33;:::i;:::-;1934:7;-1:-1:-1;1993:2:156;1978:18;;1965:32;2006:33;1965:32;2006:33;:::i;:::-;1507:667;;;;-1:-1:-1;2058:7:156;;2112:2;2097:18;;2084:32;;-1:-1:-1;2163:3:156;2148:19;2135:33;;1507:667;-1:-1:-1;;1507:667:156:o;2674:632::-;2845:2;2897:21;;;2967:13;;2870:18;;;2989:22;;;2816:4;;2845:2;3068:15;;;;3042:2;3027:18;;;2816:4;3111:169;3125:6;3122:1;3119:13;3111:169;;;3186:13;;3174:26;;3255:15;;;;3220:12;;;;3147:1;3140:9;3111:169;;;-1:-1:-1;3297:3:156;;2674:632;-1:-1:-1;;;;;;2674:632:156:o;3311:163::-;3379:5;3424:2;3415:6;3410:3;3406:16;3402:25;3399:45;;;3440:1;3437;3430:12;3399:45;-1:-1:-1;3462:6:156;3311:163;-1:-1:-1;3311:163:156:o;3479:348::-;3531:8;3541:6;3595:3;3588:4;3580:6;3576:17;3572:27;3562:55;;3613:1;3610;3603:12;3562:55;-1:-1:-1;3636:20:156;;-1:-1:-1;;;;;3668:30:156;;3665:50;;;3711:1;3708;3701:12;3665:50;3748:4;3740:6;3736:17;3724:29;;3800:3;3793:4;3784:6;3776;3772:19;3768:30;3765:39;3762:59;;;3817:1;3814;3807:12;3832:554;3947:6;3955;3963;4016:3;4004:9;3995:7;3991:23;3987:33;3984:53;;;4033:1;4030;4023:12;3984:53;4056:62;4110:7;4099:9;4056:62;:::i;:::-;4046:72;;4169:2;4158:9;4154:18;4141:32;-1:-1:-1;;;;;4188:6:156;4185:30;4182:50;;;4228:1;4225;4218:12;4182:50;4267:59;4318:7;4309:6;4298:9;4294:22;4267:59;:::i;:::-;3832:554;;4345:8;;-1:-1:-1;4241:85:156;;-1:-1:-1;;;;3832:554:156:o;4391:271::-;4474:6;4527:2;4515:9;4506:7;4502:23;4498:32;4495:52;;;4543:1;4540;4533:12;4495:52;4582:9;4569:23;4601:31;4626:5;4601:31;:::i;:::-;4651:5;4391:271;-1:-1:-1;;;4391:271:156:o;4667:474::-;4762:6;4770;4778;4831:2;4819:9;4810:7;4806:23;4802:32;4799:52;;;4847:1;4844;4837:12;4799:52;4886:9;4873:23;4905:31;4930:5;4905:31;:::i;:::-;4955:5;-1:-1:-1;5012:2:156;4997:18;;4984:32;5025:33;4984:32;5025:33;:::i;:::-;4667:474;;5077:7;;-1:-1:-1;;;5131:2:156;5116:18;;;;5103:32;;4667:474::o;5146:180::-;5205:6;5258:2;5246:9;5237:7;5233:23;5229:32;5226:52;;;5274:1;5271;5264:12;5226:52;-1:-1:-1;5297:23:156;;5146:180;-1:-1:-1;5146:180:156:o;5331:813::-;5471:6;5479;5487;5495;5548:2;5536:9;5527:7;5523:23;5519:32;5516:52;;;5564:1;5561;5554:12;5516:52;5604:9;5591:23;-1:-1:-1;;;;;5674:2:156;5666:6;5663:14;5660:34;;;5690:1;5687;5680:12;5660:34;5729:81;5802:7;5793:6;5782:9;5778:22;5729:81;:::i;:::-;5829:8;;-1:-1:-1;5703:107:156;-1:-1:-1;5917:2:156;5902:18;;5889:32;;-1:-1:-1;5933:16:156;;;5930:36;;;5962:1;5959;5952:12;5930:36;;6001:83;6076:7;6065:8;6054:9;6050:24;6001:83;:::i;:::-;5331:813;;;;-1:-1:-1;6103:8:156;-1:-1:-1;;;;5331:813:156:o;6862:1252::-;7062:6;7070;7078;7086;7094;7102;7110;7118;7171:3;7159:9;7150:7;7146:23;7142:33;7139:53;;;7188:1;7185;7178:12;7139:53;7227:9;7214:23;7246:31;7271:5;7246:31;:::i;:::-;7296:5;-1:-1:-1;7353:2:156;7338:18;;7325:32;7366:33;7325:32;7366:33;:::i;:::-;7418:7;-1:-1:-1;7472:2:156;7457:18;;7444:32;;-1:-1:-1;7523:2:156;7508:18;;7495:32;;-1:-1:-1;7578:3:156;7563:19;;7550:33;-1:-1:-1;;;;;7632:14:156;;;7629:34;;;7659:1;7656;7649:12;7629:34;7698:81;7771:7;7762:6;7751:9;7747:22;7698:81;:::i;:::-;7798:8;;-1:-1:-1;7672:107:156;-1:-1:-1;7886:3:156;7871:19;;7858:33;;-1:-1:-1;7903:16:156;;;7900:36;;;7932:1;7929;7922:12;7900:36;;7971:83;8046:7;8035:8;8024:9;8020:24;7971:83;:::i;:::-;6862:1252;;;;-1:-1:-1;6862:1252:156;;-1:-1:-1;6862:1252:156;;;;;;8073:8;-1:-1:-1;;;6862:1252:156:o;8119:1518::-;8383:6;8391;8399;8407;8415;8423;8431;8439;8492:3;8480:9;8471:7;8467:23;8463:33;8460:53;;;8509:1;8506;8499:12;8460:53;8549:9;8536:23;-1:-1:-1;;;;;8619:2:156;8611:6;8608:14;8605:34;;;8635:1;8632;8625:12;8605:34;8674:81;8747:7;8738:6;8727:9;8723:22;8674:81;:::i;:::-;8774:8;;-1:-1:-1;8648:107:156;-1:-1:-1;8862:2:156;8847:18;;8834:32;;-1:-1:-1;8878:16:156;;;8875:36;;;8907:1;8904;8897:12;8875:36;8946:83;9021:7;9010:8;8999:9;8995:24;8946:83;:::i;:::-;9048:8;;-1:-1:-1;8920:109:156;-1:-1:-1;9136:2:156;9121:18;;9108:32;;-1:-1:-1;9152:16:156;;;9149:36;;;9181:1;9178;9171:12;9149:36;9220:83;9295:7;9284:8;9273:9;9269:24;9220:83;:::i;:::-;9322:8;;-1:-1:-1;9194:109:156;-1:-1:-1;9410:2:156;9395:18;;9382:32;;-1:-1:-1;9426:16:156;;;9423:36;;;9455:1;9452;9445:12;10617:127;10678:10;10673:3;10669:20;10666:1;10659:31;10709:4;10706:1;10699:15;10733:4;10730:1;10723:15;10749:253;10821:2;10815:9;10863:4;10851:17;;-1:-1:-1;;;;;10883:34:156;;10919:22;;;10880:62;10877:88;;;10945:18;;:::i;:::-;10981:2;10974:22;10749:253;:::o;11007:257::-;11079:4;11073:11;;;11111:17;;-1:-1:-1;;;;;11143:34:156;;11179:22;;;11140:62;11137:88;;;11205:18;;:::i;11269:253::-;11341:2;11335:9;11383:4;11371:17;;-1:-1:-1;;;;;11403:34:156;;11439:22;;;11400:62;11397:88;;;11465:18;;:::i;11527:275::-;11598:2;11592:9;11663:2;11644:13;;-1:-1:-1;;11640:27:156;11628:40;;-1:-1:-1;;;;;11683:34:156;;11719:22;;;11680:62;11677:88;;;11745:18;;:::i;:::-;11781:2;11774:22;11527:275;;-1:-1:-1;11527:275:156:o;11807:121::-;11892:10;11885:5;11881:22;11874:5;11871:33;11861:61;;11918:1;11915;11908:12;11933:132;12000:20;;12029:30;12000:20;12029:30;:::i;12070:194::-;12141:4;-1:-1:-1;;;;;12166:6:156;12163:30;12160:56;;;12196:18;;:::i;:::-;-1:-1:-1;12241:1:156;12237:14;12253:4;12233:25;;12070:194::o;12269:759::-;12334:5;12387:3;12380:4;12372:6;12368:17;12364:27;12354:55;;12405:1;12402;12395:12;12354:55;12441:6;12428:20;12467:4;12491:71;12507:54;12558:2;12507:54;:::i;:::-;12491:71;:::i;:::-;12596:15;;;12682:1;12678:10;;;;12666:23;;12662:32;;;12627:12;;;;12706:15;;;12703:35;;;12734:1;12731;12724:12;12703:35;12770:2;12762:6;12758:15;12782:217;12798:6;12793:3;12790:15;12782:217;;;12878:3;12865:17;12895:31;12920:5;12895:31;:::i;:::-;12939:18;;12977:12;;;;12815;;12782:217;;;-1:-1:-1;13017:5:156;12269:759;-1:-1:-1;;;;;;12269:759:156:o;13033:673::-;13087:5;13140:3;13133:4;13125:6;13121:17;13117:27;13107:55;;13158:1;13155;13148:12;13107:55;13194:6;13181:20;13220:4;13244:71;13260:54;13311:2;13260:54;:::i;13244:71::-;13349:15;;;13435:1;13431:10;;;;13419:23;;13415:32;;;13380:12;;;;13459:15;;;13456:35;;;13487:1;13484;13477:12;13456:35;13523:2;13515:6;13511:15;13535:142;13551:6;13546:3;13543:15;13535:142;;;13617:17;;13605:30;;13655:12;;;;13568;;13535:142;;13711:939;13768:5;13816:4;13804:9;13799:3;13795:19;13791:30;13788:50;;;13834:1;13831;13824:12;13788:50;13856:22;;:::i;:::-;13847:31;;13901:29;13920:9;13901:29;:::i;:::-;13894:5;13887:44;13963:38;13997:2;13986:9;13982:18;13963:38;:::i;:::-;13958:2;13951:5;13947:14;13940:62;14034:38;14068:2;14057:9;14053:18;14034:38;:::i;:::-;14029:2;14022:5;14018:14;14011:62;14133:2;14122:9;14118:18;14105:32;14100:2;14093:5;14089:14;14082:56;14171:38;14204:3;14193:9;14189:19;14171:38;:::i;:::-;14165:3;14158:5;14154:15;14147:63;14261:3;14250:9;14246:19;14233:33;-1:-1:-1;;;;;14326:2:156;14318:6;14315:14;14312:34;;;14342:1;14339;14332:12;14312:34;14379:68;14443:3;14434:6;14423:9;14419:22;14379:68;:::i;:::-;14373:3;14366:5;14362:15;14355:93;14501:3;14490:9;14486:19;14473:33;14457:49;;14531:2;14521:8;14518:16;14515:36;;;14547:1;14544;14537:12;14515:36;;14584:59;14639:3;14628:8;14617:9;14613:24;14584:59;:::i;:::-;14578:3;14571:5;14567:15;14560:84;;13711:939;;;;:::o;14655:351::-;14742:6;14795:2;14783:9;14774:7;14770:23;14766:32;14763:52;;;14811:1;14808;14801:12;14763:52;14851:9;14838:23;-1:-1:-1;;;;;14876:6:156;14873:30;14870:50;;;14916:1;14913;14906:12;14870:50;14939:61;14992:7;14983:6;14972:9;14968:22;14939:61;:::i;:::-;14929:71;14655:351;-1:-1:-1;;;;14655:351:156:o;15011:269::-;15068:6;15121:2;15109:9;15100:7;15096:23;15092:32;15089:52;;;15137:1;15134;15127:12;15089:52;15176:9;15163:23;15226:4;15219:5;15215:16;15208:5;15205:27;15195:55;;15246:1;15243;15236:12;15285:504;15367:5;15415:4;15403:9;15398:3;15394:19;15390:30;15387:50;;;15433:1;15430;15423:12;15387:50;15455:22;;:::i;:::-;15446:31;;15514:9;15501:23;15533:33;15558:7;15533:33;:::i;:::-;15575:22;;15649:2;15634:18;;15621:32;15697:26;15684:40;;15672:53;;15662:81;;15739:1;15736;15729:12;15662:81;15770:2;15759:14;;15752:31;15763:5;15285:504;-1:-1:-1;;15285:504:156:o;15794:2352::-;15929:6;15960:2;16003;15991:9;15982:7;15978:23;15974:32;15971:52;;;16019:1;16016;16009:12;15971:52;16059:9;16046:23;-1:-1:-1;;;;;16129:2:156;16121:6;16118:14;16115:34;;;16145:1;16142;16135:12;16115:34;16183:6;16172:9;16168:22;16158:32;;16228:7;16221:4;16217:2;16213:13;16209:27;16199:55;;16250:1;16247;16240:12;16199:55;16286:2;16273:16;16309:71;16325:54;16376:2;16325:54;:::i;16309:71::-;16414:15;;;16496:1;16492:10;;;;16484:19;;16480:28;;;16445:12;;;;16520:19;;;16517:39;;;16552:1;16549;16542:12;16517:39;16584:2;16580;16576:11;16596:1520;16612:6;16607:3;16604:15;16596:1520;;;16698:3;16685:17;16734:2;16721:11;16718:19;16715:109;;;16778:1;16807:2;16803;16796:14;16715:109;16847:20;;16890:4;16918:16;;;-1:-1:-1;;16914:30:156;16910:39;-1:-1:-1;16907:129:156;;;16990:1;17019:2;17015;17008:14;16907:129;17062:22;;:::i;:::-;17134:2;17130;17126:11;17113:25;17167:2;17157:8;17154:16;17151:106;;;17211:1;17240:2;17236;17229:14;17151:106;17284:76;17352:7;17347:2;17336:8;17332:2;17328:17;17324:26;17284:76;:::i;:::-;17277:5;17270:91;;17385:2;17437:3;17433:2;17429:12;17416:26;17471:2;17461:8;17458:16;17455:109;;;17516:1;17546:3;17541;17534:16;17455:109;17600:65;17657:7;17652:2;17641:8;17637:2;17633:17;17629:26;17600:65;:::i;:::-;17595:2;17588:5;17584:14;17577:89;;17690:2;17729:32;17756:3;17752:2;17748:12;17729:32;:::i;:::-;17723:3;17716:5;17712:15;17705:57;17786:4;17775:15;;17827:76;17895:7;17889:3;17885:2;17881:12;17827:76;:::i;:::-;17810:15;;;17803:101;17941:32;17967:4;17959:13;;17941:32;:::i;:::-;17924:15;;;17917:57;18011:31;18030:11;;;18011:31;:::i;:::-;18005:3;17994:15;;17987:56;18056:18;;-1:-1:-1;;18094:12:156;;;;16629;;16596:1520;;;-1:-1:-1;18135:5:156;15794:2352;-1:-1:-1;;;;;;;;15794:2352:156:o;18151:118::-;18237:5;18230:13;18223:21;18216:5;18213:32;18203:60;;18259:1;18256;18249:12;18274:951;18430:6;18438;18446;18454;18462;18515:3;18503:9;18494:7;18490:23;18486:33;18483:53;;;18532:1;18529;18522:12;18483:53;18572:9;18559:23;-1:-1:-1;;;;;18642:2:156;18634:6;18631:14;18628:34;;;18658:1;18655;18648:12;18628:34;18681:22;;;;18737:3;18719:16;;;18715:26;18712:46;;;18754:1;18751;18744:12;18712:46;18777:2;;-1:-1:-1;18832:2:156;18817:18;;18804:32;;18848:16;;;18845:36;;;18877:1;18874;18867:12;18845:36;;18916:83;18991:7;18980:8;18969:9;18965:24;18916:83;:::i;:::-;19018:8;;-1:-1:-1;18890:109:156;-1:-1:-1;;19100:2:156;19085:18;;19072:32;;-1:-1:-1;19154:2:156;19139:18;;19126:32;19167:28;19126:32;19167:28;:::i;:::-;19214:5;19204:15;;;18274:951;;;;;;;;:::o;19230:406::-;19316:6;19324;19377:2;19365:9;19356:7;19352:23;19348:32;19345:52;;;19393:1;19390;19383:12;19345:52;19432:9;19419:23;19451:31;19476:5;19451:31;:::i;:::-;19501:5;-1:-1:-1;19558:2:156;19543:18;;19530:32;19571:33;19530:32;19571:33;:::i;:::-;19623:7;19613:17;;;19230:406;;;;;:::o;19641:862::-;19707:5;19755:4;19743:9;19738:3;19734:19;19730:30;19727:50;;;19773:1;19770;19763:12;19727:50;19795:22;;:::i;:::-;19786:31;;19853:9;19840:23;-1:-1:-1;;;;;19923:2:156;19915:6;19912:14;19909:34;;;19939:1;19936;19929:12;19909:34;19977:6;19966:9;19962:22;19952:32;;20022:3;20015:4;20011:2;20007:13;20003:23;19993:51;;20040:1;20037;20030:12;19993:51;20076:2;20063:16;20098:4;20121:2;20117;20114:10;20111:36;;;20127:18;;:::i;:::-;20169:53;20212:2;20193:13;;-1:-1:-1;;20189:27:156;20185:36;;20169:53;:::i;:::-;20156:66;;20245:2;20238:5;20231:17;20285:3;20280:2;20275;20271;20267:11;20263:20;20260:29;20257:49;;;20302:1;20299;20292:12;20257:49;20357:2;20352;20348;20344:11;20339:2;20332:5;20328:14;20315:45;20401:1;20396:2;20391;20384:5;20380:14;20376:23;20369:34;20426:5;20419;20412:20;20492:2;20481:9;20477:18;20464:32;20459:2;20452:5;20448:14;20441:56;;;;;19641:862;;;;:::o;20508:983::-;20677:6;20685;20693;20701;20709;20762:3;20750:9;20741:7;20737:23;20733:33;20730:53;;;20779:1;20776;20769:12;20730:53;20818:9;20805:23;20837:31;20862:5;20837:31;:::i;:::-;20887:5;-1:-1:-1;20944:2:156;20929:18;;20916:32;20957:33;20916:32;20957:33;:::i;:::-;21009:7;-1:-1:-1;21067:2:156;21052:18;;21039:32;-1:-1:-1;;;;;21120:14:156;;;21117:34;;;21147:1;21144;21137:12;21117:34;21170:70;21232:7;21223:6;21212:9;21208:22;21170:70;:::i;:::-;21160:80;;21293:2;21282:9;21278:18;21265:32;21249:48;;21322:2;21312:8;21309:16;21306:36;;;21338:1;21335;21328:12;21306:36;;21361:72;21425:7;21414:8;21403:9;21399:24;21361:72;:::i;:::-;20508:983;;;;-1:-1:-1;20508:983:156;;21480:3;21465:19;21452:33;;20508:983;-1:-1:-1;;;20508:983:156:o;21728:512::-;21839:6;21847;21900:2;21888:9;21879:7;21875:23;21871:32;21868:52;;;21916:1;21913;21906:12;21868:52;21955:9;21942:23;21974:31;21999:5;21974:31;:::i;:::-;22024:5;-1:-1:-1;22080:2:156;22065:18;;22052:32;-1:-1:-1;;;;;22096:30:156;;22093:50;;;22139:1;22136;22129:12;22093:50;22162:72;22226:7;22217:6;22206:9;22202:22;22162:72;:::i;:::-;22152:82;;;21728:512;;;;;:::o;22245:435::-;22298:3;22336:5;22330:12;22363:6;22358:3;22351:19;22389:4;22418:2;22413:3;22409:12;22402:19;;22455:2;22448:5;22444:14;22476:1;22486:169;22500:6;22497:1;22494:13;22486:169;;;22561:13;;22549:26;;22595:12;;;;22630:15;;;;22522:1;22515:9;22486:169;;;-1:-1:-1;22671:3:156;;22245:435;-1:-1:-1;;;;;22245:435:156:o;22685:261::-;22864:2;22853:9;22846:21;22827:4;22884:56;22936:2;22925:9;22921:18;22913:6;22884:56;:::i;23177:411::-;23248:6;23256;23309:2;23297:9;23288:7;23284:23;23280:32;23277:52;;;23325:1;23322;23315:12;23277:52;23365:9;23352:23;-1:-1:-1;;;;;23390:6:156;23387:30;23384:50;;;23430:1;23427;23420:12;23384:50;23469:59;23520:7;23511:6;23500:9;23496:22;23469:59;:::i;24003:315::-;24071:6;24079;24132:2;24120:9;24111:7;24107:23;24103:32;24100:52;;;24148:1;24145;24138:12;24100:52;24187:9;24174:23;24206:31;24231:5;24206:31;:::i;:::-;24256:5;24308:2;24293:18;;;;24280:32;;-1:-1:-1;;;24003:315:156:o;25146:525::-;25232:6;25240;25248;25256;25309:3;25297:9;25288:7;25284:23;25280:33;25277:53;;;25326:1;25323;25316:12;25277:53;25365:9;25352:23;25384:31;25409:5;25384:31;:::i;:::-;25434:5;-1:-1:-1;25486:2:156;25471:18;;25458:32;;-1:-1:-1;25542:2:156;25527:18;;25514:32;25555:33;25514:32;25555:33;:::i;:::-;25146:525;;;;-1:-1:-1;25607:7:156;;25661:2;25646:18;25633:32;;-1:-1:-1;;25146:525:156:o;25676:472::-;25740:3;25778:5;25772:12;25805:6;25800:3;25793:19;25831:4;25860:2;25855:3;25851:12;25844:19;;25897:2;25890:5;25886:14;25918:1;25928:195;25942:6;25939:1;25936:13;25928:195;;;26007:13;;-1:-1:-1;;;;;26003:39:156;25991:52;;26063:12;;;;26098:15;;;;26039:1;25957:9;25928:195;;26153:494;26428:2;26417:9;26410:21;26391:4;26454:67;26517:2;26506:9;26502:18;26494:6;26454:67;:::i;:::-;26569:9;26561:6;26557:22;26552:2;26541:9;26537:18;26530:50;26597:44;26634:6;26626;26597:44;:::i;26652:572::-;26766:6;26774;26782;26835:2;26823:9;26814:7;26810:23;26806:32;26803:52;;;26851:1;26848;26841:12;26803:52;26890:9;26877:23;26909:31;26934:5;26909:31;:::i;:::-;26959:5;-1:-1:-1;27015:2:156;27000:18;;26987:32;-1:-1:-1;;;;;27031:30:156;;27028:50;;;27074:1;27071;27064:12;27028:50;27097:70;27159:7;27150:6;27139:9;27135:22;27097:70;:::i;:::-;27087:80;;;27214:2;27203:9;27199:18;27186:32;27176:42;;26652:572;;;;;:::o;27229:254::-;27323:6;27376:2;27364:9;27355:7;27351:23;27347:32;27344:52;;;27392:1;27389;27382:12;27344:52;27415:62;27469:7;27458:9;27415:62;:::i;27488:127::-;27549:10;27544:3;27540:20;27537:1;27530:31;27580:4;27577:1;27570:15;27604:4;27601:1;27594:15;27620:127;27681:10;27676:3;27672:20;27669:1;27662:31;27712:4;27709:1;27702:15;27736:4;27733:1;27726:15;27752:135;27791:3;-1:-1:-1;;27812:17:156;;27809:43;;;27832:18;;:::i;:::-;-1:-1:-1;27879:1:156;27868:13;;27752:135::o;28894:349::-;29096:2;29078:21;;;29135:2;29115:18;;;29108:30;29174:27;29169:2;29154:18;;29147:55;29234:2;29219:18;;28894:349::o;29248:339::-;29356:4;29414:11;29401:25;29508:2;29504:7;29493:8;29477:14;29473:29;29469:43;29449:18;29445:68;29435:96;;29527:1;29524;29517:12;29435:96;29548:33;;;;;29248:339;-1:-1:-1;;29248:339:156:o;29592:545::-;29685:4;29691:6;29751:11;29738:25;29845:2;29841:7;29830:8;29814:14;29810:29;29806:43;29786:18;29782:68;29772:96;;29864:1;29861;29854:12;29772:96;29891:33;;29943:20;;;-1:-1:-1;;;;;;29975:30:156;;29972:50;;;30018:1;30015;30008:12;29972:50;30051:4;30039:17;;-1:-1:-1;30102:1:156;30098:14;;;30082;30078:35;30068:46;;30065:66;;;30127:1;30124;30117:12;32094:684;32296:2;32281:18;;32321:20;;32350:31;32321:20;32350:31;:::i;:::-;-1:-1:-1;;;;;32446:14:156;;;32428:33;;32510:4;32498:17;;32485:31;;32525:33;32485:31;32525:33;:::i;:::-;32596:16;32589:4;32574:20;;32567:46;32662:4;32650:17;;32637:31;32677:32;32637:31;32677:32;:::i;:::-;32760:10;32751:7;32747:24;32740:4;32729:9;32725:20;32718:54;;32094:684;;;;:::o;32783:390::-;32942:2;32931:9;32924:21;32981:6;32976:2;32965:9;32961:18;32954:34;33038:6;33030;33025:2;33014:9;33010:18;32997:48;33094:1;33065:22;;;33089:2;33061:31;;;33054:42;;;;33157:2;33136:15;;;-1:-1:-1;;33132:29:156;33117:45;33113:54;;32783:390;-1:-1:-1;32783:390:156:o;33178:251::-;33248:6;33301:2;33289:9;33280:7;33276:23;33272:32;33269:52;;;33317:1;33314;33307:12;33269:52;33349:9;33343:16;33368:31;33393:5;33368:31;:::i;33434:406::-;33636:2;33618:21;;;33675:2;33655:18;;;33648:30;33714:34;33709:2;33694:18;;33687:62;-1:-1:-1;;;33780:2:156;33765:18;;33758:40;33830:3;33815:19;;33434:406::o;33845:419::-;34047:2;34029:21;;;34086:2;34066:18;;;34059:30;34125:34;34120:2;34105:18;;34098:62;34196:25;34191:2;34176:18;;34169:53;34254:3;34239:19;;33845:419::o;34269:245::-;34336:6;34389:2;34377:9;34368:7;34364:23;34360:32;34357:52;;;34405:1;34402;34395:12;34357:52;34437:9;34431:16;34456:28;34478:5;34456:28;:::i;34519:404::-;34721:2;34703:21;;;34760:2;34740:18;;;34733:30;34799:34;34794:2;34779:18;;34772:62;-1:-1:-1;;;34865:2:156;34850:18;;34843:38;34913:3;34898:19;;34519:404::o;36327:328::-;36423:4;36481:11;36468:25;36575:3;36571:8;36560;36544:14;36540:29;36536:44;36516:18;36512:69;36502:97;;36595:1;36592;36585:12;37226:241;37282:6;37335:2;37323:9;37314:7;37310:23;37306:32;37303:52;;;37351:1;37348;37341:12;37303:52;37390:9;37377:23;37409:28;37431:5;37409:28;:::i;37472:754::-;37525:3;37570:1;37566;37561:3;37557:11;37553:19;37611:2;37603:5;37597:12;37593:21;37588:3;37581:34;37676:2;37668:4;37661:5;37657:16;37651:23;37647:32;37640:4;37635:3;37631:14;37624:56;37741:2;37733:4;37726:5;37722:16;37716:23;37712:32;37705:4;37700:3;37696:14;37689:56;;37794:4;37787:5;37783:16;37777:23;37770:4;37765:3;37761:14;37754:47;37862:10;37854:4;37847:5;37843:16;37837:23;37833:40;37826:4;37821:3;37817:14;37810:64;37920:4;37913:5;37909:16;37903:23;37958:4;37951;37946:3;37942:14;37935:28;37984:69;38047:4;38042:3;38038:14;38024:12;37984:69;:::i;:::-;37972:81;;38101:4;38094:5;38090:16;38084:23;38149:3;38143:4;38139:14;38132:4;38127:3;38123:14;38116:38;38170:50;38215:4;38199:14;38170:50;:::i;38231:267::-;38416:2;38405:9;38398:21;38379:4;38436:56;38488:2;38477:9;38473:18;38465:6;38436:56;:::i;38503:1253::-;38734:2;38723:9;38716:21;38697:4;38772:6;38766:13;38815:4;38810:2;38799:9;38795:18;38788:32;38843:74;38912:3;38901:9;38897:19;38883:12;38843:74;:::i;:::-;38829:88;;38966:2;38958:6;38954:15;38948:22;39038:2;39034:7;39022:9;39014:6;39010:22;39006:36;39001:2;38990:9;38986:18;38979:64;39066:52;39111:6;39095:14;39066:52;:::i;:::-;39052:66;;;39167:2;39159:6;39155:15;39149:22;39207:1;39203;39198:3;39194:11;39190:19;39265:2;39249:14;39245:23;39240:2;39229:9;39225:18;39218:51;39318:2;39310:6;39306:15;39300:22;39278:44;;39386:2;39369:14;39363:21;39359:30;39353:3;39342:9;39338:19;39331:59;;39463:26;39457:2;39441:14;39437:23;39431:30;39427:63;39421:3;39410:9;39406:19;39399:92;;39540:3;39532:6;39528:16;39522:23;39554:54;39603:3;39592:9;39588:19;39572:14;24669:10;24658:22;24646:35;;24593:94;39554:54;-1:-1:-1;39657:3:156;39645:16;;39639:23;-1:-1:-1;;;;;9941:31:156;;39721:4;39706:20;;9929:44;39671:56;9875:104;39761:306;39837:6;39845;39898:2;39886:9;39877:7;39873:23;39869:32;39866:52;;;39914:1;39911;39904:12;39866:52;39946:9;39940:16;39965:28;39987:5;39965:28;:::i;:::-;40057:2;40042:18;;;;40036:25;40012:5;;40036:25;;-1:-1:-1;;;39761:306:156:o;40550:338::-;40763:6;40752:9;40745:25;40806:2;40801;40790:9;40786:18;40779:30;40726:4;40826:56;40878:2;40867:9;40863:18;40855:6;40826:56;:::i;42624:183::-;42693:6;42746:2;42734:9;42725:7;42721:23;42717:32;42714:52;;;42762:1;42759;42752:12;42714:52;-1:-1:-1;42785:16:156;;42624:183;-1:-1:-1;42624:183:156:o;42812:670::-;42877:5;42930:3;42923:4;42915:6;42911:17;42907:27;42897:55;;42948:1;42945;42938:12;42897:55;42977:6;42971:13;43003:4;43027:71;43043:54;43094:2;43043:54;:::i;43027:71::-;43132:15;;;43218:1;43214:10;;;;43202:23;;43198:32;;;43163:12;;;;43242:15;;;43239:35;;;43270:1;43267;43260:12;43239:35;43306:2;43298:6;43294:15;43318:135;43334:6;43329:3;43326:15;43318:135;;;43400:10;;43388:23;;43431:12;;;;43351;;43318:135;;43487:1238;43634:6;43642;43695:2;43683:9;43674:7;43670:23;43666:32;43663:52;;;43711:1;43708;43701:12;43663:52;43744:9;43738:16;-1:-1:-1;;;;;43814:2:156;43806:6;43803:14;43800:34;;;43830:1;43827;43820:12;43800:34;43868:6;43857:9;43853:22;43843:32;;43913:7;43906:4;43902:2;43898:13;43894:27;43884:55;;43935:1;43932;43925:12;43884:55;43964:2;43958:9;43986:4;44010:71;44026:54;44077:2;44026:54;:::i;44010:71::-;44115:15;;;44197:1;44193:10;;;;44185:19;;44181:28;;;44146:12;;;;44221:19;;;44218:39;;;44253:1;44250;44243:12;44218:39;44277:11;;;;44297:210;44313:6;44308:3;44305:15;44297:210;;;44386:3;44380:10;44403:31;44428:5;44403:31;:::i;:::-;44447:18;;44330:12;;;;44485;;;;44297:210;;;44562:18;;;44556:25;44526:5;;-1:-1:-1;44556:25:156;;-1:-1:-1;;;44593:16:156;;;44590:36;;;44622:1;44619;44612:12;44590:36;;44645:74;44711:7;44700:8;44689:9;44685:24;44645:74;:::i;44730:128::-;44770:3;44801:1;44797:6;44794:1;44791:13;44788:39;;;44807:18;;:::i;:::-;-1:-1:-1;44843:9:156;;44730:128::o;44863:125::-;44903:4;44931:1;44928;44925:8;44922:34;;;44936:18;;:::i;:::-;-1:-1:-1;44973:9:156;;44863:125::o;49943:393::-;-1:-1:-1;;;;;50219:15:156;;;50201:34;;50271:15;;;;50266:2;50251:18;;50244:43;50318:2;50303:18;;50296:34;;;;50151:2;50136:18;;49943:393::o;50834:245::-;50892:6;50945:2;50933:9;50924:7;50920:23;50916:32;50913:52;;;50961:1;50958;50951:12;50913:52;51000:9;50987:23;51019:30;51043:5;51019:30;:::i;52134:195::-;52238:11;;-1:-1:-1;;;;;;52234:54:156;-1:-1:-1;;;;;52290:31:156;;;;52231:91;;;;52218:105;;52134:195::o;52334:758::-;52515:5;52502:19;52530:33;52555:7;52530:33;:::i;:::-;52572:62;52626:7;52620:4;52572:62;:::i;:::-;;52671:1;52665:4;52661:12;52721:2;52714:5;52710:14;52697:28;52734:33;52759:7;52734:33;:::i;:::-;52776:68;52836:7;52824:10;52776:68;:::i;:::-;;52892:2;52885:5;52881:14;52868:28;52905:32;52929:7;52905:32;:::i;:::-;52956:17;;-1:-1:-1;;;;53004:34:156;53067:3;53044:17;;;;-1:-1:-1;;;53040:44:156;53001:84;52982:104;;-1:-1:-1;;52334:758:156:o;59238:202::-;59346:9;59383:51;59419:14;59412:5;59383:51;:::i;:::-;59370:64;59238:202;-1:-1:-1;;59238:202:156:o;61389:555::-;61591:2;61573:21;;;61630:3;61610:18;;;61603:31;-1:-1:-1;;;;;;;;;;;61665:2:156;61650:18;;61643:62;61741:34;61736:2;61721:18;;61714:62;61813:34;61807:3;61792:19;;61785:63;-1:-1:-1;;;61879:3:156;61864:19;;61857:45;61934:3;61919:19;;61389:555::o;62901:666::-;63076:6;63065:9;63058:25;63039:4;63102:2;63140;63135;63124:9;63120:18;63113:30;63172:6;63166:13;63215:6;63210:2;63199:9;63195:18;63188:34;63240:1;63250:140;63264:6;63261:1;63258:13;63250:140;;;63359:14;;;63355:23;;63349:30;63325:17;;;63344:2;63321:26;63314:66;63279:10;;63250:140;;;63408:6;63405:1;63402:13;63399:91;;;63478:1;63473:2;63464:6;63453:9;63449:22;63445:31;63438:42;63399:91;-1:-1:-1;63551:2:156;63530:15;-1:-1:-1;;63526:29:156;63511:45;;;;63558:2;63507:54;;62901:666;-1:-1:-1;;;;62901:666:156:o;63572:290::-;63641:6;63694:2;63682:9;63673:7;63669:23;63665:32;63662:52;;;63710:1;63707;63700:12;63662:52;63736:16;;-1:-1:-1;;;;;;63781:32:156;;63771:43;;63761:71;;63828:1;63825;63818:12;65714:127;65775:10;65770:3;65766:20;65763:1;65756:31;65806:4;65803:1;65796:15;65830:4;65827:1;65820:15",
    "linkReferences": {},
    "immutableReferences": {
      "2694": [
        {
          "start": 10061,
          "length": 32
        }
      ],
      "4941": [
        {
          "start": 1300,
          "length": 32
        },
        {
          "start": 4193,
          "length": 32
        },
        {
          "start": 5085,
          "length": 32
        },
        {
          "start": 5893,
          "length": 32
        },
        {
          "start": 7797,
          "length": 32
        },
        {
          "start": 11123,
          "length": 32
        },
        {
          "start": 11510,
          "length": 32
        },
        {
          "start": 16959,
          "length": 32
        },
        {
          "start": 18091,
          "length": 32
        }
      ],
      "4945": [
        {
          "start": 1961,
          "length": 32
        }
      ],
      "4949": [
        {
          "start": 1484,
          "length": 32
        },
        {
          "start": 4243,
          "length": 32
        },
        {
          "start": 5135,
          "length": 32
        },
        {
          "start": 7649,
          "length": 32
        },
        {
          "start": 10918,
          "length": 32
        },
        {
          "start": 16665,
          "length": 32
        },
        {
          "start": 17925,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
    "DOMAIN_TYPEHASH()": "20606b70",
    "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS()": "4fc40b61",
    "MAX_WITHDRAWAL_DELAY_BLOCKS()": "ca661c04",
    "STAKER_DELEGATION_TYPEHASH()": "43377382",
    "beaconChainETHStrategy()": "9104c319",
    "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": "1bbce091",
    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
    "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": "c94b5111",
    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": "60d7faed",
    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": "33404396",
    "cumulativeWithdrawalsQueued(address)": "a1788484",
    "decreaseDelegatedShares(address,address,uint256)": "132d4967",
    "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
    "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": "7f548071",
    "delegatedTo(address)": "65da1264",
    "delegationApprover(address)": "3cdeb5e0",
    "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
    "domainSeparator()": "f698da25",
    "earningsReceiver(address)": "5f966f14",
    "eigenPodManager()": "4665bcda",
    "getDelegatableShares(address)": "cf80873e",
    "getOperatorShares(address,address[])": "90041347",
    "getWithdrawalDelay(address[])": "0449ca39",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "initialize(address,address,uint256,uint256,address[],uint256[])": "22bf40e4",
    "isDelegated(address)": "3e28391d",
    "isOperator(address)": "6d70f7ae",
    "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": "5cfe8d2c",
    "minWithdrawalDelayBlocks()": "c448feb8",
    "modifyOperatorDetails((address,address,uint32))": "f16172b0",
    "operatorDetails(address)": "c5e480db",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "pendingWithdrawals(bytes32)": "b7f06ebe",
    "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
    "registerAsOperator((address,address,uint32),string)": "0f589e59",
    "renounceOwnership()": "715018a6",
    "setPauserRegistry(address)": "10d67a2f",
    "setStrategyWithdrawalDelayBlocks(address[],uint256[])": "1522bf02",
    "slasher()": "b1344271",
    "stakerNonce(address)": "29c77d4f",
    "stakerOptOutWindowBlocks(address)": "16928365",
    "strategyManager()": "39b70e38",
    "strategyWithdrawalDelayBlocks(address)": "c488375a",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc",
    "updateOperatorMetadataURI(string)": "99be81c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldWithdrawalRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newWithdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"earningsReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"_strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]\",\"name\":\"withdrawalsToMigrate\",\"type\":\"tuple[]\"}],\"name\":\"migrateQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger and slasher.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,address,uint256,uint256,address[],uint256[])\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"details\":\"This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(string)\":{\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalMigrated(bytes32,bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is *migrated* from the StrategyManager to the DelegationManager\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `StakerDelegation` struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"notice\":\"Migrates an array of queued withdrawals from the StrategyManager contract to this contract.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"pendingWithdrawals(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"slasher()\":{\"notice\":\"The Slasher contract for EigenLayer\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked.\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0x56dfd54efe298df8100738e5f57682fd9cb068a348aca8fddb1c7a2148fdc957\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdf1c7c8687d3e81b89b8dcd2458e1bceff01be4208267aae50b4e55fdd0800c\",\"dweb:/ipfs/QmXLDf5A6q5vEuGJ95ef5V6qjGG9qPyT2PH7vstZYjyxRc\"]},\"lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0xf0037f2cb58e5353cc8b5212cfb6b6798a25fe79d67c1f0709f4d092643aa135\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0a07c754d1fb35fa45181454ee590547fb8f441b03629fde75cec31d1c466cae\",\"dweb:/ipfs/QmR2YA4jeCQkZbFMGoKJyt9NPmDF4Mf646kV4CVCZyYmHY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c\",\"dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract ISlasher",
              "name": "_slasher",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDetailsModified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "operatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerForceUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "oldWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalMigrated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKER_DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateCurrentStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDelegationApprovalDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_stakerNonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "middlewareTimesIndex",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "uint256[]",
              "name": "middlewareTimesIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "stakerSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApproverSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earningsReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDelegatableShares",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawalDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minWithdrawalDelayBlocks",
              "type": "uint256"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "_strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_withdrawalDelayBlocks",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
              "name": "withdrawalsToMigrate",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateQueuedWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOperatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorDetails",
          "outputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
              "name": "queuedWithdrawalParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "registeringOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "withdrawalDelayBlocks",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyWithdrawalDelayBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerOptOutWindowBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "params": {
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "params": {
              "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
              "approverSalt": "A unique and single use value associated with the approver signature.",
              "expiry": "Time after which the approver's signature becomes invalid",
              "operator": "The account receiving delegated stake",
              "staker": "The account delegating their stake"
            }
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "params": {
              "_stakerNonce": "The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`",
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "details": "middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.",
            "params": {
              "middlewareTimesIndex": "is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array",
              "receiveAsTokens": "If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)",
              "withdrawal": "The Withdrawal to complete."
            }
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "details": "See `completeQueuedWithdrawal` for relevant dev tags",
            "params": {
              "middlewareTimesIndexes": "One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.",
              "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
              "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
              "withdrawals": "The Withdrawals to complete."
            }
          },
          "constructor": {
            "details": "Initializes the immutable addresses of the strategy mananger and slasher."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to decrease.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to decrease the delegated shares."
            }
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "details": "The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "A unique single use value tied to an individual signature.",
              "approverSignatureAndExpiry": "Verifies the operator approves of this delegation",
              "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
            }
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "details": "If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.",
              "approverSignatureAndExpiry": "is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:",
              "operator": "The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.",
              "staker": "The account delegating stake to an `operator` account",
              "stakerSignatureAndExpiry": "Signed data from the staker authorizing delegating stake to an operator"
            }
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."
          },
          "getDelegatableShares(address)": {
            "details": "Returns two empty arrays in the case that the Staker has no actively-delegateable shares."
          },
          "getWithdrawalDelay(address[])": {
            "params": {
              "strategies": "The strategies to check withdrawal delays for"
            }
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to increase.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to increase the delegated shares."
            }
          },
          "initialize(address,address,uint256,uint256,address[],uint256[])": {
            "details": "Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here"
          },
          "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
            "details": "This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "details": "The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).",
            "params": {
              "newOperatorDetails": "is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerAsOperator((address,address,uint32),string)": {
            "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator.",
              "registeringOperatorDetails": "is the `OperatorDetails` for the operator."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
            "params": {
              "strategies": "The strategies to set the minimum withdrawal delay blocks for",
              "withdrawalDelayBlocks": "The minimum withdrawal delay blocks to set for each strategy"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateOperatorMetadataURI(string)": {
            "params": {
              "metadataURI": "The URI for metadata associated with an operator"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "STAKER_DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `StakerDelegation` struct used by the contract"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "notice": "Calculates the digestHash for a `staker` to sign to delegate to an `operator`"
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "notice": "Calculates the digest hash to be signed and used in the `delegateToBySignature` function"
          },
          "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
            "notice": "Returns the keccak256 hash of `withdrawal`."
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "notice": "Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "notice": "Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"
          },
          "cumulativeWithdrawalsQueued(address)": {
            "notice": "Mapping: staker => cumulative number of queued withdrawals they have ever initiated."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "notice": "Decreases a staker's delegated share balance in a strategy."
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "notice": "Caller delegates their stake to an operator."
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "notice": "Caller delegates a staker's stake to an operator with valid signatures from both parties."
          },
          "delegatedTo(address)": {
            "notice": "Mapping: staker => operator whom the staker is currently delegated to."
          },
          "delegationApprover(address)": {
            "notice": "Returns the delegationApprover account for an operator"
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "notice": "Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."
          },
          "domainSeparator()": {
            "notice": "Getter function for the current EIP-712 domain separator for this contract."
          },
          "eigenPodManager()": {
            "notice": "The EigenPodManager contract for EigenLayer"
          },
          "getDelegatableShares(address)": {
            "notice": "Returns the number of actively-delegatable shares a staker has across all strategies."
          },
          "getOperatorShares(address,address[])": {
            "notice": "Given array of strategies, returns array of shares for the operator"
          },
          "getWithdrawalDelay(address[])": {
            "notice": "Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases a staker's delegated share balance in a strategy."
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns true is an operator has previously registered for delegation."
          },
          "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
            "notice": "Migrates an array of queued withdrawals from the StrategyManager contract to this contract."
          },
          "minWithdrawalDelayBlocks()": {
            "notice": "Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays."
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "notice": "Updates an operator's stored `OperatorDetails`."
          },
          "operatorDetails(address)": {
            "notice": "Returns the OperatorDetails struct associated with an `operator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "pendingWithdrawals(bytes32)": {
            "notice": "Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "notice": "Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
          },
          "registerAsOperator((address,address,uint32),string)": {
            "notice": "Registers the caller as an operator in EigenLayer."
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
            "notice": "Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"
          },
          "slasher()": {
            "notice": "The Slasher contract for EigenLayer"
          },
          "stakerNonce(address)": {
            "notice": "Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked."
          },
          "stakerOptOutWindowBlocks(address)": {
            "notice": "Returns the stakerOptOutWindowBlocks for an operator"
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "strategyWithdrawalDelayBlocks(address)": {
            "notice": "Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
          },
          "undelegate(address)": {
            "notice": "Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateOperatorMetadataURI(string)": {
            "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol": "DelegationManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol": {
        "keccak256": "0x56dfd54efe298df8100738e5f57682fd9cb068a348aca8fddb1c7a2148fdc957",
        "urls": [
          "bzz-raw://bdf1c7c8687d3e81b89b8dcd2458e1bceff01be4208267aae50b4e55fdd0800c",
          "dweb:/ipfs/QmXLDf5A6q5vEuGJ95ef5V6qjGG9qPyT2PH7vstZYjyxRc"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol": {
        "keccak256": "0xf0037f2cb58e5353cc8b5212cfb6b6798a25fe79d67c1f0709f4d092643aa135",
        "urls": [
          "bzz-raw://0a07c754d1fb35fa45181454ee590547fb8f441b03629fde75cec31d1c466cae",
          "dweb:/ipfs/QmR2YA4jeCQkZbFMGoKJyt9NPmDF4Mf646kV4CVCZyYmHY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol": {
        "keccak256": "0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec",
        "urls": [
          "bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c",
          "dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol",
    "id": 4908,
    "exportedSymbols": {
      "Address": [
        60436
      ],
      "AddressUpgradeable": [
        57600
      ],
      "BeaconChainProofs": [
        9143
      ],
      "ContextUpgradeable": [
        57642
      ],
      "DelegationManager": [
        4907
      ],
      "DelegationManagerStorage": [
        5036
      ],
      "ECDSA": [
        61262
      ],
      "EIP1271SignatureUtils": [
        9528
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC1271": [
        58273
      ],
      "IERC20": [
        59726
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Initializable": [
        57298
      ],
      "Merkle": [
        9899
      ],
      "OwnableUpgradeable": [
        57147
      ],
      "Pausable": [
        10782
      ],
      "ReentrancyGuardUpgradeable": [
        57357
      ],
      "Strings": [
        60855
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:49681:3",
    "nodes": [
      {
        "id": 2666,
        "nodeType": "PragmaDirective",
        "src": "37:24:3",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 2667,
        "nodeType": "ImportDirective",
        "src": "63:72:3",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 57299,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2668,
        "nodeType": "ImportDirective",
        "src": "136:72:3",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 57148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2669,
        "nodeType": "ImportDirective",
        "src": "209:82:3",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 57358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2670,
        "nodeType": "ImportDirective",
        "src": "292:37:3",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 10783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2671,
        "nodeType": "ImportDirective",
        "src": "330:48:3",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol",
        "file": "../libraries/EIP1271SignatureUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 9529,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2672,
        "nodeType": "ImportDirective",
        "src": "379:40:3",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol",
        "file": "./DelegationManagerStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4908,
        "sourceUnit": 5037,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4907,
        "nodeType": "ContractDefinition",
        "src": "1137:48580:3",
        "nodes": [
          {
            "id": 2686,
            "nodeType": "VariableDeclaration",
            "src": "1335:49:3",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_NEW_DELEGATION",
            "nameLocation": "1359:21:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2684,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1335:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1383:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 2689,
            "nodeType": "VariableDeclaration",
            "src": "1464:57:3",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_ENTER_WITHDRAWAL_QUEUE",
            "nameLocation": "1488:29:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2687,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1464:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2688,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1520:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 2692,
            "nodeType": "VariableDeclaration",
            "src": "1609:56:3",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_EXIT_WITHDRAWAL_QUEUE",
            "nameLocation": "1633:28:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2690,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1609:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 2691,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1664:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "id": 2694,
            "nodeType": "VariableDeclaration",
            "src": "1728:44:3",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "ORIGINAL_CHAIN_ID",
            "nameLocation": "1755:17:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2693,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1728:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2700,
            "nodeType": "VariableDeclaration",
            "src": "1885:74:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "4fc40b61",
            "mutability": "constant",
            "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
            "nameLocation": "1909:32:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2695,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1885:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1296000_by_1",
                "typeString": "int_const 1296000"
              },
              "id": 2699,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "hexValue": "313830",
                    "id": 2696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1945:8:3",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_15552000_by_1",
                      "typeString": "int_const 15552000"
                    },
                    "value": "180"
                  }
                ],
                "id": 2697,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1944:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_15552000_by_1",
                  "typeString": "int_const 15552000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "3132",
                "id": 2698,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1957:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_12_by_1",
                  "typeString": "int_const 12"
                },
                "value": "12"
              },
              "src": "1944:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1296000_by_1",
                "typeString": "int_const 1296000"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2707,
            "nodeType": "VariableDeclaration",
            "src": "2027:104:3",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 2701,
              "nodeType": "StructuredDocumentation",
              "src": "1966:56:3",
              "text": "@notice Canonical, virtual beacon chain ETH strategy"
            },
            "functionSelector": "9104c319",
            "mutability": "constant",
            "name": "beaconChainETHStrategy",
            "nameLocation": "2053:22:3",
            "scope": 4907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStrategy_$8135",
              "typeString": "contract IStrategy"
            },
            "typeName": {
              "id": 2703,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2702,
                "name": "IStrategy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8135,
                "src": "2027:9:3"
              },
              "referencedDeclaration": 8135,
              "src": "2027:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStrategy_$8135",
                "typeString": "contract IStrategy"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862656143306565456565656545456545654545454565654545654565656545656545454245614330",
                  "id": 2705,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2088:42:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2704,
                "name": "IStrategy",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 8135,
                "src": "2078:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IStrategy_$8135_$",
                  "typeString": "type(contract IStrategy)"
                }
              },
              "id": 2706,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2078:53:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStrategy_$8135",
                "typeString": "contract IStrategy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2730,
            "nodeType": "ModifierDefinition",
            "src": "2274:258:3",
            "nodes": [],
            "body": {
              "id": 2729,
              "nodeType": "Block",
              "src": "2322:210:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2710,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2353:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2353:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2714,
                                "name": "strategyManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4941,
                                "src": "2375:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                  "typeString": "contract IStrategyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                  "typeString": "contract IStrategyManager"
                                }
                              ],
                              "id": 2713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2367:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2712,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2367:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2367:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2353:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2717,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2395:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2395:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2721,
                                "name": "eigenPodManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4949,
                                "src": "2417:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                                  "typeString": "contract IEigenPodManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                                  "typeString": "contract IEigenPodManager"
                                }
                              ],
                              "id": 2720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2409:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2719,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2409:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2409:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2395:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2353:80:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d616e616765724f72456967656e506f644d616e61676572",
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2447:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080070fa7d2fd77c7dcc154a4661632f706f54acd8ac2c490089c6952db343a6",
                          "typeString": "literal_string \"DelegationManager: onlyStrategyManagerOrEigenPodManager\""
                        },
                        "value": "DelegationManager: onlyStrategyManagerOrEigenPodManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080070fa7d2fd77c7dcc154a4661632f706f54acd8ac2c490089c6952db343a6",
                          "typeString": "literal_string \"DelegationManager: onlyStrategyManagerOrEigenPodManager\""
                        }
                      ],
                      "id": 2709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2332:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:182:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:182:3"
                },
                {
                  "id": 2728,
                  "nodeType": "PlaceholderStatement",
                  "src": "2524:1:3"
                }
              ]
            },
            "name": "onlyStrategyManagerOrEigenPodManager",
            "nameLocation": "2283:36:3",
            "parameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:2:3"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2757,
            "nodeType": "FunctionDefinition",
            "src": "2862:284:3",
            "nodes": [],
            "body": {
              "id": 2756,
              "nodeType": "Block",
              "src": "3064:82:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2748,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57297,
                      "src": "3074:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3074:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "3074:22:3"
                },
                {
                  "expression": {
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2751,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "3106:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2752,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3126:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "3126:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3106:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2755,
                  "nodeType": "ExpressionStatement",
                  "src": "3106:33:3"
                }
              ]
            },
            "documentation": {
              "id": 2731,
              "nodeType": "StructuredDocumentation",
              "src": "2760:97:3",
              "text": " @dev Initializes the immutable addresses of the strategy mananger and slasher."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2743,
                    "name": "_strategyManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2734,
                    "src": "3018:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  {
                    "id": 2744,
                    "name": "_slasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2737,
                    "src": "3036:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  {
                    "id": 2745,
                    "name": "_eigenPodManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2740,
                    "src": "3046:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                      "typeString": "contract IEigenPodManager"
                    }
                  }
                ],
                "id": 2746,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2742,
                  "name": "DelegationManagerStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5036,
                  "src": "2993:24:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2993:70:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "mutability": "mutable",
                  "name": "_strategyManager",
                  "nameLocation": "2900:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2757,
                  "src": "2883:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                    "typeString": "contract IStrategyManager"
                  },
                  "typeName": {
                    "id": 2733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2732,
                      "name": "IStrategyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8383,
                      "src": "2883:16:3"
                    },
                    "referencedDeclaration": 8383,
                    "src": "2883:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "_slasher",
                  "nameLocation": "2935:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2757,
                  "src": "2926:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$8033",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 2736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2735,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8033,
                      "src": "2926:8:3"
                    },
                    "referencedDeclaration": 8033,
                    "src": "2926:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2740,
                  "mutability": "mutable",
                  "name": "_eigenPodManager",
                  "nameLocation": "2970:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2757,
                  "src": "2953:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                    "typeString": "contract IEigenPodManager"
                  },
                  "typeName": {
                    "id": 2739,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2738,
                      "name": "IEigenPodManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7676,
                      "src": "2953:16:3"
                    },
                    "referencedDeclaration": 7676,
                    "src": "2953:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2873:119:3"
            },
            "returnParameters": {
              "id": 2747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3064:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2803,
            "nodeType": "FunctionDefinition",
            "src": "3318:614:3",
            "nodes": [],
            "body": {
              "id": 2802,
              "nodeType": "Block",
              "src": "3609:323:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2780,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2763,
                        "src": "3637:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 2781,
                        "name": "initialPausedStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2765,
                        "src": "3654:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2779,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10611,
                      "src": "3619:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7778_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2783,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:55:3"
                },
                {
                  "expression": {
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2784,
                      "name": "_DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4937,
                      "src": "3684:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2785,
                        "name": "_calculateDomainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4906,
                        "src": "3704:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view returns (bytes32)"
                        }
                      },
                      "id": 2786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3704:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3684:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2788,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:47:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2790,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2760,
                        "src": "3760:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2789,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57141,
                      "src": "3741:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2792,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2794,
                        "name": "_minWithdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2767,
                        "src": "3819:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2793,
                      "name": "_initializeMinWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "3783:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2796,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2798,
                        "name": "_strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2771,
                        "src": "3889:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      {
                        "id": 2799,
                        "name": "_withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "3902:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 2797,
                      "name": "_setStrategyWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4367,
                      "src": "3855:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IStrategy[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 2800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2801,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:70:3"
                }
              ]
            },
            "documentation": {
              "id": 2758,
              "nodeType": "StructuredDocumentation",
              "src": "3152:161:3",
              "text": " @dev Initializes the addresses of the initial owner, pauser registry, and paused status.\n minWithdrawalDelayBlocks is set only once here"
            },
            "functionSelector": "22bf40e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2776,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57218,
                  "src": "3597:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3597:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "3327:10:3",
            "parameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2760,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "3355:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3347:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2763,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "3393:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3377:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 2762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2761,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7778,
                      "src": "3377:15:3"
                    },
                    "referencedDeclaration": 7778,
                    "src": "3377:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2765,
                  "mutability": "mutable",
                  "name": "initialPausedStatus",
                  "nameLocation": "3426:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3418:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2767,
                  "mutability": "mutable",
                  "name": "_minWithdrawalDelayBlocks",
                  "nameLocation": "3463:25:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3455:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2771,
                  "mutability": "mutable",
                  "name": "_strategies",
                  "nameLocation": "3519:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3498:32:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2769,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2768,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "3498:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "3498:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 2770,
                    "nodeType": "ArrayTypeName",
                    "src": "3498:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "_withdrawalDelayBlocks",
                  "nameLocation": "3559:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "3540:41:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2772,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3540:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2773,
                    "nodeType": "ArrayTypeName",
                    "src": "3540:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:250:3"
            },
            "returnParameters": {
              "id": 2778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2861,
            "nodeType": "FunctionDefinition",
            "src": "4821:756:3",
            "nodes": [],
            "body": {
              "id": 2860,
              "nodeType": "Block",
              "src": "4962:615:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2813,
                              "name": "_operatorDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4966,
                              "src": "4993:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                                "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                              }
                            },
                            "id": 2816,
                            "indexExpression": {
                              "expression": {
                                "id": 2814,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5010:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5010:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4993:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                              "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                            }
                          },
                          "id": 2817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "earningsReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6606,
                          "src": "4993:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5050:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5042:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2818,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5042:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5042:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4993:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e726567697374657241734f70657261746f723a206f70657261746f722068617320616c72656164792072656769737465726564",
                        "id": 2823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5066:71:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e2059ac76a370dd4adbdaf2f322eb2dcccc6980874feff4c3820ee15a3433d3",
                          "typeString": "literal_string \"DelegationManager.registerAsOperator: operator has already registered\""
                        },
                        "value": "DelegationManager.registerAsOperator: operator has already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e2059ac76a370dd4adbdaf2f322eb2dcccc6980874feff4c3820ee15a3433d3",
                          "typeString": "literal_string \"DelegationManager.registerAsOperator: operator has already registered\""
                        }
                      ],
                      "id": 2812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4972:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4972:175:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2825,
                  "nodeType": "ExpressionStatement",
                  "src": "4972:175:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2827,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5177:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5177:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2829,
                        "name": "registeringOperatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "5189:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      ],
                      "id": 2826,
                      "name": "_setOperatorDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3607,
                      "src": "5157:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OperatorDetails_$6613_calldata_ptr_$returns$__$",
                        "typeString": "function (address,struct IDelegationManager.OperatorDetails calldata)"
                      }
                    },
                    "id": 2830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5157:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2831,
                  "nodeType": "ExpressionStatement",
                  "src": "5157:59:3"
                },
                {
                  "assignments": [
                    2834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2834,
                      "mutability": "mutable",
                      "name": "emptySignatureAndExpiry",
                      "nameLocation": "5253:23:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2860,
                      "src": "5226:50:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                        "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                      },
                      "typeName": {
                        "id": 2833,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2832,
                          "name": "SignatureWithExpiry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7786,
                          "src": "5226:19:3"
                        },
                        "referencedDeclaration": 7786,
                        "src": "5226:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2835,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5226:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2837,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5348:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5348:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2839,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5360:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5360:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2841,
                        "name": "emptySignatureAndExpiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2834,
                        "src": "5372:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5405:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5397:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 2842,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5397:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5397:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2836,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3759,
                      "src": "5338:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_SignatureWithExpiry_$7786_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureUtils.SignatureWithExpiry memory,bytes32)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5338:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:70:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2849,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5465:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5465:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2851,
                        "name": "registeringOperatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "5477:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      ],
                      "id": 2848,
                      "name": "OperatorRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6666,
                      "src": "5446:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_OperatorDetails_$6613_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct IDelegationManager.OperatorDetails memory)"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5446:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "EmitStatement",
                  "src": "5441:63:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5546:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5546:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2857,
                        "name": "metadataURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2809,
                        "src": "5558:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 2854,
                      "name": "OperatorMetadataURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6681,
                      "src": "5519:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5519:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2859,
                  "nodeType": "EmitStatement",
                  "src": "5514:56:3"
                }
              ]
            },
            "baseFunctions": [
              6772
            ],
            "documentation": {
              "id": 2804,
              "nodeType": "StructuredDocumentation",
              "src": "4157:659:3",
              "text": " @notice Registers the caller as an operator in EigenLayer.\n @param registeringOperatorDetails is the `OperatorDetails` for the operator.\n @param metadataURI is a URI for the operator's metadata, i.e. a link providing more details on the operator.\n @dev Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".\n @dev This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event"
            },
            "functionSelector": "0f589e59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsOperator",
            "nameLocation": "4830:18:3",
            "parameters": {
              "id": 2810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2807,
                  "mutability": "mutable",
                  "name": "registeringOperatorDetails",
                  "nameLocation": "4883:26:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "4858:51:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 2806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2805,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "4858:15:3"
                    },
                    "referencedDeclaration": 6613,
                    "src": "4858:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2809,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "4935:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "4919:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4848:104:3"
            },
            "returnParameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4962:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2883,
            "nodeType": "FunctionDefinition",
            "src": "5989:265:3",
            "nodes": [],
            "body": {
              "id": 2882,
              "nodeType": "Block",
              "src": "6074:180:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2870,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6103:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6103:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2869,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4425,
                          "src": "6092:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6092:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7244657461696c733a2063616c6c6572206d75737420626520616e206f70657261746f72",
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6116:69:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f31928fbc9ee40ec45ab8d30c573a236362e4d1863fe39097089b39aac3a4751",
                          "typeString": "literal_string \"DelegationManager.modifyOperatorDetails: caller must be an operator\""
                        },
                        "value": "DelegationManager.modifyOperatorDetails: caller must be an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f31928fbc9ee40ec45ab8d30c573a236362e4d1863fe39097089b39aac3a4751",
                          "typeString": "literal_string \"DelegationManager.modifyOperatorDetails: caller must be an operator\""
                        }
                      ],
                      "id": 2868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6084:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6084:102:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2875,
                  "nodeType": "ExpressionStatement",
                  "src": "6084:102:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2877,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6216:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6216:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2879,
                        "name": "newOperatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2865,
                        "src": "6228:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      ],
                      "id": 2876,
                      "name": "_setOperatorDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3607,
                      "src": "6196:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_OperatorDetails_$6613_calldata_ptr_$returns$__$",
                        "typeString": "function (address,struct IDelegationManager.OperatorDetails calldata)"
                      }
                    },
                    "id": 2880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6196:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2881,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:51:3"
                }
              ]
            },
            "baseFunctions": [
              6779
            ],
            "documentation": {
              "id": 2862,
              "nodeType": "StructuredDocumentation",
              "src": "5583:401:3",
              "text": " @notice Updates an operator's stored `OperatorDetails`.\n @param newOperatorDetails is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\n @dev The caller must have previously registered as an operator in EigenLayer.\n @dev This function will revert if the caller attempts to set their `earningsReceiver` to address(0)."
            },
            "functionSelector": "f16172b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modifyOperatorDetails",
            "nameLocation": "5998:21:3",
            "parameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "newOperatorDetails",
                  "nameLocation": "6045:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2883,
                  "src": "6020:43:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 2864,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2863,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "6020:15:3"
                    },
                    "referencedDeclaration": 6613,
                    "src": "6020:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:45:3"
            },
            "returnParameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6074:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2904,
            "nodeType": "FunctionDefinition",
            "src": "6474:262:3",
            "nodes": [],
            "body": {
              "id": 2903,
              "nodeType": "Block",
              "src": "6547:189:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2891,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6576:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6576:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2890,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4425,
                          "src": "6565:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6565:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e7570646174654f70657261746f724d657461646174615552493a2063616c6c6572206d75737420626520616e206f70657261746f72",
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6589:73:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88d94c2f8d35526aa53ddceed8403eb324aa2bc2462a7725527aa353c574dba3",
                          "typeString": "literal_string \"DelegationManager.updateOperatorMetadataURI: caller must be an operator\""
                        },
                        "value": "DelegationManager.updateOperatorMetadataURI: caller must be an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88d94c2f8d35526aa53ddceed8403eb324aa2bc2462a7725527aa353c574dba3",
                          "typeString": "literal_string \"DelegationManager.updateOperatorMetadataURI: caller must be an operator\""
                        }
                      ],
                      "id": 2889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6557:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6557:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2896,
                  "nodeType": "ExpressionStatement",
                  "src": "6557:106:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2898,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6705:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6705:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2900,
                        "name": "metadataURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "6717:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 2897,
                      "name": "OperatorMetadataURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6681,
                      "src": "6678:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6678:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "EmitStatement",
                  "src": "6673:56:3"
                }
              ]
            },
            "baseFunctions": [
              6785
            ],
            "documentation": {
              "id": 2884,
              "nodeType": "StructuredDocumentation",
              "src": "6260:209:3",
              "text": " @notice Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\n @param metadataURI The URI for metadata associated with an operator"
            },
            "functionSelector": "99be81c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorMetadataURI",
            "nameLocation": "6483:25:3",
            "parameters": {
              "id": 2887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2886,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "6525:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "6509:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2885,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6509:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6508:29:3"
            },
            "returnParameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6547:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2924,
            "nodeType": "FunctionDefinition",
            "src": "7739:352:3",
            "nodes": [],
            "body": {
              "id": 2923,
              "nodeType": "Block",
              "src": "7893:198:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2916,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8021:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8021:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2918,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2907,
                        "src": "8033:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2919,
                        "name": "approverSignatureAndExpiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "8043:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        }
                      },
                      {
                        "id": 2920,
                        "name": "approverSalt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "8071:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2915,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3759,
                      "src": "8011:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_SignatureWithExpiry_$7786_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureUtils.SignatureWithExpiry memory,bytes32)"
                      }
                    },
                    "id": 2921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8011:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2922,
                  "nodeType": "ExpressionStatement",
                  "src": "8011:73:3"
                }
              ]
            },
            "baseFunctions": [
              6796
            ],
            "documentation": {
              "id": 2905,
              "nodeType": "StructuredDocumentation",
              "src": "6742:992:3",
              "text": " @notice Caller delegates their stake to an operator.\n @param operator The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param approverSignatureAndExpiry Verifies the operator approves of this delegation\n @param approverSalt A unique single use value tied to an individual signature.\n @dev The approverSignatureAndExpiry is used in the event that:\n          1) the operator's `delegationApprover` address is set to a non-zero value.\n                  AND\n          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator\n             or their delegationApprover is the `msg.sender`, then approval is assumed.\n @dev In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"
            },
            "functionSelector": "eea9064b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateTo",
            "nameLocation": "7748:10:3",
            "parameters": {
              "id": 2913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7776:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "7768:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7768:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2910,
                  "mutability": "mutable",
                  "name": "approverSignatureAndExpiry",
                  "nameLocation": "7821:26:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "7794:53:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 2909,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2908,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "7794:19:3"
                    },
                    "referencedDeclaration": 7786,
                    "src": "7794:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2912,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "7865:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "7857:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2911,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7857:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7758:125:3"
            },
            "returnParameters": {
              "id": 2914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7893:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2991,
            "nodeType": "FunctionDefinition",
            "src": "9692:1244:3",
            "nodes": [],
            "body": {
              "id": 2990,
              "nodeType": "Block",
              "src": "9942:994:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2941,
                            "name": "stakerSignatureAndExpiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "10011:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                              "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                            }
                          },
                          "id": 2942,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7785,
                          "src": "10011:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2943,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10046:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10046:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10011:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e64656c6567617465546f42795369676e61747572653a207374616b6572207369676e61747572652065787069726564",
                        "id": 2946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10075:67:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5233dfb91fa83693ac2645e4f55dbe63daa44c8d4dd12c8f8e2013d0de974b19",
                          "typeString": "literal_string \"DelegationManager.delegateToBySignature: staker signature expired\""
                        },
                        "value": "DelegationManager.delegateToBySignature: staker signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5233dfb91fa83693ac2645e4f55dbe63daa44c8d4dd12c8f8e2013d0de974b19",
                          "typeString": "literal_string \"DelegationManager.delegateToBySignature: staker signature expired\""
                        }
                      ],
                      "id": 2940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9990:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9990:162:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2948,
                  "nodeType": "ExpressionStatement",
                  "src": "9990:162:3"
                },
                {
                  "assignments": [
                    2950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2950,
                      "mutability": "mutable",
                      "name": "currentStakerNonce",
                      "nameLocation": "10241:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2990,
                      "src": "10233:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10233:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2954,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2951,
                      "name": "stakerNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "10262:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2953,
                    "indexExpression": {
                      "id": 2952,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2927,
                      "src": "10274:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10262:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10233:48:3"
                },
                {
                  "assignments": [
                    2956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2956,
                      "mutability": "mutable",
                      "name": "stakerDigestHash",
                      "nameLocation": "10299:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2990,
                      "src": "10291:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2955,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10291:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2964,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2958,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "10367:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2959,
                        "name": "currentStakerNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2950,
                        "src": "10387:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2960,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "10419:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2961,
                          "name": "stakerSignatureAndExpiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2932,
                          "src": "10441:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                            "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                          }
                        },
                        "id": 2962,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7785,
                        "src": "10441:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2957,
                      "name": "calculateStakerDelegationDigestHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4835,
                      "src": "10318:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,address,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 2963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10318:164:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10291:191:3"
                },
                {
                  "id": 2973,
                  "nodeType": "UncheckedBlock",
                  "src": "10492:79:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2965,
                            "name": "stakerNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4976,
                            "src": "10516:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2967,
                          "indexExpression": {
                            "id": 2966,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2927,
                            "src": "10528:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10516:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2968,
                            "name": "currentStakerNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2950,
                            "src": "10538:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10559:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10538:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10516:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2972,
                      "nodeType": "ExpressionStatement",
                      "src": "10516:44:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2977,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "10680:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2978,
                        "name": "stakerDigestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2956,
                        "src": "10688:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2979,
                          "name": "stakerSignatureAndExpiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2932,
                          "src": "10706:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                            "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                          }
                        },
                        "id": 2980,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7783,
                        "src": "10706:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2974,
                        "name": "EIP1271SignatureUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9528,
                        "src": "10635:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EIP1271SignatureUtils_$9528_$",
                          "typeString": "type(library EIP1271SignatureUtils)"
                        }
                      },
                      "id": 2976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkSignature_EIP1271",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9527,
                      "src": "10635:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) view"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10635:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "10635:106:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2984,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "10870:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2985,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "10878:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2986,
                        "name": "approverSignatureAndExpiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2935,
                        "src": "10888:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        }
                      },
                      {
                        "id": 2987,
                        "name": "approverSalt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2937,
                        "src": "10916:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                          "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2983,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3759,
                      "src": "10860:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_SignatureWithExpiry_$7786_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureUtils.SignatureWithExpiry memory,bytes32)"
                      }
                    },
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10860:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "10860:69:3"
                }
              ]
            },
            "baseFunctions": [
              6812
            ],
            "documentation": {
              "id": 2925,
              "nodeType": "StructuredDocumentation",
              "src": "8097:1590:3",
              "text": " @notice Caller delegates a staker's stake to an operator with valid signatures from both parties.\n @param staker The account delegating stake to an `operator` account\n @param operator The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param stakerSignatureAndExpiry Signed data from the staker authorizing delegating stake to an operator\n @param approverSignatureAndExpiry is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\n @param approverSalt Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\n @dev If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.\n @dev If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.\n @dev the operator's `delegationApprover` address is set to a non-zero value.\n @dev neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover\n is the `msg.sender`, then approval is assumed.\n @dev This function will revert if the current `block.timestamp` is equal to or exceeds the expiry\n @dev In the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"
            },
            "functionSelector": "7f548071",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateToBySignature",
            "nameLocation": "9701:21:3",
            "parameters": {
              "id": 2938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9740:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "9732:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9732:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9764:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "9756:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9756:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "stakerSignatureAndExpiry",
                  "nameLocation": "9809:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "9782:51:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 2931,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2930,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "9782:19:3"
                    },
                    "referencedDeclaration": 7786,
                    "src": "9782:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "approverSignatureAndExpiry",
                  "nameLocation": "9870:26:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "9843:53:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 2934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2933,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "9843:19:3"
                    },
                    "referencedDeclaration": 7786,
                    "src": "9843:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "9914:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "9906:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9906:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9722:210:3"
            },
            "returnParameters": {
              "id": 2939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9942:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3183,
            "nodeType": "FunctionDefinition",
            "src": "11261:2250:3",
            "nodes": [],
            "body": {
              "id": 3182,
              "nodeType": "Block",
              "src": "11398:2113:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3005,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2994,
                            "src": "11428:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3004,
                          "name": "isDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4405,
                          "src": "11416:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11416:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e756e64656c65676174653a207374616b6572206d7573742062652064656c65676174656420746f20756e64656c6567617465",
                        "id": 3007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11437:70:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28577d3f3fe79913f6000ec2caa6eaf8757b0f20a677637ddcc0a86dca34de8a",
                          "typeString": "literal_string \"DelegationManager.undelegate: staker must be delegated to undelegate\""
                        },
                        "value": "DelegationManager.undelegate: staker must be delegated to undelegate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28577d3f3fe79913f6000ec2caa6eaf8757b0f20a677637ddcc0a86dca34de8a",
                          "typeString": "literal_string \"DelegationManager.undelegate: staker must be delegated to undelegate\""
                        }
                      ],
                      "id": 3003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11408:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11408:100:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3009,
                  "nodeType": "ExpressionStatement",
                  "src": "11408:100:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11526:19:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3012,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2994,
                              "src": "11538:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3011,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4425,
                            "src": "11527:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11527:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f70657261746f72732063616e6e6f7420626520756e64656c656761746564",
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11547:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83fc42edd0f487efebc30eb128c60c24a446764dccd292794a18877dff156c07",
                          "typeString": "literal_string \"DelegationManager.undelegate: operators cannot be undelegated\""
                        },
                        "value": "DelegationManager.undelegate: operators cannot be undelegated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83fc42edd0f487efebc30eb128c60c24a446764dccd292794a18877dff156c07",
                          "typeString": "literal_string \"DelegationManager.undelegate: operators cannot be undelegated\""
                        }
                      ],
                      "id": 3010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11518:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11518:93:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3017,
                  "nodeType": "ExpressionStatement",
                  "src": "11518:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3019,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2994,
                          "src": "11629:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11647:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11639:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3020,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11639:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11639:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11629:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e756e64656c65676174653a2063616e6e6f7420756e64656c6567617465207a65726f2061646472657373",
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11651:62:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96154ca72f0e93c829d70850575039240a71f0485aa0e90911da0fb2fc17a537",
                          "typeString": "literal_string \"DelegationManager.undelegate: cannot undelegate zero address\""
                        },
                        "value": "DelegationManager.undelegate: cannot undelegate zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96154ca72f0e93c829d70850575039240a71f0485aa0e90911da0fb2fc17a537",
                          "typeString": "literal_string \"DelegationManager.undelegate: cannot undelegate zero address\""
                        }
                      ],
                      "id": 3018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11621:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11621:93:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3027,
                  "nodeType": "ExpressionStatement",
                  "src": "11621:93:3"
                },
                {
                  "assignments": [
                    3029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3029,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11732:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3182,
                      "src": "11724:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11724:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3033,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3030,
                      "name": "delegatedTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4971,
                      "src": "11743:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3032,
                    "indexExpression": {
                      "id": 3031,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2994,
                      "src": "11755:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11743:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11724:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3035,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11793:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11793:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3037,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2994,
                              "src": "11807:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11793:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3039,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11833:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11833:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3041,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3029,
                              "src": "11847:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11833:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11793:62:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3044,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11875:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11875:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3046,
                                "name": "_operatorDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4966,
                                "src": "11889:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                                  "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                                }
                              },
                              "id": 3048,
                              "indexExpression": {
                                "id": 3047,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3029,
                                "src": "11906:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11889:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                                "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                              }
                            },
                            "id": 3049,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegationApprover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6609,
                            "src": "11889:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11875:59:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11793:141:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e756e64656c65676174653a2063616c6c65722063616e6e6f7420756e64656c6567617465207374616b6572",
                        "id": 3052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11948:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3df6653d58392a0a9141d7f5166670591f95b6f87148d126cd3411c3ab0053ea",
                          "typeString": "literal_string \"DelegationManager.undelegate: caller cannot undelegate staker\""
                        },
                        "value": "DelegationManager.undelegate: caller cannot undelegate staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3df6653d58392a0a9141d7f5166670591f95b6f87148d126cd3411c3ab0053ea",
                          "typeString": "literal_string \"DelegationManager.undelegate: caller cannot undelegate staker\""
                        }
                      ],
                      "id": 3034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11772:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11772:249:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3054,
                  "nodeType": "ExpressionStatement",
                  "src": "11772:249:3"
                },
                {
                  "assignments": [
                    3059,
                    3062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3059,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "12218:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3182,
                      "src": "12199:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                        "typeString": "contract IStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3057,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3056,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8135,
                            "src": "12199:9:3"
                          },
                          "referencedDeclaration": 8135,
                          "src": "12199:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 3058,
                        "nodeType": "ArrayTypeName",
                        "src": "12199:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3062,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "12247:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3182,
                      "src": "12230:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12230:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3061,
                        "nodeType": "ArrayTypeName",
                        "src": "12230:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3066,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3064,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2994,
                        "src": "12278:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3063,
                      "name": "getDelegatableShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4703,
                      "src": "12257:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view returns (contract IStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12257:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12198:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3067,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12383:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12383:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3069,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2994,
                      "src": "12397:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12383:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3077,
                  "nodeType": "IfStatement",
                  "src": "12379:96:3",
                  "trueBody": {
                    "id": 3076,
                    "nodeType": "Block",
                    "src": "12405:70:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3072,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2994,
                              "src": "12447:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3073,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3029,
                              "src": "12455:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3071,
                            "name": "StakerForceUndelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6726,
                            "src": "12424:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 3074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12424:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3075,
                        "nodeType": "EmitStatement",
                        "src": "12419:45:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3079,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2994,
                        "src": "12541:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3080,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3029,
                        "src": "12549:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3078,
                      "name": "StakerUndelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6719,
                      "src": "12523:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12523:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3082,
                  "nodeType": "EmitStatement",
                  "src": "12518:40:3"
                },
                {
                  "expression": {
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3083,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "12568:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3085,
                      "indexExpression": {
                        "id": 3084,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2994,
                        "src": "12580:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12568:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12598:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12590:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12590:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12590:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12568:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "12568:32:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3092,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "12704:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 3093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12704:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12725:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12704:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3178,
                    "nodeType": "Block",
                    "src": "12793:679:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3105,
                            "name": "withdrawalRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "12807:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3109,
                                  "name": "strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "12839:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                    "typeString": "contract IStrategy[] memory"
                                  }
                                },
                                "id": 3110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12839:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "12825:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes32[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 3106,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12829:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 3107,
                                "nodeType": "ArrayTypeName",
                                "src": "12829:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                  "typeString": "bytes32[]"
                                }
                              }
                            },
                            "id": 3111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12825:32:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "src": "12807:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 3113,
                        "nodeType": "ExpressionStatement",
                        "src": "12807:50:3"
                      },
                      {
                        "body": {
                          "id": 3176,
                          "nodeType": "Block",
                          "src": "12919:543:3",
                          "statements": [
                            {
                              "assignments": [
                                3129
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3129,
                                  "mutability": "mutable",
                                  "name": "singleStrategy",
                                  "nameLocation": "12956:14:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3176,
                                  "src": "12937:33:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                    "typeString": "contract IStrategy[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3127,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 3126,
                                        "name": "IStrategy",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 8135,
                                        "src": "12937:9:3"
                                      },
                                      "referencedDeclaration": 8135,
                                      "src": "12937:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 3128,
                                    "nodeType": "ArrayTypeName",
                                    "src": "12937:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                                      "typeString": "contract IStrategy[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3136,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 3134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12989:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 3133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "12973:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (contract IStrategy[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3131,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 3130,
                                        "name": "IStrategy",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 8135,
                                        "src": "12977:9:3"
                                      },
                                      "referencedDeclaration": 8135,
                                      "src": "12977:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 3132,
                                    "nodeType": "ArrayTypeName",
                                    "src": "12977:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                                      "typeString": "contract IStrategy[]"
                                    }
                                  }
                                },
                                "id": 3135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12973:18:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12937:54:3"
                            },
                            {
                              "assignments": [
                                3141
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3141,
                                  "mutability": "mutable",
                                  "name": "singleShare",
                                  "nameLocation": "13026:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3176,
                                  "src": "13009:28:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3139,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13009:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3140,
                                    "nodeType": "ArrayTypeName",
                                    "src": "13009:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3147,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 3145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13054:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 3144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "13040:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (uint256[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 3142,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13044:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3143,
                                    "nodeType": "ArrayTypeName",
                                    "src": "13044:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  }
                                },
                                "id": 3146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13040:16:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13009:47:3"
                            },
                            {
                              "expression": {
                                "id": 3154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3148,
                                    "name": "singleStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3129,
                                    "src": "13074:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  "id": 3150,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3149,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13089:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13074:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3151,
                                    "name": "strategies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3059,
                                    "src": "13094:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  "id": 3153,
                                  "indexExpression": {
                                    "id": 3152,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3115,
                                    "src": "13105:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13094:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "13074:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 3155,
                              "nodeType": "ExpressionStatement",
                              "src": "13074:33:3"
                            },
                            {
                              "expression": {
                                "id": 3162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3156,
                                    "name": "singleShare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3141,
                                    "src": "13125:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3158,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13137:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13125:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 3159,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3062,
                                    "src": "13142:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3161,
                                  "indexExpression": {
                                    "id": 3160,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3115,
                                    "src": "13149:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13142:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13125:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3163,
                              "nodeType": "ExpressionStatement",
                              "src": "13125:26:3"
                            },
                            {
                              "expression": {
                                "id": 3174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3164,
                                    "name": "withdrawalRoots",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3001,
                                    "src": "13170:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 3166,
                                  "indexExpression": {
                                    "id": 3165,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3115,
                                    "src": "13186:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13170:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3168,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2994,
                                      "src": "13253:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 3169,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3029,
                                      "src": "13291:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 3170,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2994,
                                      "src": "13333:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 3171,
                                      "name": "singleStrategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3129,
                                      "src": "13373:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                        "typeString": "contract IStrategy[] memory"
                                      }
                                    },
                                    {
                                      "id": 3172,
                                      "name": "singleShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3141,
                                      "src": "13417:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                        "typeString": "contract IStrategy[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    ],
                                    "id": 3167,
                                    "name": "_removeSharesAndQueueWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4229,
                                    "src": "13191:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (address,address,address,contract IStrategy[] memory,uint256[] memory) returns (bytes32)"
                                    }
                                  },
                                  "id": 3173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [
                                    "staker",
                                    "operator",
                                    "withdrawer",
                                    "strategies",
                                    "shares"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "13191:256:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "13170:277:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 3175,
                              "nodeType": "ExpressionStatement",
                              "src": "13170:277:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3118,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "12891:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3119,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3059,
                              "src": "12895:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            "id": 3120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12895:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12891:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3177,
                        "initializationExpression": {
                          "assignments": [
                            3115
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3115,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12884:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 3177,
                              "src": "12876:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3114,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12876:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3117,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12888:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12876:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12914:3:3",
                            "subExpression": {
                              "id": 3122,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3115,
                              "src": "12914:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3124,
                          "nodeType": "ExpressionStatement",
                          "src": "12914:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "12871:591:3"
                      }
                    ]
                  },
                  "id": 3179,
                  "nodeType": "IfStatement",
                  "src": "12700:772:3",
                  "trueBody": {
                    "id": 3104,
                    "nodeType": "Block",
                    "src": "12728:59:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3096,
                            "name": "withdrawalRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "12742:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12774:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "12760:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes32[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 3097,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12764:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 3098,
                                "nodeType": "ArrayTypeName",
                                "src": "12764:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                  "typeString": "bytes32[]"
                                }
                              }
                            },
                            "id": 3101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12760:16:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "src": "12742:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 3103,
                        "nodeType": "ExpressionStatement",
                        "src": "12742:34:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3180,
                    "name": "withdrawalRoots",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3001,
                    "src": "13489:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 3002,
                  "id": 3181,
                  "nodeType": "Return",
                  "src": "13482:22:3"
                }
              ]
            },
            "baseFunctions": [
              6821
            ],
            "documentation": {
              "id": 2992,
              "nodeType": "StructuredDocumentation",
              "src": "10942:314:3",
              "text": " Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate\n a staker from their operator. Undelegation immediately removes ALL active shares/strategies from\n both the staker and operator, and places the shares and strategies in the withdrawal queue"
            },
            "functionSelector": "da8be864",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2997,
                    "name": "PAUSED_ENTER_WITHDRAWAL_QUEUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2689,
                    "src": "11324:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2998,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2996,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "11306:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "11306:48:3"
              }
            ],
            "name": "undelegate",
            "nameLocation": "11270:10:3",
            "parameters": {
              "id": 2995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2994,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "11289:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3183,
                  "src": "11281:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11281:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11280:16:3"
            },
            "returnParameters": {
              "id": 3002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3001,
                  "mutability": "mutable",
                  "name": "withdrawalRoots",
                  "nameLocation": "11381:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3183,
                  "src": "11364:32:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2999,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11364:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3000,
                    "nodeType": "ArrayTypeName",
                    "src": "11364:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11363:34:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3282,
            "nodeType": "FunctionDefinition",
            "src": "13868:1412:3",
            "nodes": [],
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "14051:1229:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3201,
                      "mutability": "mutable",
                      "name": "withdrawalRoots",
                      "nameLocation": "14078:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3281,
                      "src": "14061:32:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3199,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14061:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3200,
                        "nodeType": "ArrayTypeName",
                        "src": "14061:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3208,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3205,
                          "name": "queuedWithdrawalParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3188,
                          "src": "14110:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                          }
                        },
                        "id": 3206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "14110:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14096:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3202,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14100:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ArrayTypeName",
                        "src": "14100:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 3207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14096:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14061:79:3"
                },
                {
                  "assignments": [
                    3210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3210,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "14158:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3281,
                      "src": "14150:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3209,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14150:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3215,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3211,
                      "name": "delegatedTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4971,
                      "src": "14169:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3214,
                    "indexExpression": {
                      "expression": {
                        "id": 3212,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "14181:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14181:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14169:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14150:42:3"
                },
                {
                  "body": {
                    "id": 3277,
                    "nodeType": "Block",
                    "src": "14263:979:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3228,
                                      "name": "queuedWithdrawalParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3188,
                                      "src": "14285:22:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                      }
                                    },
                                    "id": 3230,
                                    "indexExpression": {
                                      "id": 3229,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3217,
                                      "src": "14308:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14285:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                    }
                                  },
                                  "id": 3231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strategies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6653,
                                  "src": "14285:36:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                    "typeString": "contract IStrategy[] calldata"
                                  }
                                },
                                "id": 3232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14285:43:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3233,
                                      "name": "queuedWithdrawalParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3188,
                                      "src": "14332:22:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                      }
                                    },
                                    "id": 3235,
                                    "indexExpression": {
                                      "id": 3234,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3217,
                                      "src": "14355:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14332:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                    }
                                  },
                                  "id": 3236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6656,
                                  "src": "14332:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 3237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14332:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14285:86:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e71756575655769746864726177616c3a20696e707574206c656e677468206d69736d61746368",
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14373:58:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62679b42678575843081ad1bb76c62728ea6cda195a36aab5efe856db7692ed0",
                                "typeString": "literal_string \"DelegationManager.queueWithdrawal: input length mismatch\""
                              },
                              "value": "DelegationManager.queueWithdrawal: input length mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62679b42678575843081ad1bb76c62728ea6cda195a36aab5efe856db7692ed0",
                                "typeString": "literal_string \"DelegationManager.queueWithdrawal: input length mismatch\""
                              }
                            ],
                            "id": 3227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14277:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14277:155:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3241,
                        "nodeType": "ExpressionStatement",
                        "src": "14277:155:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3243,
                                    "name": "queuedWithdrawalParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3188,
                                    "src": "14454:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                    }
                                  },
                                  "id": 3245,
                                  "indexExpression": {
                                    "id": 3244,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3217,
                                    "src": "14477:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14454:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                  }
                                },
                                "id": 3246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6658,
                                "src": "14454:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3249,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14502:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14494:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3247,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14494:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14494:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14454:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e71756575655769746864726177616c3a206d7573742070726f766964652076616c6964207769746864726177616c2061646472657373",
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14506:74:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_49ba6444f4222a1985d340585f745507e82fd7fb8c161c83913f4b4ccd47629b",
                                "typeString": "literal_string \"DelegationManager.queueWithdrawal: must provide valid withdrawal address\""
                              },
                              "value": "DelegationManager.queueWithdrawal: must provide valid withdrawal address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_49ba6444f4222a1985d340585f745507e82fd7fb8c161c83913f4b4ccd47629b",
                                "typeString": "literal_string \"DelegationManager.queueWithdrawal: must provide valid withdrawal address\""
                              }
                            ],
                            "id": 3242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14446:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14446:135:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3254,
                        "nodeType": "ExpressionStatement",
                        "src": "14446:135:3"
                      },
                      {
                        "expression": {
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3255,
                              "name": "withdrawalRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "14901:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 3257,
                            "indexExpression": {
                              "id": 3256,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3217,
                              "src": "14917:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14901:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3259,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14980:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14980:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3261,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3210,
                                "src": "15018:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3262,
                                    "name": "queuedWithdrawalParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3188,
                                    "src": "15056:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                    }
                                  },
                                  "id": 3264,
                                  "indexExpression": {
                                    "id": 3263,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3217,
                                    "src": "15079:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15056:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                  }
                                },
                                "id": 3265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6658,
                                "src": "15056:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3266,
                                    "name": "queuedWithdrawalParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3188,
                                    "src": "15122:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                    }
                                  },
                                  "id": 3268,
                                  "indexExpression": {
                                    "id": 3267,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3217,
                                    "src": "15145:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15122:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                  }
                                },
                                "id": 3269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "strategies",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6653,
                                "src": "15122:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3270,
                                    "name": "queuedWithdrawalParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3188,
                                    "src": "15184:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                                    }
                                  },
                                  "id": 3272,
                                  "indexExpression": {
                                    "id": 3271,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3217,
                                    "src": "15207:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15184:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr",
                                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata"
                                  }
                                },
                                "id": 3273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6656,
                                "src": "15184:32:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              ],
                              "id": 3258,
                              "name": "_removeSharesAndQueueWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4229,
                              "src": "14922:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (address,address,address,contract IStrategy[] memory,uint256[] memory) returns (bytes32)"
                              }
                            },
                            "id": 3274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [
                              "staker",
                              "operator",
                              "withdrawer",
                              "strategies",
                              "shares"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "14922:309:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14901:330:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3276,
                        "nodeType": "ExpressionStatement",
                        "src": "14901:330:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3217,
                      "src": "14223:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3221,
                        "name": "queuedWithdrawalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3188,
                        "src": "14227:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDelegationManager.QueuedWithdrawalParams calldata[] calldata"
                        }
                      },
                      "id": 3222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14227:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14223:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3278,
                  "initializationExpression": {
                    "assignments": [
                      3217
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3217,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14216:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3278,
                        "src": "14208:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14208:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3219,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14220:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14208:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14258:3:3",
                      "subExpression": {
                        "id": 3224,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3217,
                        "src": "14258:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3226,
                    "nodeType": "ExpressionStatement",
                    "src": "14258:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "14203:1039:3"
                },
                {
                  "expression": {
                    "id": 3279,
                    "name": "withdrawalRoots",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3201,
                    "src": "15258:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 3196,
                  "id": 3280,
                  "nodeType": "Return",
                  "src": "15251:22:3"
                }
              ]
            },
            "baseFunctions": [
              6832
            ],
            "documentation": {
              "id": 3184,
              "nodeType": "StructuredDocumentation",
              "src": "13517:346:3",
              "text": " Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed\n from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from\n their operator.\n All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
            },
            "functionSelector": "0dd8dd02",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3191,
                    "name": "PAUSED_ENTER_WITHDRAWAL_QUEUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2689,
                    "src": "13993:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3190,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "13975:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "13975:48:3"
              }
            ],
            "name": "queueWithdrawals",
            "nameLocation": "13877:16:3",
            "parameters": {
              "id": 3189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3188,
                  "mutability": "mutable",
                  "name": "queuedWithdrawalParams",
                  "nameLocation": "13937:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "13903:56:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3186,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3185,
                        "name": "QueuedWithdrawalParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6659,
                        "src": "13903:22:3"
                      },
                      "referencedDeclaration": 6659,
                      "src": "13903:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_storage_ptr",
                        "typeString": "struct IDelegationManager.QueuedWithdrawalParams"
                      }
                    },
                    "id": 3187,
                    "nodeType": "ArrayTypeName",
                    "src": "13903:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_storage_$dyn_storage_ptr",
                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13893:72:3"
            },
            "returnParameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "14033:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3193,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "14033:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3194,
                    "nodeType": "ArrayTypeName",
                    "src": "14033:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14032:18:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3310,
            "nodeType": "FunctionDefinition",
            "src": "16722:353:3",
            "nodes": [],
            "body": {
              "id": 3309,
              "nodeType": "Block",
              "src": "16974:101:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3303,
                        "name": "withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3286,
                        "src": "17010:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                        }
                      },
                      {
                        "id": 3304,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3290,
                        "src": "17022:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      {
                        "id": 3305,
                        "name": "middlewareTimesIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3292,
                        "src": "17030:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3306,
                        "name": "receiveAsTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3294,
                        "src": "17052:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3302,
                      "name": "_completeQueuedWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4011,
                      "src": "16984:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Withdrawal_$6649_calldata_ptr_$_t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct IDelegationManager.Withdrawal calldata,contract IERC20[] calldata,uint256,bool)"
                      }
                    },
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16984:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "16984:84:3"
                }
              ]
            },
            "baseFunctions": [
              6847
            ],
            "documentation": {
              "id": 3283,
              "nodeType": "StructuredDocumentation",
              "src": "15286:1431:3",
              "text": " @notice Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\n @param withdrawal The Withdrawal to complete.\n @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.\n This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\n @param middlewareTimesIndex is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n @param receiveAsTokens If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves\n and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies\n will simply be transferred to the caller directly.\n @dev middlewareTimesIndex is unused, but will be used in the Slasher eventually\n @dev beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that\n any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in\n any other strategies, which will be transferred to the withdrawer."
            },
            "functionSelector": "60d7faed",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3297,
                    "name": "PAUSED_EXIT_WITHDRAWAL_QUEUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2692,
                    "src": "16931:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3298,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3296,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "16913:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "16913:47:3"
              },
              {
                "id": 3300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3299,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57351,
                  "src": "16961:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "16961:12:3"
              }
            ],
            "name": "completeQueuedWithdrawal",
            "nameLocation": "16731:24:3",
            "parameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3286,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "16785:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3310,
                  "src": "16765:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 3285,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3284,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "16765:10:3"
                    },
                    "referencedDeclaration": 6649,
                    "src": "16765:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3290,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "16823:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3310,
                  "src": "16805:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3288,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3287,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59726,
                        "src": "16805:6:3"
                      },
                      "referencedDeclaration": 59726,
                      "src": "16805:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$59726",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3289,
                    "nodeType": "ArrayTypeName",
                    "src": "16805:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3292,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndex",
                  "nameLocation": "16847:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3310,
                  "src": "16839:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16839:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3294,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "16882:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3310,
                  "src": "16877:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16877:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16755:148:3"
            },
            "returnParameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16974:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3363,
            "nodeType": "FunctionDefinition",
            "src": "17809:471:3",
            "nodes": [],
            "body": {
              "id": 3362,
              "nodeType": "Block",
              "src": "18091:189:3",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 3360,
                    "nodeType": "Block",
                    "src": "18150:124:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3346,
                                "name": "withdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3315,
                                "src": "18190:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct IDelegationManager.Withdrawal calldata[] calldata"
                                }
                              },
                              "id": 3348,
                              "indexExpression": {
                                "id": 3347,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "18202:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18190:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3349,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "18206:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata[] calldata"
                                }
                              },
                              "id": 3351,
                              "indexExpression": {
                                "id": 3350,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "18213:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18206:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3352,
                                "name": "middlewareTimesIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3323,
                                "src": "18217:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 3354,
                              "indexExpression": {
                                "id": 3353,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "18240:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18217:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3355,
                                "name": "receiveAsTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3326,
                                "src": "18244:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                                  "typeString": "bool[] calldata"
                                }
                              },
                              "id": 3357,
                              "indexExpression": {
                                "id": 3356,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3335,
                                "src": "18260:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18244:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3345,
                            "name": "_completeQueuedWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4011,
                            "src": "18164:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Withdrawal_$6649_calldata_ptr_$_t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (struct IDelegationManager.Withdrawal calldata,contract IERC20[] calldata,uint256,bool)"
                            }
                          },
                          "id": 3358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18164:99:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3359,
                        "nodeType": "ExpressionStatement",
                        "src": "18164:99:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3338,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3335,
                      "src": "18121:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3339,
                        "name": "withdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3315,
                        "src": "18125:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal calldata[] calldata"
                        }
                      },
                      "id": 3340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18125:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18121:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3361,
                  "initializationExpression": {
                    "assignments": [
                      3335
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3335,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18114:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3361,
                        "src": "18106:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18106:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3337,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18118:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18106:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "18145:3:3",
                      "subExpression": {
                        "id": 3342,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3335,
                        "src": "18147:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3344,
                    "nodeType": "ExpressionStatement",
                    "src": "18145:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "18101:173:3"
                }
              ]
            },
            "baseFunctions": [
              6866
            ],
            "documentation": {
              "id": 3311,
              "nodeType": "StructuredDocumentation",
              "src": "17081:723:3",
              "text": " @notice Array-ified version of `completeQueuedWithdrawal`.\n Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\n @param withdrawals The Withdrawals to complete.\n @param tokens Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\n @param middlewareTimesIndexes One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\n @param receiveAsTokens Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\n @dev See `completeQueuedWithdrawal` for relevant dev tags"
            },
            "functionSelector": "33404396",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3329,
                    "name": "PAUSED_EXIT_WITHDRAWAL_QUEUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2692,
                    "src": "18048:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3328,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "18030:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "18030:47:3"
              },
              {
                "id": 3332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3331,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57351,
                  "src": "18078:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "18078:12:3"
              }
            ],
            "name": "completeQueuedWithdrawals",
            "nameLocation": "17818:25:3",
            "parameters": {
              "id": 3327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "withdrawals",
                  "nameLocation": "17875:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3363,
                  "src": "17853:33:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3313,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3312,
                        "name": "Withdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6649,
                        "src": "17853:10:3"
                      },
                      "referencedDeclaration": 6649,
                      "src": "17853:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                        "typeString": "struct IDelegationManager.Withdrawal"
                      }
                    },
                    "id": 3314,
                    "nodeType": "ArrayTypeName",
                    "src": "17853:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_storage_$dyn_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "17916:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3363,
                  "src": "17896:26:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 3317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3316,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59726,
                          "src": "17896:6:3"
                        },
                        "referencedDeclaration": 59726,
                        "src": "17896:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3318,
                      "nodeType": "ArrayTypeName",
                      "src": "17896:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_storage_ptr",
                        "typeString": "contract IERC20[]"
                      }
                    },
                    "id": 3319,
                    "nodeType": "ArrayTypeName",
                    "src": "17896:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$59726_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "contract IERC20[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndexes",
                  "nameLocation": "17951:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3363,
                  "src": "17932:41:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3321,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17932:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3322,
                    "nodeType": "ArrayTypeName",
                    "src": "17932:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "17999:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3363,
                  "src": "17983:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3324,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "17983:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3325,
                    "nodeType": "ArrayTypeName",
                    "src": "17983:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17843:177:3"
            },
            "returnParameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18091:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3472,
            "nodeType": "FunctionDefinition",
            "src": "18517:1978:3",
            "nodes": [],
            "body": {
              "id": 3471,
              "nodeType": "Block",
              "src": "18642:1853:3",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 3469,
                    "nodeType": "Block",
                    "src": "18705:1775:3",
                    "statements": [
                      {
                        "assignments": [
                          3383
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3383,
                            "mutability": "mutable",
                            "name": "withdrawalToMigrate",
                            "nameLocation": "18777:19:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3469,
                            "src": "18719:77:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                              "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                            },
                            "typeName": {
                              "id": 3382,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3381,
                                "name": "IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 8364,
                                "src": "18719:50:3"
                              },
                              "referencedDeclaration": 8364,
                              "src": "18719:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                                "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3387,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3384,
                            "name": "withdrawalsToMigrate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3368,
                            "src": "18799:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory[] memory"
                            }
                          },
                          "id": 3386,
                          "indexExpression": {
                            "id": 3385,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3372,
                            "src": "18820:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18799:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                            "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18719:103:3"
                      },
                      {
                        "assignments": [
                          3389,
                          3391
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3389,
                            "mutability": "mutable",
                            "name": "isDeleted",
                            "nameLocation": "18900:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3469,
                            "src": "18895:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3388,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "18895:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3391,
                            "mutability": "mutable",
                            "name": "oldWithdrawalRoot",
                            "nameLocation": "18919:17:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3469,
                            "src": "18911:25:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3390,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18911:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3396,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3394,
                              "name": "withdrawalToMigrate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3383,
                              "src": "18980:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                              }
                            ],
                            "expression": {
                              "id": 3392,
                              "name": "strategyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4941,
                              "src": "18940:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                "typeString": "contract IStrategyManager"
                              }
                            },
                            "id": 3393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "migrateQueuedWithdrawal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8374,
                            "src": "18940:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$returns$_t_bool_$_t_bytes32_$",
                              "typeString": "function (struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory) external returns (bool,bytes32)"
                            }
                          },
                          "id": 3395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18940:60:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                            "typeString": "tuple(bool,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18894:106:3"
                      },
                      {
                        "condition": {
                          "id": 3397,
                          "name": "isDeleted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3389,
                          "src": "19080:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3464,
                        "nodeType": "IfStatement",
                        "src": "19076:1335:3",
                        "trueBody": {
                          "id": 3463,
                          "nodeType": "Block",
                          "src": "19091:1320:3",
                          "statements": [
                            {
                              "assignments": [
                                3399
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3399,
                                  "mutability": "mutable",
                                  "name": "staker",
                                  "nameLocation": "19117:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3463,
                                  "src": "19109:14:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3398,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19109:7:3",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3402,
                              "initialValue": {
                                "expression": {
                                  "id": 3400,
                                  "name": "withdrawalToMigrate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3383,
                                  "src": "19126:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 3401,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "staker",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8356,
                                "src": "19126:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19109:43:3"
                            },
                            {
                              "assignments": [
                                3404
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3404,
                                  "mutability": "mutable",
                                  "name": "nonce",
                                  "nameLocation": "19247:5:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3463,
                                  "src": "19239:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3403,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19239:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3408,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3405,
                                  "name": "cumulativeWithdrawalsQueued",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4996,
                                  "src": "19255:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 3407,
                                "indexExpression": {
                                  "id": 3406,
                                  "name": "staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3399,
                                  "src": "19283:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19255:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19239:51:3"
                            },
                            {
                              "expression": {
                                "id": 3412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "19308:37:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 3409,
                                    "name": "cumulativeWithdrawalsQueued",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4996,
                                    "src": "19308:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 3411,
                                  "indexExpression": {
                                    "id": 3410,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3399,
                                    "src": "19336:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19308:35:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3413,
                              "nodeType": "ExpressionStatement",
                              "src": "19308:37:3"
                            },
                            {
                              "assignments": [
                                3416
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3416,
                                  "mutability": "mutable",
                                  "name": "migratedWithdrawal",
                                  "nameLocation": "19382:18:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3463,
                                  "src": "19364:36:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                    "typeString": "struct IDelegationManager.Withdrawal"
                                  },
                                  "typeName": {
                                    "id": 3415,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3414,
                                      "name": "Withdrawal",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 6649,
                                      "src": "19364:10:3"
                                    },
                                    "referencedDeclaration": 6649,
                                    "src": "19364:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3432,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3418,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3399,
                                    "src": "19444:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3419,
                                      "name": "withdrawalToMigrate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3383,
                                      "src": "19485:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                      }
                                    },
                                    "id": 3420,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "delegatedAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8363,
                                    "src": "19485:36:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 3421,
                                        "name": "withdrawalToMigrate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3383,
                                        "src": "19555:19:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                          "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                        }
                                      },
                                      "id": 3422,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "withdrawerAndNonce",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8359,
                                      "src": "19555:38:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DeprecatedStruct_WithdrawerAndNonce_$8347_memory_ptr",
                                        "typeString": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce memory"
                                      }
                                    },
                                    "id": 3423,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8344,
                                    "src": "19555:49:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3424,
                                    "name": "nonce",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3404,
                                    "src": "19633:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3425,
                                      "name": "withdrawalToMigrate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3383,
                                      "src": "19672:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                      }
                                    },
                                    "id": 3426,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawalStartBlock",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8361,
                                    "src": "19672:40:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3427,
                                      "name": "withdrawalToMigrate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3383,
                                      "src": "19746:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                      }
                                    },
                                    "id": 3428,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "strategies",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8351,
                                    "src": "19746:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3429,
                                      "name": "withdrawalToMigrate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3383,
                                      "src": "19806:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                      }
                                    },
                                    "id": 3430,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "shares",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8354,
                                    "src": "19806:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "id": 3417,
                                  "name": "Withdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6649,
                                  "src": "19403:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Withdrawal_$6649_storage_ptr_$",
                                    "typeString": "type(struct IDelegationManager.Withdrawal storage pointer)"
                                  }
                                },
                                "id": 3431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [
                                  "staker",
                                  "delegatedTo",
                                  "withdrawer",
                                  "nonce",
                                  "startBlock",
                                  "strategies",
                                  "shares"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "19403:448:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                  "typeString": "struct IDelegationManager.Withdrawal memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19364:487:3"
                            },
                            {
                              "assignments": [
                                3434
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3434,
                                  "mutability": "mutable",
                                  "name": "newRoot",
                                  "nameLocation": "19920:7:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3463,
                                  "src": "19912:15:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 3433,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19912:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3438,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3436,
                                    "name": "migratedWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3416,
                                    "src": "19954:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal memory"
                                    }
                                  ],
                                  "id": 3435,
                                  "name": "calculateWithdrawalRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4767,
                                  "src": "19930:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_Withdrawal_$6649_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (struct IDelegationManager.Withdrawal memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 3437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19930:43:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19912:61:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "20103:28:3",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 3440,
                                        "name": "pendingWithdrawals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4991,
                                        "src": "20104:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                          "typeString": "mapping(bytes32 => bool)"
                                        }
                                      },
                                      "id": 3442,
                                      "indexExpression": {
                                        "id": 3441,
                                        "name": "newRoot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3434,
                                        "src": "20123:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20104:27:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "44656c65676174696f6e4d616e616765722e6d6967726174655175657565645769746864726177616c733a207769746864726177616c20616c726561647920657869737473",
                                    "id": 3444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20133:71:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d8452e762690cd148cb81008c5e0b95a5225f4b5e958b5278c7d76370c233c75",
                                      "typeString": "literal_string \"DelegationManager.migrateQueuedWithdrawals: withdrawal already exists\""
                                    },
                                    "value": "DelegationManager.migrateQueuedWithdrawals: withdrawal already exists"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d8452e762690cd148cb81008c5e0b95a5225f4b5e958b5278c7d76370c233c75",
                                      "typeString": "literal_string \"DelegationManager.migrateQueuedWithdrawals: withdrawal already exists\""
                                    }
                                  ],
                                  "id": 3439,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20095:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20095:110:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3446,
                              "nodeType": "ExpressionStatement",
                              "src": "20095:110:3"
                            },
                            {
                              "expression": {
                                "id": 3451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3447,
                                    "name": "pendingWithdrawals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4991,
                                    "src": "20223:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 3449,
                                  "indexExpression": {
                                    "id": 3448,
                                    "name": "newRoot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3434,
                                    "src": "20242:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20223:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20253:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "20223:34:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3452,
                              "nodeType": "ExpressionStatement",
                              "src": "20223:34:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3454,
                                    "name": "newRoot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3434,
                                    "src": "20298:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 3455,
                                    "name": "migratedWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3416,
                                    "src": "20307:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal memory"
                                    }
                                  ],
                                  "id": 3453,
                                  "name": "WithdrawalQueued",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6734,
                                  "src": "20281:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Withdrawal_$6649_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,struct IDelegationManager.Withdrawal memory)"
                                  }
                                },
                                "id": 3456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20281:45:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3457,
                              "nodeType": "EmitStatement",
                              "src": "20276:50:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 3459,
                                    "name": "oldWithdrawalRoot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3391,
                                    "src": "20369:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 3460,
                                    "name": "newRoot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3434,
                                    "src": "20388:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 3458,
                                  "name": "WithdrawalMigrated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6746,
                                  "src": "20350:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32,bytes32)"
                                  }
                                },
                                "id": 3461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20350:46:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3462,
                              "nodeType": "EmitStatement",
                              "src": "20345:51:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 3468,
                        "nodeType": "UncheckedBlock",
                        "src": "20424:46:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 3466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "20452:3:3",
                              "subExpression": {
                                "id": 3465,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3372,
                                "src": "20454:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3467,
                            "nodeType": "ExpressionStatement",
                            "src": "20452:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3375,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "18671:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3376,
                        "name": "withdrawalsToMigrate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3368,
                        "src": "18675:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory[] memory"
                        }
                      },
                      "id": 3377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18675:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18671:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3470,
                  "initializationExpression": {
                    "assignments": [
                      3372
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3372,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18664:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3470,
                        "src": "18656:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3374,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18668:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18656:13:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "18652:1828:3"
                }
              ]
            },
            "baseFunctions": [
              7101
            ],
            "documentation": {
              "id": 3364,
              "nodeType": "StructuredDocumentation",
              "src": "18286:226:3",
              "text": "@notice Migrates an array of queued withdrawals from the StrategyManager contract to this contract.\n @dev This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
            },
            "functionSelector": "5cfe8d2c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateQueuedWithdrawals",
            "nameLocation": "18526:24:3",
            "parameters": {
              "id": 3369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3368,
                  "mutability": "mutable",
                  "name": "withdrawalsToMigrate",
                  "nameLocation": "18611:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3472,
                  "src": "18551:80:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3366,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3365,
                        "name": "IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8364,
                        "src": "18551:50:3"
                      },
                      "referencedDeclaration": 8364,
                      "src": "18551:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                      }
                    },
                    "id": 3367,
                    "nodeType": "ArrayTypeName",
                    "src": "18551:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_$dyn_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18550:82:3"
            },
            "returnParameters": {
              "id": 3370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18642:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3504,
            "nodeType": "FunctionDefinition",
            "src": "21037:486:3",
            "nodes": [],
            "body": {
              "id": 3503,
              "nodeType": "Block",
              "src": "21198:325:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 3486,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3475,
                        "src": "21277:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3485,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4405,
                      "src": "21265:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21265:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3502,
                  "nodeType": "IfStatement",
                  "src": "21261:256:3",
                  "trueBody": {
                    "id": 3501,
                    "nodeType": "Block",
                    "src": "21286:231:3",
                    "statements": [
                      {
                        "assignments": [
                          3489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3489,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "21308:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3501,
                            "src": "21300:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3488,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21300:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3493,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3490,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4971,
                            "src": "21319:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 3492,
                          "indexExpression": {
                            "id": 3491,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3475,
                            "src": "21331:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21319:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21300:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3495,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "21444:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3496,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3475,
                              "src": "21462:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3497,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3478,
                              "src": "21480:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "id": 3498,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3480,
                              "src": "21498:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3494,
                            "name": "_increaseOperatorShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4039,
                            "src": "21409:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,contract IStrategy,uint256)"
                            }
                          },
                          "id": 3499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [
                            "operator",
                            "staker",
                            "strategy",
                            "shares"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "21409:97:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3500,
                        "nodeType": "ExpressionStatement",
                        "src": "21409:97:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              6877
            ],
            "documentation": {
              "id": 3473,
              "nodeType": "StructuredDocumentation",
              "src": "20501:531:3",
              "text": " @notice Increases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to increase the delegated shares.\n @param shares The number of shares to increase.\n @dev *If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."
            },
            "functionSelector": "28a573ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3482,
                  "name": "onlyStrategyManagerOrEigenPodManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2730,
                  "src": "21161:36:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "21161:36:3"
              }
            ],
            "name": "increaseDelegatedShares",
            "nameLocation": "21046:23:3",
            "parameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3475,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "21087:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3504,
                  "src": "21079:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21079:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "21113:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3504,
                  "src": "21103:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 3477,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3476,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "21103:9:3"
                    },
                    "referencedDeclaration": 8135,
                    "src": "21103:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3480,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "21139:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3504,
                  "src": "21131:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21131:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21069:82:3"
            },
            "returnParameters": {
              "id": 3484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21198:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3536,
            "nodeType": "FunctionDefinition",
            "src": "22065:571:3",
            "nodes": [],
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "22226:410:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 3518,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3507,
                        "src": "22305:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3517,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4405,
                      "src": "22293:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22293:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3534,
                  "nodeType": "IfStatement",
                  "src": "22289:341:3",
                  "trueBody": {
                    "id": 3533,
                    "nodeType": "Block",
                    "src": "22314:316:3",
                    "statements": [
                      {
                        "assignments": [
                          3521
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3521,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "22336:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3533,
                            "src": "22328:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22328:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3525,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3522,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4971,
                            "src": "22347:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 3524,
                          "indexExpression": {
                            "id": 3523,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3507,
                            "src": "22359:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22347:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22328:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3527,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3521,
                              "src": "22496:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3528,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3507,
                              "src": "22530:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3529,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3510,
                              "src": "22564:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "id": 3530,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3512,
                              "src": "22598:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3526,
                            "name": "_decreaseOperatorShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4067,
                            "src": "22444:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,contract IStrategy,uint256)"
                            }
                          },
                          "id": 3531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [
                            "operator",
                            "staker",
                            "strategy",
                            "shares"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "22444:175:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3532,
                        "nodeType": "ExpressionStatement",
                        "src": "22444:175:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              6888
            ],
            "documentation": {
              "id": 3505,
              "nodeType": "StructuredDocumentation",
              "src": "21529:531:3",
              "text": " @notice Decreases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to decrease the delegated shares.\n @param shares The number of shares to decrease.\n @dev *If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."
            },
            "functionSelector": "132d4967",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3514,
                  "name": "onlyStrategyManagerOrEigenPodManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2730,
                  "src": "22189:36:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "22189:36:3"
              }
            ],
            "name": "decreaseDelegatedShares",
            "nameLocation": "22074:23:3",
            "parameters": {
              "id": 3513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "22115:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "22107:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22107:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "22141:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "22131:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 3509,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3508,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "22131:9:3"
                    },
                    "referencedDeclaration": 8135,
                    "src": "22131:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3512,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "22167:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "22159:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22159:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22097:82:3"
            },
            "returnParameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22226:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3555,
            "nodeType": "FunctionDefinition",
            "src": "23107:243:3",
            "nodes": [],
            "body": {
              "id": 3554,
              "nodeType": "Block",
              "src": "23265:85:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3550,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3541,
                        "src": "23309:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      {
                        "id": 3551,
                        "name": "withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "23321:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 3549,
                      "name": "_setStrategyWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4367,
                      "src": "23275:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IStrategy[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23275:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "23275:68:3"
                }
              ]
            },
            "documentation": {
              "id": 3537,
              "nodeType": "StructuredDocumentation",
              "src": "22642:460:3",
              "text": " @notice Called by owner to set the minimum withdrawal delay blocks for each passed in strategy\n Note that the min number of blocks to complete a withdrawal of a strategy is \n MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\n @param strategies The strategies to set the minimum withdrawal delay blocks for\n @param withdrawalDelayBlocks The minimum withdrawal delay blocks to set for each strategy"
            },
            "functionSelector": "1522bf02",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3546,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57061,
                  "src": "23255:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "23255:9:3"
              }
            ],
            "name": "setStrategyWithdrawalDelayBlocks",
            "nameLocation": "23116:32:3",
            "parameters": {
              "id": 3545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3541,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "23179:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3555,
                  "src": "23158:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3539,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3538,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "23158:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "23158:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 3540,
                    "nodeType": "ArrayTypeName",
                    "src": "23158:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "withdrawalDelayBlocks",
                  "nameLocation": "23218:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3555,
                  "src": "23199:40:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3542,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23199:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3543,
                    "nodeType": "ArrayTypeName",
                    "src": "23199:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23148:97:3"
            },
            "returnParameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23265:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3607,
            "nodeType": "FunctionDefinition",
            "src": "23943:907:3",
            "nodes": [],
            "body": {
              "id": 3606,
              "nodeType": "Block",
              "src": "24044:806:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3565,
                            "name": "newOperatorDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3561,
                            "src": "24075:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                              "typeString": "struct IDelegationManager.OperatorDetails calldata"
                            }
                          },
                          "id": 3566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "earningsReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6606,
                          "src": "24075:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24122:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24114:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3567,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24114:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24114:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24075:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f7365744f70657261746f7244657461696c733a2063616e6e6f742073657420606561726e696e677352656365697665726020746f207a65726f2061646472657373",
                        "id": 3572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24138:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95ad36b2c5a9ad472cd228af0167330a7f0b60160c9b2a039982f7bac82e88b3",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: cannot set `earningsReceiver` to zero address\""
                        },
                        "value": "DelegationManager._setOperatorDetails: cannot set `earningsReceiver` to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95ad36b2c5a9ad472cd228af0167330a7f0b60160c9b2a039982f7bac82e88b3",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: cannot set `earningsReceiver` to zero address\""
                        }
                      ],
                      "id": 3564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24054:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24054:180:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3574,
                  "nodeType": "ExpressionStatement",
                  "src": "24054:180:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3576,
                            "name": "newOperatorDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3561,
                            "src": "24265:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                              "typeString": "struct IDelegationManager.OperatorDetails calldata"
                            }
                          },
                          "id": 3577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakerOptOutWindowBlocks",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6612,
                          "src": "24265:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 3578,
                          "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2700,
                          "src": "24312:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24265:79:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f7365744f70657261746f7244657461696c733a207374616b65724f70744f757457696e646f77426c6f636b732063616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f57494e444f575f424c4f434b53",
                        "id": 3580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24358:110:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45dc85492d4c683327487239cb936fdb74996b6ca23a5bf1f0e544ed0702866d",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be > MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\""
                        },
                        "value": "DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be > MAX_STAKER_OPT_OUT_WINDOW_BLOCKS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45dc85492d4c683327487239cb936fdb74996b6ca23a5bf1f0e544ed0702866d",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be > MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\""
                        }
                      ],
                      "id": 3575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24244:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24244:234:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "24244:234:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 3590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3584,
                            "name": "newOperatorDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3561,
                            "src": "24509:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                              "typeString": "struct IDelegationManager.OperatorDetails calldata"
                            }
                          },
                          "id": 3585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakerOptOutWindowBlocks",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6612,
                          "src": "24509:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3586,
                              "name": "_operatorDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4966,
                              "src": "24556:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                                "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                              }
                            },
                            "id": 3588,
                            "indexExpression": {
                              "id": 3587,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "24573:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24556:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                              "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                            }
                          },
                          "id": 3589,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakerOptOutWindowBlocks",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6612,
                          "src": "24556:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "24509:98:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f7365744f70657261746f7244657461696c733a207374616b65724f70744f757457696e646f77426c6f636b732063616e6e6f7420626520646563726561736564",
                        "id": 3591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24621:85:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c3e279e65faa8f51dca4197399494ba5c1948e0e2bee086a078493d38db7d67",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be decreased\""
                        },
                        "value": "DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be decreased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c3e279e65faa8f51dca4197399494ba5c1948e0e2bee086a078493d38db7d67",
                          "typeString": "literal_string \"DelegationManager._setOperatorDetails: stakerOptOutWindowBlocks cannot be decreased\""
                        }
                      ],
                      "id": 3583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24488:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24488:228:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3593,
                  "nodeType": "ExpressionStatement",
                  "src": "24488:228:3"
                },
                {
                  "expression": {
                    "id": 3598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3594,
                        "name": "_operatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4966,
                        "src": "24726:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                          "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                        }
                      },
                      "id": 3596,
                      "indexExpression": {
                        "id": 3595,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "24743:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24726:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                        "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3597,
                      "name": "newOperatorDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3561,
                      "src": "24755:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                        "typeString": "struct IDelegationManager.OperatorDetails calldata"
                      }
                    },
                    "src": "24726:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                      "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                    }
                  },
                  "id": 3599,
                  "nodeType": "ExpressionStatement",
                  "src": "24726:47:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3601,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24812:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24812:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3603,
                        "name": "newOperatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "24824:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                          "typeString": "struct IDelegationManager.OperatorDetails calldata"
                        }
                      ],
                      "id": 3600,
                      "name": "OperatorDetailsModified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6674,
                      "src": "24788:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_OperatorDetails_$6613_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct IDelegationManager.OperatorDetails memory)"
                      }
                    },
                    "id": 3604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24788:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3605,
                  "nodeType": "EmitStatement",
                  "src": "24783:60:3"
                }
              ]
            },
            "documentation": {
              "id": 3556,
              "nodeType": "StructuredDocumentation",
              "src": "23574:364:3",
              "text": " @notice Sets operator parameters in the `_operatorDetails` mapping.\n @param operator The account registered as an operator updating their operatorDetails\n @param newOperatorDetails The new parameters for the operator\n @dev This function will revert if the operator attempts to set their `earningsReceiver` to address(0)."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setOperatorDetails",
            "nameLocation": "23952:19:3",
            "parameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3558,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "23980:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3607,
                  "src": "23972:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23972:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "newOperatorDetails",
                  "nameLocation": "24015:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3607,
                  "src": "23990:43:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 3560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3559,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "23990:15:3"
                    },
                    "referencedDeclaration": 6613,
                    "src": "23990:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23971:63:3"
            },
            "returnParameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24044:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3759,
            "nodeType": "FunctionDefinition",
            "src": "25680:2921:3",
            "nodes": [],
            "body": {
              "id": 3758,
              "nodeType": "Block",
              "src": "25898:2703:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "25916:20:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3625,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3610,
                              "src": "25929:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3624,
                            "name": "isDelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4405,
                            "src": "25917:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 3626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25917:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f64656c65676174653a207374616b657220697320616c7265616479206163746976656c792064656c656761746564",
                        "id": 3628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25938:67:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9f3f399176d40ca3b915dcbca825e35f19e32669b6d7b36c8e9199f589eaa5",
                          "typeString": "literal_string \"DelegationManager._delegate: staker is already actively delegated\""
                        },
                        "value": "DelegationManager._delegate: staker is already actively delegated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9f3f399176d40ca3b915dcbca825e35f19e32669b6d7b36c8e9199f589eaa5",
                          "typeString": "literal_string \"DelegationManager._delegate: staker is already actively delegated\""
                        }
                      ],
                      "id": 3623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25908:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25908:98:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3630,
                  "nodeType": "ExpressionStatement",
                  "src": "25908:98:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3633,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3612,
                            "src": "26035:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3632,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4425,
                          "src": "26024:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26024:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f64656c65676174653a206f70657261746f72206973206e6f74207265676973746572656420696e20456967656e4c61796572",
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26046:71:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84d580ddb179356ee812b537522daed67a251d0414649b5cbbaf88c27d4f8312",
                          "typeString": "literal_string \"DelegationManager._delegate: operator is not registered in EigenLayer\""
                        },
                        "value": "DelegationManager._delegate: operator is not registered in EigenLayer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84d580ddb179356ee812b537522daed67a251d0414649b5cbbaf88c27d4f8312",
                          "typeString": "literal_string \"DelegationManager._delegate: operator is not registered in EigenLayer\""
                        }
                      ],
                      "id": 3631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26016:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26016:102:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "26016:102:3"
                },
                {
                  "assignments": [
                    3639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3639,
                      "mutability": "mutable",
                      "name": "_delegationApprover",
                      "nameLocation": "26262:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3758,
                      "src": "26254:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3638,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26254:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3644,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3640,
                        "name": "_operatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4966,
                        "src": "26284:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                          "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                        }
                      },
                      "id": 3642,
                      "indexExpression": {
                        "id": 3641,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "26301:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26284:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                        "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                      }
                    },
                    "id": 3643,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "delegationApprover",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6609,
                    "src": "26284:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26254:75:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3645,
                          "name": "_delegationApprover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3639,
                          "src": "26746:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26777:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26769:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3646,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "26769:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26769:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26746:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3651,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "26783:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26783:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3653,
                          "name": "_delegationApprover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3639,
                          "src": "26797:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26783:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "26746:70:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26820:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26820:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 3658,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "26834:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "26820:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "26746:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": " Check the `_delegationApprover`'s signature, if applicable.\n If the `_delegationApprover` is the zero address, then the operator allows all stakers to delegate to them and this verification is skipped.\n If the `_delegationApprover` or the `operator` themselves is the caller, then approval is assumed and signature verification is skipped as well.",
                  "id": 3709,
                  "nodeType": "IfStatement",
                  "src": "26742:1267:3",
                  "trueBody": {
                    "id": 3708,
                    "nodeType": "Block",
                    "src": "26844:1165:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3662,
                                  "name": "approverSignatureAndExpiry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3615,
                                  "src": "26925:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                                    "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                                  }
                                },
                                "id": 3663,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expiry",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7785,
                                "src": "26925:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3664,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "26962:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "26962:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "26925:52:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e5f64656c65676174653a20617070726f766572207369676e61747572652065787069726564",
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26995:57:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72d281f7956127647c86a600e64cc8bcf4a6ea0f01a37ebe5e894773c7a4e1e1",
                                "typeString": "literal_string \"DelegationManager._delegate: approver signature expired\""
                              },
                              "value": "DelegationManager._delegate: approver signature expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72d281f7956127647c86a600e64cc8bcf4a6ea0f01a37ebe5e894773c7a4e1e1",
                                "typeString": "literal_string \"DelegationManager._delegate: approver signature expired\""
                              }
                            ],
                            "id": 3661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "26900:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26900:166:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3669,
                        "nodeType": "ExpressionStatement",
                        "src": "26900:166:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "27197:65:3",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 3671,
                                    "name": "delegationApproverSaltIsSpent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4983,
                                    "src": "27198:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => bool))"
                                    }
                                  },
                                  "id": 3673,
                                  "indexExpression": {
                                    "id": 3672,
                                    "name": "_delegationApprover",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3639,
                                    "src": "27228:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "27198:50:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 3675,
                                "indexExpression": {
                                  "id": 3674,
                                  "name": "approverSalt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3617,
                                  "src": "27249:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "27198:64:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e5f64656c65676174653a20617070726f76657253616c7420616c7265616479207370656e74",
                              "id": 3677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27280:57:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f2cec65abcb52c89811a6db5c6fad2e92edf0db8019f41e42520a7868f76a69",
                                "typeString": "literal_string \"DelegationManager._delegate: approverSalt already spent\""
                              },
                              "value": "DelegationManager._delegate: approverSalt already spent"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f2cec65abcb52c89811a6db5c6fad2e92edf0db8019f41e42520a7868f76a69",
                                "typeString": "literal_string \"DelegationManager._delegate: approverSalt already spent\""
                              }
                            ],
                            "id": 3670,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27172:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27172:179:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3679,
                        "nodeType": "ExpressionStatement",
                        "src": "27172:179:3"
                      },
                      {
                        "expression": {
                          "id": 3686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3680,
                                "name": "delegationApproverSaltIsSpent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4983,
                                "src": "27365:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => bool))"
                                }
                              },
                              "id": 3683,
                              "indexExpression": {
                                "id": 3681,
                                "name": "_delegationApprover",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3639,
                                "src": "27395:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27365:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 3684,
                            "indexExpression": {
                              "id": 3682,
                              "name": "approverSalt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3617,
                              "src": "27416:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "27365:64:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27432:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "27365:71:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3687,
                        "nodeType": "ExpressionStatement",
                        "src": "27365:71:3"
                      },
                      {
                        "assignments": [
                          3689
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3689,
                            "mutability": "mutable",
                            "name": "approverDigestHash",
                            "nameLocation": "27500:18:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3708,
                            "src": "27492:26:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3688,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "27492:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3698,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3691,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3610,
                              "src": "27576:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3692,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3612,
                              "src": "27600:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3693,
                              "name": "_delegationApprover",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3639,
                              "src": "27626:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3694,
                              "name": "approverSalt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3617,
                              "src": "27663:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 3695,
                                "name": "approverSignatureAndExpiry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3615,
                                "src": "27693:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                                  "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                                }
                              },
                              "id": 3696,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7785,
                              "src": "27693:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3690,
                            "name": "calculateDelegationApprovalDigestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4880,
                            "src": "27521:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,address,address,bytes32,uint256) view returns (bytes32)"
                            }
                          },
                          "id": 3697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27521:219:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27492:248:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3702,
                              "name": "_delegationApprover",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3639,
                              "src": "27875:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3703,
                              "name": "approverDigestHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3689,
                              "src": "27912:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 3704,
                                "name": "approverSignatureAndExpiry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3615,
                                "src": "27948:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                                  "typeString": "struct ISignatureUtils.SignatureWithExpiry memory"
                                }
                              },
                              "id": 3705,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7783,
                              "src": "27948:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 3699,
                              "name": "EIP1271SignatureUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9528,
                              "src": "27813:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EIP1271SignatureUtils_$9528_$",
                                "typeString": "type(library EIP1271SignatureUtils)"
                              }
                            },
                            "id": 3701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkSignature_EIP1271",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9527,
                            "src": "27813:44:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes32,bytes memory) view"
                            }
                          },
                          "id": 3706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27813:185:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3707,
                        "nodeType": "ExpressionStatement",
                        "src": "27813:185:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3710,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "28112:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3712,
                      "indexExpression": {
                        "id": 3711,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "28124:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28112:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3713,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3612,
                      "src": "28134:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28112:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3715,
                  "nodeType": "ExpressionStatement",
                  "src": "28112:30:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3717,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "28173:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3718,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "28181:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3716,
                      "name": "StakerDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6712,
                      "src": "28157:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28157:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3720,
                  "nodeType": "EmitStatement",
                  "src": "28152:38:3"
                },
                {
                  "assignments": [
                    3725,
                    3728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3725,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "28221:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3758,
                      "src": "28202:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                        "typeString": "contract IStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3723,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3722,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8135,
                            "src": "28202:9:3"
                          },
                          "referencedDeclaration": 8135,
                          "src": "28202:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 3724,
                        "nodeType": "ArrayTypeName",
                        "src": "28202:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3728,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "28250:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3758,
                      "src": "28233:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3726,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28233:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3727,
                        "nodeType": "ArrayTypeName",
                        "src": "28233:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3732,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3730,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "28293:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3729,
                      "name": "getDelegatableShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4703,
                      "src": "28272:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view returns (contract IStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 3731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28272:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28201:99:3"
                },
                {
                  "body": {
                    "id": 3756,
                    "nodeType": "Block",
                    "src": "28355:240:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3742,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3612,
                              "src": "28421:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3743,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3610,
                              "src": "28455:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3744,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3725,
                                "src": "28489:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                }
                              },
                              "id": 3746,
                              "indexExpression": {
                                "id": 3745,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3734,
                                "src": "28500:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28489:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3747,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3728,
                                "src": "28528:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 3749,
                              "indexExpression": {
                                "id": 3748,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3734,
                                "src": "28535:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28528:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3741,
                            "name": "_increaseOperatorShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4039,
                            "src": "28369:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,contract IStrategy,uint256)"
                            }
                          },
                          "id": 3750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [
                            "operator",
                            "staker",
                            "strategy",
                            "shares"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "28369:183:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3751,
                        "nodeType": "ExpressionStatement",
                        "src": "28369:183:3"
                      },
                      {
                        "id": 3755,
                        "nodeType": "UncheckedBlock",
                        "src": "28567:18:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 3753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "28579:3:3",
                              "subExpression": {
                                "id": 3752,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3734,
                                "src": "28581:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3754,
                            "nodeType": "ExpressionStatement",
                            "src": "28579:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3737,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3734,
                      "src": "28331:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3738,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3725,
                        "src": "28335:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 3739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "28335:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28331:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3757,
                  "initializationExpression": {
                    "assignments": [
                      3734
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3734,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28324:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3757,
                        "src": "28316:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28316:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3736,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28328:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28316:13:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "28311:284:3"
                }
              ]
            },
            "documentation": {
              "id": 3608,
              "nodeType": "StructuredDocumentation",
              "src": "24856:819:3",
              "text": " @notice Delegates *from* a `staker` *to* an `operator`.\n @param staker The address to delegate *from* -- this address is delegating control of its own assets.\n @param operator The address to delegate *to* -- this address is being given power to place the `staker`'s assets at risk on services\n @param approverSignatureAndExpiry Verifies the operator approves of this delegation\n @param approverSalt Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\n @dev Ensures that:\n          1) the `staker` is not already delegated to an operator\n          2) the `operator` has indeed registered as an operator in EigenLayer\n          3) if applicable, that the approver signature is valid and non-expired"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3620,
                    "name": "PAUSED_NEW_DELEGATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2686,
                    "src": "25875:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3621,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3619,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "25857:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "25857:40:3"
              }
            ],
            "name": "_delegate",
            "nameLocation": "25689:9:3",
            "parameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3610,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "25716:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3759,
                  "src": "25708:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25708:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3612,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "25740:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3759,
                  "src": "25732:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25732:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3615,
                  "mutability": "mutable",
                  "name": "approverSignatureAndExpiry",
                  "nameLocation": "25785:26:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3759,
                  "src": "25758:53:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 3614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3613,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "25758:19:3"
                    },
                    "referencedDeclaration": 7786,
                    "src": "25758:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3617,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "25829:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3759,
                  "src": "25821:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3616,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25698:149:3"
            },
            "returnParameters": {
              "id": 3622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25898:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4011,
            "nodeType": "FunctionDefinition",
            "src": "28944:4834:3",
            "nodes": [],
            "body": {
              "id": 4010,
              "nodeType": "Block",
              "src": "29140:4638:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3775,
                      "mutability": "mutable",
                      "name": "withdrawalRoot",
                      "nameLocation": "29158:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4010,
                      "src": "29150:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3774,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "29150:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3779,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3777,
                        "name": "withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3763,
                        "src": "29199:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                        }
                      ],
                      "id": 3776,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4767,
                      "src": "29175:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Withdrawal_$6649_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IDelegationManager.Withdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29175:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29150:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3781,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4991,
                          "src": "29242:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 3783,
                        "indexExpression": {
                          "id": 3782,
                          "name": "withdrawalRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3775,
                          "src": "29261:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29242:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a20616374696f6e206973206e6f7420696e207175657565",
                        "id": 3784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29291:69:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_405d810ffa5d1a171bf54106b8587a8bd2383046338c98b2bae6c9782182d23f",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: action is not in queue\""
                        },
                        "value": "DelegationManager._completeQueuedWithdrawal: action is not in queue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_405d810ffa5d1a171bf54106b8587a8bd2383046338c98b2bae6c9782182d23f",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: action is not in queue\""
                        }
                      ],
                      "id": 3780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29221:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29221:149:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3786,
                  "nodeType": "ExpressionStatement",
                  "src": "29221:149:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3788,
                              "name": "withdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3763,
                              "src": "29402:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                              }
                            },
                            "id": 3789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6641,
                            "src": "29402:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3790,
                            "name": "minWithdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4986,
                            "src": "29426:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29402:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 3792,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "29454:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "29454:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29402:64:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a206d696e5769746864726177616c44656c6179426c6f636b7320706572696f6420686173206e6f742079657420706173736564",
                        "id": 3795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29481:97:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_172ae0eff12594bb23a837d65a71bc52f3259414b9fabc9a82251a2e950cc5be",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: minWithdrawalDelayBlocks period has not yet passed\""
                        },
                        "value": "DelegationManager._completeQueuedWithdrawal: minWithdrawalDelayBlocks period has not yet passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_172ae0eff12594bb23a837d65a71bc52f3259414b9fabc9a82251a2e950cc5be",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: minWithdrawalDelayBlocks period has not yet passed\""
                        }
                      ],
                      "id": 3787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29381:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29381:207:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3797,
                  "nodeType": "ExpressionStatement",
                  "src": "29381:207:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3799,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "29620:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "29620:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3801,
                            "name": "withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3763,
                            "src": "29634:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                              "typeString": "struct IDelegationManager.Withdrawal calldata"
                            }
                          },
                          "id": 3802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6637,
                          "src": "29634:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "29620:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a206f6e6c7920776974686472617765722063616e20636f6d706c65746520616374696f6e",
                        "id": 3804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29670:82:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1502202fd507df82aee725a0eb2e92e6fd0702a36f0c3b4c84c32ae4a41874af",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: only withdrawer can complete action\""
                        },
                        "value": "DelegationManager._completeQueuedWithdrawal: only withdrawer can complete action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1502202fd507df82aee725a0eb2e92e6fd0702a36f0c3b4c84c32ae4a41874af",
                          "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: only withdrawer can complete action\""
                        }
                      ],
                      "id": 3798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29599:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29599:163:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3806,
                  "nodeType": "ExpressionStatement",
                  "src": "29599:163:3"
                },
                {
                  "condition": {
                    "id": 3807,
                    "name": "receiveAsTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3771,
                    "src": "29777:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3819,
                  "nodeType": "IfStatement",
                  "src": "29773:217:3",
                  "trueBody": {
                    "id": 3818,
                    "nodeType": "Block",
                    "src": "29794:196:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3809,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3767,
                                  "src": "29833:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 3810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "29833:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 3811,
                                    "name": "withdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3763,
                                    "src": "29850:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                      "typeString": "struct IDelegationManager.Withdrawal calldata"
                                    }
                                  },
                                  "id": 3812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strategies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6645,
                                  "src": "29850:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                    "typeString": "contract IStrategy[] calldata"
                                  }
                                },
                                "id": 3813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "29850:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "29833:45:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a20696e707574206c656e677468206d69736d61746368",
                              "id": 3815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29897:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38959fdd61adbca8bbd380d31fd338fb1a8b05334c3ecae4bc0237fc9351157b",
                                "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: input length mismatch\""
                              },
                              "value": "DelegationManager._completeQueuedWithdrawal: input length mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38959fdd61adbca8bbd380d31fd338fb1a8b05334c3ecae4bc0237fc9351157b",
                                "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: input length mismatch\""
                              }
                            ],
                            "id": 3808,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "29808:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29808:171:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3817,
                        "nodeType": "ExpressionStatement",
                        "src": "29808:171:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "30054:41:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3820,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4991,
                        "src": "30061:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3822,
                      "indexExpression": {
                        "id": 3821,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3775,
                        "src": "30080:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "30061:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3824,
                  "nodeType": "ExpressionStatement",
                  "src": "30054:41:3"
                },
                {
                  "condition": {
                    "id": 3825,
                    "name": "receiveAsTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3771,
                    "src": "30241:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4004,
                    "nodeType": "Block",
                    "src": "31124:2597:3",
                    "statements": [
                      {
                        "assignments": [
                          3877
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3877,
                            "mutability": "mutable",
                            "name": "currentOperator",
                            "nameLocation": "31146:15:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 4004,
                            "src": "31138:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3876,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31138:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3882,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3878,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4971,
                            "src": "31164:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 3881,
                          "indexExpression": {
                            "expression": {
                              "id": 3879,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "31176:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "31176:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31164:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31138:49:3"
                      },
                      {
                        "body": {
                          "id": 4002,
                          "nodeType": "Block",
                          "src": "31257:2454:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3901,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3893,
                                          "name": "withdrawal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3763,
                                          "src": "31304:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                            "typeString": "struct IDelegationManager.Withdrawal calldata"
                                          }
                                        },
                                        "id": 3894,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "startBlock",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6641,
                                        "src": "31304:21:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 3895,
                                          "name": "strategyWithdrawalDelayBlocks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5005,
                                          "src": "31328:29:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                                            "typeString": "mapping(contract IStrategy => uint256)"
                                          }
                                        },
                                        "id": 3900,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 3896,
                                              "name": "withdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3763,
                                              "src": "31358:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                                              }
                                            },
                                            "id": 3897,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "strategies",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6645,
                                            "src": "31358:21:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                              "typeString": "contract IStrategy[] calldata"
                                            }
                                          },
                                          "id": 3899,
                                          "indexExpression": {
                                            "id": 3898,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3884,
                                            "src": "31380:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "31358:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "31328:55:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "31304:79:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3902,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "31387:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 3903,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "31387:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "31304:95:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a207769746864726177616c44656c6179426c6f636b7320706572696f6420686173206e6f74207965742070617373656420666f722074686973207374726174656779",
                                    "id": 3905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "31422:112:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8f5bbba44c425485b843955481ccc5d7e6cdfc58b28b3ae5f752dbad23a14b7a",
                                      "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy\""
                                    },
                                    "value": "DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_8f5bbba44c425485b843955481ccc5d7e6cdfc58b28b3ae5f752dbad23a14b7a",
                                      "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy\""
                                    }
                                  ],
                                  "id": 3892,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "31275:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31275:277:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3907,
                              "nodeType": "ExpressionStatement",
                              "src": "31275:277:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 3913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 3908,
                                      "name": "withdrawal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3763,
                                      "src": "31814:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                        "typeString": "struct IDelegationManager.Withdrawal calldata"
                                      }
                                    },
                                    "id": 3909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "strategies",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6645,
                                    "src": "31814:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                      "typeString": "contract IStrategy[] calldata"
                                    }
                                  },
                                  "id": 3911,
                                  "indexExpression": {
                                    "id": 3910,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3884,
                                    "src": "31836:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "31814:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3912,
                                  "name": "beaconChainETHStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2707,
                                  "src": "31842:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "31814:50:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "documentation": "When awarding podOwnerShares in EigenPodManager, we need to be sure to only give them back to the original podOwner.\n Other strategy shares can + will be awarded to the withdrawer.",
                              "falseBody": {
                                "id": 3996,
                                "nodeType": "Block",
                                "src": "33005:657:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 3959,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "33053:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 3960,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "33053:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 3961,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3767,
                                            "src": "33065:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                                              "typeString": "contract IERC20[] calldata"
                                            }
                                          },
                                          "id": 3963,
                                          "indexExpression": {
                                            "id": 3962,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3884,
                                            "src": "33072:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "33065:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$59726",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 3964,
                                              "name": "withdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3763,
                                              "src": "33076:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                                              }
                                            },
                                            "id": 3965,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "strategies",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6645,
                                            "src": "33076:21:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                              "typeString": "contract IStrategy[] calldata"
                                            }
                                          },
                                          "id": 3967,
                                          "indexExpression": {
                                            "id": 3966,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3884,
                                            "src": "33098:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "33076:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 3968,
                                              "name": "withdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3763,
                                              "src": "33102:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                                              }
                                            },
                                            "id": 3969,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6648,
                                            "src": "33102:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 3971,
                                          "indexExpression": {
                                            "id": 3970,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3884,
                                            "src": "33120:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "33102:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$59726",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                                            "typeString": "contract IStrategy"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3956,
                                          "name": "strategyManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4941,
                                          "src": "33027:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                            "typeString": "contract IStrategyManager"
                                          }
                                        },
                                        "id": 3958,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "addShares",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8241,
                                        "src": "33027:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,contract IERC20,contract IStrategy,uint256) external"
                                        }
                                      },
                                      "id": 3972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "33027:96:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3973,
                                    "nodeType": "ExpressionStatement",
                                    "src": "33027:96:3"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 3979,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3974,
                                        "name": "currentOperator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3877,
                                        "src": "33203:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3977,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "33230:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 3976,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "33222:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3975,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "33222:7:3",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3978,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "33222:10:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "33203:29:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3995,
                                    "nodeType": "IfStatement",
                                    "src": "33199:445:3",
                                    "trueBody": {
                                      "id": 3994,
                                      "nodeType": "Block",
                                      "src": "33234:410:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3981,
                                                "name": "currentOperator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3877,
                                                "src": "33324:15:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "id": 3982,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "33462:3:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 3983,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "33462:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 3984,
                                                    "name": "withdrawal",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3763,
                                                    "src": "33512:10:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                      "typeString": "struct IDelegationManager.Withdrawal calldata"
                                                    }
                                                  },
                                                  "id": 3985,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "strategies",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 6645,
                                                  "src": "33512:21:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                                    "typeString": "contract IStrategy[] calldata"
                                                  }
                                                },
                                                "id": 3987,
                                                "indexExpression": {
                                                  "id": 3986,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3884,
                                                  "src": "33534:1:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "33512:24:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                                  "typeString": "contract IStrategy"
                                                }
                                              },
                                              {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 3988,
                                                    "name": "withdrawal",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3763,
                                                    "src": "33574:10:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                      "typeString": "struct IDelegationManager.Withdrawal calldata"
                                                    }
                                                  },
                                                  "id": 3989,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "shares",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 6648,
                                                  "src": "33574:17:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                    "typeString": "uint256[] calldata"
                                                  }
                                                },
                                                "id": 3991,
                                                "indexExpression": {
                                                  "id": 3990,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3884,
                                                  "src": "33592:1:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "33574:20:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                                  "typeString": "contract IStrategy"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 3980,
                                              "name": "_increaseOperatorShares",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4039,
                                              "src": "33260:23:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,contract IStrategy,uint256)"
                                              }
                                            },
                                            "id": 3992,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [
                                              "operator",
                                              "staker",
                                              "strategy",
                                              "shares"
                                            ],
                                            "nodeType": "FunctionCall",
                                            "src": "33260:361:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 3993,
                                          "nodeType": "ExpressionStatement",
                                          "src": "33260:361:3"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 3997,
                              "nodeType": "IfStatement",
                              "src": "31810:1852:3",
                              "trueBody": {
                                "id": 3955,
                                "nodeType": "Block",
                                "src": "31866:1133:3",
                                "statements": [
                                  {
                                    "assignments": [
                                      3915
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3915,
                                        "mutability": "mutable",
                                        "name": "staker",
                                        "nameLocation": "31896:6:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3955,
                                        "src": "31888:14:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 3914,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "31888:7:3",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3918,
                                    "initialValue": {
                                      "expression": {
                                        "id": 3916,
                                        "name": "withdrawal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3763,
                                        "src": "31905:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                                        }
                                      },
                                      "id": 3917,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "staker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6633,
                                      "src": "31905:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "31888:34:3"
                                  },
                                  {
                                    "assignments": [
                                      3921
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3921,
                                        "mutability": "mutable",
                                        "name": "increaseInDelegateableShares",
                                        "nameLocation": "32210:28:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3955,
                                        "src": "32202:36:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3920,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "32202:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "documentation": " Update shares amount depending upon the returned value.\n The return value will be lower than the input value in the case where the staker has an existing share deficit",
                                    "id": 3930,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 3924,
                                          "name": "staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3915,
                                          "src": "32303:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 3925,
                                              "name": "withdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3763,
                                              "src": "32343:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                                              }
                                            },
                                            "id": 3926,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6648,
                                            "src": "32343:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 3928,
                                          "indexExpression": {
                                            "id": 3927,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3884,
                                            "src": "32361:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "32343:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3922,
                                          "name": "eigenPodManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4949,
                                          "src": "32241:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                                            "typeString": "contract IEigenPodManager"
                                          }
                                        },
                                        "id": 3923,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "addShares",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7653,
                                        "src": "32241:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (address,uint256) external returns (uint256)"
                                        }
                                      },
                                      "id": 3929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [
                                        "podOwner",
                                        "shares"
                                      ],
                                      "nodeType": "FunctionCall",
                                      "src": "32241:145:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "32202:184:3"
                                  },
                                  {
                                    "assignments": [
                                      3932
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3932,
                                        "mutability": "mutable",
                                        "name": "podOwnerOperator",
                                        "nameLocation": "32416:16:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3955,
                                        "src": "32408:24:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 3931,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "32408:7:3",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3936,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 3933,
                                        "name": "delegatedTo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4971,
                                        "src": "32435:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                          "typeString": "mapping(address => address)"
                                        }
                                      },
                                      "id": 3935,
                                      "indexExpression": {
                                        "id": 3934,
                                        "name": "staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3915,
                                        "src": "32447:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "32435:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "32408:46:3"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 3942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3937,
                                        "name": "podOwnerOperator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3932,
                                        "src": "32534:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 3940,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "32562:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 3939,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "32554:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3938,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "32554:7:3",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3941,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "32554:10:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "32534:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3954,
                                    "nodeType": "IfStatement",
                                    "src": "32530:451:3",
                                    "trueBody": {
                                      "id": 3953,
                                      "nodeType": "Block",
                                      "src": "32566:415:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3944,
                                                "name": "podOwnerOperator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3932,
                                                "src": "32656:16:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 3945,
                                                "name": "staker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3915,
                                                "src": "32795:6:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 3946,
                                                    "name": "withdrawal",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3763,
                                                    "src": "32841:10:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                      "typeString": "struct IDelegationManager.Withdrawal calldata"
                                                    }
                                                  },
                                                  "id": 3947,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "strategies",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 6645,
                                                  "src": "32841:21:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                                    "typeString": "contract IStrategy[] calldata"
                                                  }
                                                },
                                                "id": 3949,
                                                "indexExpression": {
                                                  "id": 3948,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3884,
                                                  "src": "32863:1:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "32841:24:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                                  "typeString": "contract IStrategy"
                                                }
                                              },
                                              {
                                                "id": 3950,
                                                "name": "increaseInDelegateableShares",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3921,
                                                "src": "32903:28:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                                  "typeString": "contract IStrategy"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 3943,
                                              "name": "_increaseOperatorShares",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4039,
                                              "src": "32592:23:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,contract IStrategy,uint256)"
                                              }
                                            },
                                            "id": 3951,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [
                                              "operator",
                                              "staker",
                                              "strategy",
                                              "shares"
                                            ],
                                            "nodeType": "FunctionCall",
                                            "src": "32592:366:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 3952,
                                          "nodeType": "ExpressionStatement",
                                          "src": "32592:366:3"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 4001,
                              "nodeType": "UncheckedBlock",
                              "src": "33679:18:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 3999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "33691:3:3",
                                    "subExpression": {
                                      "id": 3998,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3884,
                                      "src": "33693:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4000,
                                  "nodeType": "ExpressionStatement",
                                  "src": "33691:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3887,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "31221:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 3888,
                                "name": "withdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3763,
                                "src": "31225:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                  "typeString": "struct IDelegationManager.Withdrawal calldata"
                                }
                              },
                              "id": 3889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6645,
                              "src": "31225:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 3890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "31225:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31221:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4003,
                        "initializationExpression": {
                          "assignments": [
                            3884
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3884,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "31214:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 4003,
                              "src": "31206:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3883,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "31206:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3886,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "31218:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "31206:13:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "31201:2510:3"
                      }
                    ]
                  },
                  "id": 4005,
                  "nodeType": "IfStatement",
                  "src": "30237:3484:3",
                  "trueBody": {
                    "id": 3875,
                    "nodeType": "Block",
                    "src": "30258:860:3",
                    "statements": [
                      {
                        "body": {
                          "id": 3873,
                          "nodeType": "Block",
                          "src": "30328:641:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3847,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3844,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3836,
                                          "name": "withdrawal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3763,
                                          "src": "30375:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                            "typeString": "struct IDelegationManager.Withdrawal calldata"
                                          }
                                        },
                                        "id": 3837,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "startBlock",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6641,
                                        "src": "30375:21:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 3838,
                                          "name": "strategyWithdrawalDelayBlocks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5005,
                                          "src": "30399:29:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                                            "typeString": "mapping(contract IStrategy => uint256)"
                                          }
                                        },
                                        "id": 3843,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 3839,
                                              "name": "withdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3763,
                                              "src": "30429:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                                "typeString": "struct IDelegationManager.Withdrawal calldata"
                                              }
                                            },
                                            "id": 3840,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "strategies",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6645,
                                            "src": "30429:21:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                              "typeString": "contract IStrategy[] calldata"
                                            }
                                          },
                                          "id": 3842,
                                          "indexExpression": {
                                            "id": 3841,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3827,
                                            "src": "30451:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "30429:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "30399:55:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "30375:79:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3845,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "30458:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 3846,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "30458:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "30375:95:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565645769746864726177616c3a207769746864726177616c44656c6179426c6f636b7320706572696f6420686173206e6f74207965742070617373656420666f722074686973207374726174656779",
                                    "id": 3848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30492:112:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8f5bbba44c425485b843955481ccc5d7e6cdfc58b28b3ae5f752dbad23a14b7a",
                                      "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy\""
                                    },
                                    "value": "DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_8f5bbba44c425485b843955481ccc5d7e6cdfc58b28b3ae5f752dbad23a14b7a",
                                      "typeString": "literal_string \"DelegationManager._completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed for this strategy\""
                                    }
                                  ],
                                  "id": 3835,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "30346:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30346:276:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3850,
                              "nodeType": "ExpressionStatement",
                              "src": "30346:276:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3852,
                                      "name": "withdrawal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3763,
                                      "src": "30695:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                        "typeString": "struct IDelegationManager.Withdrawal calldata"
                                      }
                                    },
                                    "id": 3853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "staker",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6633,
                                    "src": "30695:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3854,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "30746:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "30746:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 3856,
                                        "name": "withdrawal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3763,
                                        "src": "30788:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                                        }
                                      },
                                      "id": 3857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "strategies",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6645,
                                      "src": "30788:21:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 3859,
                                    "indexExpression": {
                                      "id": 3858,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3827,
                                      "src": "30810:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30788:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 3860,
                                        "name": "withdrawal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3763,
                                        "src": "30842:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                          "typeString": "struct IDelegationManager.Withdrawal calldata"
                                        }
                                      },
                                      "id": 3861,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6648,
                                      "src": "30842:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 3863,
                                    "indexExpression": {
                                      "id": 3862,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3827,
                                      "src": "30860:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30842:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3864,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3767,
                                      "src": "30891:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 3866,
                                    "indexExpression": {
                                      "id": 3865,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3827,
                                      "src": "30898:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30891:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$59726",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$59726",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 3851,
                                  "name": "_withdrawSharesAsTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4269,
                                  "src": "30641:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$_t_contract$_IERC20_$59726_$returns$__$",
                                    "typeString": "function (address,address,contract IStrategy,uint256,contract IERC20)"
                                  }
                                },
                                "id": 3867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [
                                  "staker",
                                  "withdrawer",
                                  "strategy",
                                  "shares",
                                  "token"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "30641:278:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3868,
                              "nodeType": "ExpressionStatement",
                              "src": "30641:278:3"
                            },
                            {
                              "id": 3872,
                              "nodeType": "UncheckedBlock",
                              "src": "30937:18:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 3870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "30949:3:3",
                                    "subExpression": {
                                      "id": 3869,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3827,
                                      "src": "30951:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3871,
                                  "nodeType": "ExpressionStatement",
                                  "src": "30949:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3830,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3827,
                            "src": "30292:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 3831,
                                "name": "withdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3763,
                                "src": "30296:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                                  "typeString": "struct IDelegationManager.Withdrawal calldata"
                                }
                              },
                              "id": 3832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6645,
                              "src": "30296:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 3833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "30296:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30292:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3874,
                        "initializationExpression": {
                          "assignments": [
                            3827
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3827,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "30285:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 3874,
                              "src": "30277:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3826,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "30277:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3829,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30289:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "30277:13:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "30272:697:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4007,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3775,
                        "src": "33756:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4006,
                      "name": "WithdrawalCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6739,
                      "src": "33736:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 4008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33736:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4009,
                  "nodeType": "EmitStatement",
                  "src": "33731:40:3"
                }
              ]
            },
            "documentation": {
              "id": 3760,
              "nodeType": "StructuredDocumentation",
              "src": "28607:332:3",
              "text": " @dev commented-out param (middlewareTimesIndex) is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n This param is intended to be passed on to the Slasher contract, but is unused in the M2 release of these contracts, and is thus commented-out."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_completeQueuedWithdrawal",
            "nameLocation": "28953:25:3",
            "parameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3763,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "29008:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4011,
                  "src": "28988:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 3762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3761,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "28988:10:3"
                    },
                    "referencedDeclaration": 6649,
                    "src": "28988:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "29046:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4011,
                  "src": "29028:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3765,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3764,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59726,
                        "src": "29028:6:3"
                      },
                      "referencedDeclaration": 59726,
                      "src": "29028:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$59726",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3766,
                    "nodeType": "ArrayTypeName",
                    "src": "29028:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4011,
                  "src": "29062:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29062:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3771,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "29109:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4011,
                  "src": "29104:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "29104:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28978:152:3"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29140:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4039,
            "nodeType": "FunctionDefinition",
            "src": "33909:247:3",
            "nodes": [],
            "body": {
              "id": 4038,
              "nodeType": "Block",
              "src": "34021:135:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4023,
                          "name": "operatorShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4960,
                          "src": "34031:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 4026,
                        "indexExpression": {
                          "id": 4024,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4013,
                          "src": "34046:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "34031:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 4027,
                      "indexExpression": {
                        "id": 4025,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4018,
                        "src": "34056:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34031:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4028,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4020,
                      "src": "34069:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34031:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "34031:44:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4032,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "34114:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4033,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "34124:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4034,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4018,
                        "src": "34132:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 4035,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4020,
                        "src": "34142:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4031,
                      "name": "OperatorSharesIncreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6693,
                      "src": "34090:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34090:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4037,
                  "nodeType": "EmitStatement",
                  "src": "34085:64:3"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_increaseOperatorShares",
            "nameLocation": "33918:23:3",
            "parameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4013,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "33950:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "33942:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33942:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "33968:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "33960:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33960:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4018,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "33986:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "33976:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 4017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4016,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "33976:9:3"
                    },
                    "referencedDeclaration": 8135,
                    "src": "33976:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4020,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "34004:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "33996:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33996:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33941:70:3"
            },
            "returnParameters": {
              "id": 4022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34021:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4067,
            "nodeType": "FunctionDefinition",
            "src": "34287:308:3",
            "nodes": [],
            "body": {
              "id": 4066,
              "nodeType": "Block",
              "src": "34399:196:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4051,
                          "name": "operatorShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4960,
                          "src": "34470:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 4054,
                        "indexExpression": {
                          "id": 4052,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4041,
                          "src": "34485:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "34470:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 4055,
                      "indexExpression": {
                        "id": 4053,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "34495:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34470:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4056,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "34508:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34470:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4058,
                  "nodeType": "ExpressionStatement",
                  "src": "34470:44:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4060,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4041,
                        "src": "34553:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4061,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4043,
                        "src": "34563:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4062,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "34571:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 4063,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4048,
                        "src": "34581:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4059,
                      "name": "OperatorSharesDecreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6705,
                      "src": "34529:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 4064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34529:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4065,
                  "nodeType": "EmitStatement",
                  "src": "34524:64:3"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_decreaseOperatorShares",
            "nameLocation": "34296:23:3",
            "parameters": {
              "id": 4049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "34328:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "34320:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34320:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4043,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "34346:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "34338:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34338:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "34364:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "34354:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 4045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4044,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "34354:9:3"
                    },
                    "referencedDeclaration": 8135,
                    "src": "34354:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4048,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "34382:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "34374:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34374:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34319:70:3"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34399:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4229,
            "nodeType": "FunctionDefinition",
            "src": "35063:2938:3",
            "nodes": [],
            "body": {
              "id": 4228,
              "nodeType": "Block",
              "src": "35289:2712:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4087,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4070,
                          "src": "35307:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35325:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "35317:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4088,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "35317:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35317:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35307:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f72656d6f7665536861726573416e6451756575655769746864726177616c3a207374616b65722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 4093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35329:82:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eeef7369532366f438ecd3fb370f37e386568ad41fa2c7220885417a841f30d0",
                          "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: staker cannot be zero address\""
                        },
                        "value": "DelegationManager._removeSharesAndQueueWithdrawal: staker cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eeef7369532366f438ecd3fb370f37e386568ad41fa2c7220885417a841f30d0",
                          "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: staker cannot be zero address\""
                        }
                      ],
                      "id": 4086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35299:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35299:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4095,
                  "nodeType": "ExpressionStatement",
                  "src": "35299:113:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4097,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4078,
                            "src": "35430:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                              "typeString": "contract IStrategy[] memory"
                            }
                          },
                          "id": 4098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "35430:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "35451:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "35430:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f72656d6f7665536861726573416e6451756575655769746864726177616c3a20737472617465676965732063616e6e6f7420626520656d707479",
                        "id": 4101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35454:79:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e2966c072da1e758a88f1be98164287018cc638582e3a8153b1a87d93c1fa5a",
                          "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: strategies cannot be empty\""
                        },
                        "value": "DelegationManager._removeSharesAndQueueWithdrawal: strategies cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e2966c072da1e758a88f1be98164287018cc638582e3a8153b1a87d93c1fa5a",
                          "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: strategies cannot be empty\""
                        }
                      ],
                      "id": 4096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35422:112:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4103,
                  "nodeType": "ExpressionStatement",
                  "src": "35422:112:3"
                },
                {
                  "body": {
                    "id": 4179,
                    "nodeType": "Block",
                    "src": "35731:1544:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4112,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4072,
                            "src": "35795:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35815:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "35807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4113,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "35807:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35807:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "35795:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4130,
                        "nodeType": "IfStatement",
                        "src": "35791:264:3",
                        "trueBody": {
                          "id": 4129,
                          "nodeType": "Block",
                          "src": "35819:236:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4119,
                                    "name": "operator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4072,
                                    "src": "35893:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4120,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4070,
                                    "src": "35931:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 4121,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4078,
                                      "src": "35969:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                        "typeString": "contract IStrategy[] memory"
                                      }
                                    },
                                    "id": 4123,
                                    "indexExpression": {
                                      "id": 4122,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "35980:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "35969:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 4124,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4081,
                                      "src": "36012:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 4126,
                                    "indexExpression": {
                                      "id": 4125,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "36019:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "36012:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4118,
                                  "name": "_decreaseOperatorShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4067,
                                  "src": "35837:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,contract IStrategy,uint256)"
                                  }
                                },
                                "id": 4127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [
                                  "operator",
                                  "staker",
                                  "strategy",
                                  "shares"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "35837:203:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4128,
                              "nodeType": "ExpressionStatement",
                              "src": "35837:203:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          },
                          "id": 4135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 4131,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4078,
                              "src": "36146:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            "id": 4133,
                            "indexExpression": {
                              "id": 4132,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4105,
                              "src": "36157:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36146:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4134,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2707,
                            "src": "36163:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "36146:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4173,
                          "nodeType": "Block",
                          "src": "36722:511:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 4157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 4149,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4147,
                                        "name": "staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4070,
                                        "src": "36769:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 4148,
                                        "name": "withdrawer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4074,
                                        "src": "36779:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "36769:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "id": 4156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "36793:60:3",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 4152,
                                              "name": "strategies",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4078,
                                              "src": "36839:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                                "typeString": "contract IStrategy[] memory"
                                              }
                                            },
                                            "id": 4154,
                                            "indexExpression": {
                                              "id": 4153,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4105,
                                              "src": "36850:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "36839:13:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                                              "typeString": "contract IStrategy"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                                              "typeString": "contract IStrategy"
                                            }
                                          ],
                                          "expression": {
                                            "id": 4150,
                                            "name": "strategyManager",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4941,
                                            "src": "36794:15:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                              "typeString": "contract IStrategyManager"
                                            }
                                          },
                                          "id": 4151,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "thirdPartyTransfersForbidden",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8342,
                                          "src": "36794:44:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_contract$_IStrategy_$8135_$returns$_t_bool_$",
                                            "typeString": "function (contract IStrategy) view external returns (bool)"
                                          }
                                        },
                                        "id": 4155,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "36794:59:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "36769:84:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "44656c65676174696f6e4d616e616765722e5f72656d6f7665536861726573416e6451756575655769746864726177616c3a2077697468647261776572206d7573742062652073616d652061646472657373206173207374616b657220696620746869726450617274795472616e7366657273466f7262696464656e2061726520736574",
                                    "id": 4158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "36875:134:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_359cf9596d9054de6a5527c9453a115ba18eb088e985a817278f8384e3f1e397",
                                      "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: withdrawer must be same address as staker if thirdPartyTransfersForbidden are set\""
                                    },
                                    "value": "DelegationManager._removeSharesAndQueueWithdrawal: withdrawer must be same address as staker if thirdPartyTransfersForbidden are set"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_359cf9596d9054de6a5527c9453a115ba18eb088e985a817278f8384e3f1e397",
                                      "typeString": "literal_string \"DelegationManager._removeSharesAndQueueWithdrawal: withdrawer must be same address as staker if thirdPartyTransfersForbidden are set\""
                                    }
                                  ],
                                  "id": 4146,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "36740:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 4159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36740:287:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4160,
                              "nodeType": "ExpressionStatement",
                              "src": "36740:287:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4164,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4070,
                                    "src": "37185:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 4165,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4078,
                                      "src": "37193:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                        "typeString": "contract IStrategy[] memory"
                                      }
                                    },
                                    "id": 4167,
                                    "indexExpression": {
                                      "id": 4166,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "37204:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "37193:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 4168,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4081,
                                      "src": "37208:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 4170,
                                    "indexExpression": {
                                      "id": 4169,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "37215:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "37208:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4161,
                                    "name": "strategyManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4941,
                                    "src": "37156:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                      "typeString": "contract IStrategyManager"
                                    }
                                  },
                                  "id": 4163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "removeShares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8227,
                                  "src": "37156:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,contract IStrategy,uint256) external"
                                  }
                                },
                                "id": 4171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37156:62:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4172,
                              "nodeType": "ExpressionStatement",
                              "src": "37156:62:3"
                            }
                          ]
                        },
                        "id": 4174,
                        "nodeType": "IfStatement",
                        "src": "36142:1091:3",
                        "trueBody": {
                          "id": 4145,
                          "nodeType": "Block",
                          "src": "36187:529:3",
                          "statements": [
                            {
                              "documentation": " This call will revert if it would reduce the Staker's virtual beacon chain ETH shares below zero.\n This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive\n shares from the operator to whom the staker is delegated.\n It will also revert if the share amount being withdrawn is not a whole Gwei amount.",
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4139,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4070,
                                    "src": "36683:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 4140,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4081,
                                      "src": "36691:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 4142,
                                    "indexExpression": {
                                      "id": 4141,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "36698:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "36691:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4136,
                                    "name": "eigenPodManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4949,
                                    "src": "36654:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                                      "typeString": "contract IEigenPodManager"
                                    }
                                  },
                                  "id": 4138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "removeShares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7643,
                                  "src": "36654:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 4143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36654:47:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4144,
                              "nodeType": "ExpressionStatement",
                              "src": "36654:47:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 4178,
                        "nodeType": "UncheckedBlock",
                        "src": "37247:18:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 4176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "37259:3:3",
                              "subExpression": {
                                "id": 4175,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "37261:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4177,
                            "nodeType": "ExpressionStatement",
                            "src": "37259:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4108,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4105,
                      "src": "35707:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4109,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4078,
                        "src": "35711:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 4110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "35711:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35707:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4180,
                  "initializationExpression": {
                    "assignments": [
                      4105
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4105,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "35700:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 4180,
                        "src": "35692:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "35692:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4107,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35704:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "35692:13:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "35687:1588:3"
                },
                {
                  "assignments": [
                    4182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4182,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "37354:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4228,
                      "src": "37346:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "37346:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4186,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4183,
                      "name": "cumulativeWithdrawalsQueued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "37362:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4185,
                    "indexExpression": {
                      "id": 4184,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4070,
                      "src": "37390:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "37362:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37346:51:3"
                },
                {
                  "expression": {
                    "id": 4190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "37407:37:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4187,
                        "name": "cumulativeWithdrawalsQueued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4996,
                        "src": "37407:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4189,
                      "indexExpression": {
                        "id": 4188,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "37435:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "37407:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4191,
                  "nodeType": "ExpressionStatement",
                  "src": "37407:37:3"
                },
                {
                  "assignments": [
                    4194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4194,
                      "mutability": "mutable",
                      "name": "withdrawal",
                      "nameLocation": "37473:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4228,
                      "src": "37455:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                        "typeString": "struct IDelegationManager.Withdrawal"
                      },
                      "typeName": {
                        "id": 4193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4192,
                          "name": "Withdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6649,
                          "src": "37455:10:3"
                        },
                        "referencedDeclaration": 6649,
                        "src": "37455:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4208,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4196,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "37519:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4197,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "37552:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4198,
                        "name": "withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4074,
                        "src": "37586:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4199,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "37617:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4202,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "37655:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "37655:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "37648:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 4200,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "37648:6:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37648:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 4205,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4078,
                        "src": "37694:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      {
                        "id": 4206,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "37726:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 4195,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6649,
                      "src": "37486:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Withdrawal_$6649_storage_ptr_$",
                        "typeString": "type(struct IDelegationManager.Withdrawal storage pointer)"
                      }
                    },
                    "id": 4207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "staker",
                      "delegatedTo",
                      "withdrawer",
                      "nonce",
                      "startBlock",
                      "strategies",
                      "shares"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "37486:257:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37455:288:3"
                },
                {
                  "assignments": [
                    4210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4210,
                      "mutability": "mutable",
                      "name": "withdrawalRoot",
                      "nameLocation": "37762:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4228,
                      "src": "37754:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "37754:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4214,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4212,
                        "name": "withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "37803:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal memory"
                        }
                      ],
                      "id": 4211,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4767,
                      "src": "37779:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Withdrawal_$6649_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IDelegationManager.Withdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37779:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37754:60:3"
                },
                {
                  "expression": {
                    "id": 4219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4215,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4991,
                        "src": "37862:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 4217,
                      "indexExpression": {
                        "id": 4216,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4210,
                        "src": "37881:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "37862:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "37899:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "37862:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4220,
                  "nodeType": "ExpressionStatement",
                  "src": "37862:41:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4222,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4210,
                        "src": "37936:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4223,
                        "name": "withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "37952:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                          "typeString": "struct IDelegationManager.Withdrawal memory"
                        }
                      ],
                      "id": 4221,
                      "name": "WithdrawalQueued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6734,
                      "src": "37919:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Withdrawal_$6649_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct IDelegationManager.Withdrawal memory)"
                      }
                    },
                    "id": 4224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37919:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4225,
                  "nodeType": "EmitStatement",
                  "src": "37914:49:3"
                },
                {
                  "expression": {
                    "id": 4226,
                    "name": "withdrawalRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4210,
                    "src": "37980:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4085,
                  "id": 4227,
                  "nodeType": "Return",
                  "src": "37973:21:3"
                }
              ]
            },
            "documentation": {
              "id": 4068,
              "nodeType": "StructuredDocumentation",
              "src": "34601:457:3",
              "text": " @notice Removes `shares` in `strategies` from `staker` who is currently delegated to `operator` and queues a withdrawal to the `withdrawer`.\n @dev If the `operator` is indeed an operator, then the operator's delegated shares in the `strategies` are also decreased appropriately.\n @dev If `withdrawer` is not the same address as `staker`, then thirdPartyTransfersForbidden[strategy] must be set to false in the StrategyManager."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeSharesAndQueueWithdrawal",
            "nameLocation": "35072:31:3",
            "parameters": {
              "id": 4082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4070,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "35121:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35113:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35113:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4072,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "35146:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35138:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35138:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4074,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "35172:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35164:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35164:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4078,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "35211:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35192:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4076,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4075,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "35192:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "35192:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 4077,
                    "nodeType": "ArrayTypeName",
                    "src": "35192:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4081,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "35249:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35232:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4079,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "35232:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4080,
                    "nodeType": "ArrayTypeName",
                    "src": "35232:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35103:158:3"
            },
            "returnParameters": {
              "id": 4085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "35280:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4083,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35280:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35279:9:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4269,
            "nodeType": "FunctionDefinition",
            "src": "38292:476:3",
            "nodes": [],
            "body": {
              "id": 4268,
              "nodeType": "Block",
              "src": "38420:348:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    },
                    "id": 4247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4245,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4237,
                      "src": "38434:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4246,
                      "name": "beaconChainETHStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2707,
                      "src": "38446:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "src": "38434:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4266,
                    "nodeType": "Block",
                    "src": "38662:100:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4260,
                              "name": "withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4234,
                              "src": "38715:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4261,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4237,
                              "src": "38727:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "id": 4262,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4239,
                              "src": "38737:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4263,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4242,
                              "src": "38745:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$59726",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$59726",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "expression": {
                              "id": 4257,
                              "name": "strategyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4941,
                              "src": "38676:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                                "typeString": "contract IStrategyManager"
                              }
                            },
                            "id": 4259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawSharesAsTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8255,
                            "src": "38676:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$_t_contract$_IERC20_$59726_$returns$__$",
                              "typeString": "function (address,contract IStrategy,uint256,contract IERC20) external"
                            }
                          },
                          "id": 4264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38676:75:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4265,
                        "nodeType": "ExpressionStatement",
                        "src": "38676:75:3"
                      }
                    ]
                  },
                  "id": 4267,
                  "nodeType": "IfStatement",
                  "src": "38430:332:3",
                  "trueBody": {
                    "id": 4256,
                    "nodeType": "Block",
                    "src": "38470:186:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4251,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4232,
                              "src": "38551:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4252,
                              "name": "withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4234,
                              "src": "38588:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4253,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4239,
                              "src": "38624:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4248,
                              "name": "eigenPodManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4949,
                              "src": "38484:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                                "typeString": "contract IEigenPodManager"
                              }
                            },
                            "id": 4250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawSharesAsTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7663,
                            "src": "38484:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 4254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [
                            "podOwner",
                            "destination",
                            "shares"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "38484:161:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4255,
                        "nodeType": "ExpressionStatement",
                        "src": "38484:161:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4230,
              "nodeType": "StructuredDocumentation",
              "src": "38007:280:3",
              "text": " @notice Withdraws `shares` in `strategy` to `withdrawer`. If the shares are virtual beaconChainETH shares, then a call is ultimately forwarded to the\n `staker`s EigenPod; otherwise a call is ultimately forwarded to the `strategy` with info on the `token`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSharesAsTokens",
            "nameLocation": "38301:23:3",
            "parameters": {
              "id": 4243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4232,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "38333:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4269,
                  "src": "38325:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38325:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4234,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "38349:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4269,
                  "src": "38341:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38341:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4237,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "38371:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4269,
                  "src": "38361:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 4236,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4235,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "38361:9:3"
                    },
                    "referencedDeclaration": 8135,
                    "src": "38361:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4239,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "38389:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4269,
                  "src": "38381:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38381:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4242,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "38404:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4269,
                  "src": "38397:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4241,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4240,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "38397:6:3"
                    },
                    "referencedDeclaration": 59726,
                    "src": "38397:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38324:86:3"
            },
            "returnParameters": {
              "id": 4244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38420:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4291,
            "nodeType": "FunctionDefinition",
            "src": "38774:486:3",
            "nodes": [],
            "body": {
              "id": 4290,
              "nodeType": "Block",
              "src": "38863:397:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4275,
                          "name": "_minWithdrawalDelayBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4271,
                          "src": "38894:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4276,
                          "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4952,
                          "src": "38923:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "38894:56:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f696e697469616c697a654d696e5769746864726177616c44656c6179426c6f636b733a205f6d696e5769746864726177616c44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844524157414c5f44454c41595f424c4f434b53",
                        "id": 4278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38964:122:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55f7764329bb90461469b4dc9ee854ac704a1915ecb3ab9827179fa10411760f",
                          "typeString": "literal_string \"DelegationManager._initializeMinWithdrawalDelayBlocks: _minWithdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS\""
                        },
                        "value": "DelegationManager._initializeMinWithdrawalDelayBlocks: _minWithdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55f7764329bb90461469b4dc9ee854ac704a1915ecb3ab9827179fa10411760f",
                          "typeString": "literal_string \"DelegationManager._initializeMinWithdrawalDelayBlocks: _minWithdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS\""
                        }
                      ],
                      "id": 4274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38873:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38873:223:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4280,
                  "nodeType": "ExpressionStatement",
                  "src": "38873:223:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4282,
                        "name": "minWithdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4986,
                        "src": "39139:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4283,
                        "name": "_minWithdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "39165:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4281,
                      "name": "MinWithdrawalDelayBlocksSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6753,
                      "src": "39111:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39111:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4285,
                  "nodeType": "EmitStatement",
                  "src": "39106:85:3"
                },
                {
                  "expression": {
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4286,
                      "name": "minWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4986,
                      "src": "39201:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4287,
                      "name": "_minWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4271,
                      "src": "39228:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "39201:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "39201:52:3"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeMinWithdrawalDelayBlocks",
            "nameLocation": "38783:35:3",
            "parameters": {
              "id": 4272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "_minWithdrawalDelayBlocks",
                  "nameLocation": "38827:25:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4291,
                  "src": "38819:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38819:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38818:35:3"
            },
            "returnParameters": {
              "id": 4273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38863:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4367,
            "nodeType": "FunctionDefinition",
            "src": "39489:1259:3",
            "nodes": [],
            "body": {
              "id": 4366,
              "nodeType": "Block",
              "src": "39640:1108:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4303,
                            "name": "_strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4296,
                            "src": "39671:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 4304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "39671:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4305,
                            "name": "_withdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4299,
                            "src": "39693:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 4306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "39693:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "39671:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174696f6e4d616e616765722e5f73657453747261746567795769746864726177616c44656c6179426c6f636b733a20696e707574206c656e677468206d69736d61746368",
                        "id": 4308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39736:76:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8096c3f8fdaddeed50f3e25af353f9da7f9c55987d2abd580d00a6623f117c",
                          "typeString": "literal_string \"DelegationManager._setStrategyWithdrawalDelayBlocks: input length mismatch\""
                        },
                        "value": "DelegationManager._setStrategyWithdrawalDelayBlocks: input length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8096c3f8fdaddeed50f3e25af353f9da7f9c55987d2abd580d00a6623f117c",
                          "typeString": "literal_string \"DelegationManager._setStrategyWithdrawalDelayBlocks: input length mismatch\""
                        }
                      ],
                      "id": 4302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39650:172:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4310,
                  "nodeType": "ExpressionStatement",
                  "src": "39650:172:3"
                },
                {
                  "assignments": [
                    4312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4312,
                      "mutability": "mutable",
                      "name": "numStrats",
                      "nameLocation": "39840:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4366,
                      "src": "39832:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "39832:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4315,
                  "initialValue": {
                    "expression": {
                      "id": 4313,
                      "name": "_strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4296,
                      "src": "39852:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 4314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "39852:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39832:38:3"
                },
                {
                  "body": {
                    "id": 4364,
                    "nodeType": "Block",
                    "src": "39920:822:3",
                    "statements": [
                      {
                        "assignments": [
                          4328
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4328,
                            "mutability": "mutable",
                            "name": "strategy",
                            "nameLocation": "39944:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 4364,
                            "src": "39934:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            },
                            "typeName": {
                              "id": 4327,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4326,
                                "name": "IStrategy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 8135,
                                "src": "39934:9:3"
                              },
                              "referencedDeclaration": 8135,
                              "src": "39934:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4332,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4329,
                            "name": "_strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4296,
                            "src": "39955:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 4331,
                          "indexExpression": {
                            "id": 4330,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4317,
                            "src": "39967:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "39955:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "39934:35:3"
                      },
                      {
                        "assignments": [
                          4334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4334,
                            "mutability": "mutable",
                            "name": "prevStrategyWithdrawalDelayBlocks",
                            "nameLocation": "39991:33:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 4364,
                            "src": "39983:41:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "39983:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4338,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4335,
                            "name": "strategyWithdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5005,
                            "src": "40027:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                              "typeString": "mapping(contract IStrategy => uint256)"
                            }
                          },
                          "id": 4337,
                          "indexExpression": {
                            "id": 4336,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4328,
                            "src": "40057:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "40027:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "39983:83:3"
                      },
                      {
                        "assignments": [
                          4340
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4340,
                            "mutability": "mutable",
                            "name": "newStrategyWithdrawalDelayBlocks",
                            "nameLocation": "40088:32:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 4364,
                            "src": "40080:40:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4339,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "40080:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4344,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4341,
                            "name": "_withdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4299,
                            "src": "40123:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 4343,
                          "indexExpression": {
                            "id": 4342,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4317,
                            "src": "40146:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "40123:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "40080:68:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4346,
                                "name": "newStrategyWithdrawalDelayBlocks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4340,
                                "src": "40187:32:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 4347,
                                "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4952,
                                "src": "40223:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "40187:63:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c65676174696f6e4d616e616765722e5f73657453747261746567795769746864726177616c44656c6179426c6f636b733a205f7769746864726177616c44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844524157414c5f44454c41595f424c4f434b53",
                              "id": 4349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "40268:117:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b162228790574f2c9d024516316332653db695b4f8d6d6c5c6c139045abdb9f",
                                "typeString": "literal_string \"DelegationManager._setStrategyWithdrawalDelayBlocks: _withdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS\""
                              },
                              "value": "DelegationManager._setStrategyWithdrawalDelayBlocks: _withdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b162228790574f2c9d024516316332653db695b4f8d6d6c5c6c139045abdb9f",
                                "typeString": "literal_string \"DelegationManager._setStrategyWithdrawalDelayBlocks: _withdrawalDelayBlocks cannot be > MAX_WITHDRAWAL_DELAY_BLOCKS\""
                              }
                            ],
                            "id": 4345,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "40162:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40162:237:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4351,
                        "nodeType": "ExpressionStatement",
                        "src": "40162:237:3"
                      },
                      {
                        "expression": {
                          "id": 4356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4352,
                              "name": "strategyWithdrawalDelayBlocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5005,
                              "src": "40465:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                                "typeString": "mapping(contract IStrategy => uint256)"
                              }
                            },
                            "id": 4354,
                            "indexExpression": {
                              "id": 4353,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4328,
                              "src": "40495:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "40465:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4355,
                            "name": "newStrategyWithdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4340,
                            "src": "40507:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "40465:74:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4357,
                        "nodeType": "ExpressionStatement",
                        "src": "40465:74:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4359,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4328,
                              "src": "40608:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "id": 4360,
                              "name": "prevStrategyWithdrawalDelayBlocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4334,
                              "src": "40634:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4361,
                              "name": "newStrategyWithdrawalDelayBlocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4340,
                              "src": "40685:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4358,
                            "name": "StrategyWithdrawalDelayBlocksSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6763,
                            "src": "40558:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$8135_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IStrategy,uint256,uint256)"
                            }
                          },
                          "id": 4362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40558:173:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4363,
                        "nodeType": "EmitStatement",
                        "src": "40553:178:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4320,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4317,
                      "src": "39900:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4321,
                      "name": "numStrats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4312,
                      "src": "39904:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "39900:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4365,
                  "initializationExpression": {
                    "assignments": [
                      4317
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4317,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "39893:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 4365,
                        "src": "39885:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4316,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "39885:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4319,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "39897:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "39885:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "39915:3:3",
                      "subExpression": {
                        "id": 4323,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4317,
                        "src": "39917:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4325,
                    "nodeType": "ExpressionStatement",
                    "src": "39915:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "39880:862:3"
                }
              ]
            },
            "documentation": {
              "id": 4292,
              "nodeType": "StructuredDocumentation",
              "src": "39266:218:3",
              "text": " @notice Sets the withdrawal delay blocks for each strategy in `_strategies` to `_withdrawalDelayBlocks`.\n gets called when initializing contract or by calling `setStrategyWithdrawalDelayBlocks`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setStrategyWithdrawalDelayBlocks",
            "nameLocation": "39498:33:3",
            "parameters": {
              "id": 4300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4296,
                  "mutability": "mutable",
                  "name": "_strategies",
                  "nameLocation": "39562:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4367,
                  "src": "39541:32:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4294,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4293,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "39541:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "39541:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 4295,
                    "nodeType": "ArrayTypeName",
                    "src": "39541:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4299,
                  "mutability": "mutable",
                  "name": "_withdrawalDelayBlocks",
                  "nameLocation": "39602:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4367,
                  "src": "39583:41:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4297,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "39583:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4298,
                    "nodeType": "ArrayTypeName",
                    "src": "39583:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39531:99:3"
            },
            "returnParameters": {
              "id": 4301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39640:0:3"
            },
            "scope": 4907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4386,
            "nodeType": "FunctionDefinition",
            "src": "41357:227:3",
            "nodes": [],
            "body": {
              "id": 4385,
              "nodeType": "Block",
              "src": "41414:170:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4373,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "41428:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "41428:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4375,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "41445:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "41428:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4383,
                    "nodeType": "Block",
                    "src": "41519:59:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4380,
                            "name": "_calculateDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4906,
                            "src": "41540:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 4381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "41540:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 4372,
                        "id": 4382,
                        "nodeType": "Return",
                        "src": "41533:34:3"
                      }
                    ]
                  },
                  "id": 4384,
                  "nodeType": "IfStatement",
                  "src": "41424:154:3",
                  "trueBody": {
                    "id": 4379,
                    "nodeType": "Block",
                    "src": "41464:49:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4377,
                          "name": "_DOMAIN_SEPARATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4937,
                          "src": "41485:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 4372,
                        "id": 4378,
                        "nodeType": "Return",
                        "src": "41478:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7077
            ],
            "documentation": {
              "id": 4368,
              "nodeType": "StructuredDocumentation",
              "src": "40968:384:3",
              "text": " @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID.\n @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n for more detailed information please read EIP-712."
            },
            "functionSelector": "f698da25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "domainSeparator",
            "nameLocation": "41366:15:3",
            "parameters": {
              "id": 4369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41381:2:3"
            },
            "returnParameters": {
              "id": 4372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4386,
                  "src": "41405:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4370,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "41405:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41404:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4405,
            "nodeType": "FunctionDefinition",
            "src": "41696:123:3",
            "nodes": [],
            "body": {
              "id": 4404,
              "nodeType": "Block",
              "src": "41760:59:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4394,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4971,
                            "src": "41778:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4396,
                          "indexExpression": {
                            "id": 4395,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "41790:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "41778:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "41809:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "41801:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4397,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "41801:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "41801:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "41778:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4402,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "41777:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4393,
                  "id": 4403,
                  "nodeType": "Return",
                  "src": "41770:42:3"
                }
              ]
            },
            "baseFunctions": [
              6970
            ],
            "documentation": {
              "id": 4387,
              "nodeType": "StructuredDocumentation",
              "src": "41590:101:3",
              "text": " @notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "3e28391d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelegated",
            "nameLocation": "41705:11:3",
            "parameters": {
              "id": 4390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4389,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "41725:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4405,
                  "src": "41717:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "41717:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41716:16:3"
            },
            "returnParameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4405,
                  "src": "41754:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "41754:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41753:6:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4425,
            "nodeType": "FunctionDefinition",
            "src": "41926:148:3",
            "nodes": [],
            "body": {
              "id": 4424,
              "nodeType": "Block",
              "src": "41991:83:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4413,
                              "name": "_operatorDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4966,
                              "src": "42009:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                                "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                              }
                            },
                            "id": 4415,
                            "indexExpression": {
                              "id": 4414,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4408,
                              "src": "42026:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "42009:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                              "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                            }
                          },
                          "id": 4416,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "earningsReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6606,
                          "src": "42009:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "42064:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "42056:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "42056:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "42056:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "42009:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4422,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "42008:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4412,
                  "id": 4423,
                  "nodeType": "Return",
                  "src": "42001:66:3"
                }
              ]
            },
            "baseFunctions": [
              6978
            ],
            "documentation": {
              "id": 4406,
              "nodeType": "StructuredDocumentation",
              "src": "41825:96:3",
              "text": " @notice Returns true is an operator has previously registered for delegation."
            },
            "functionSelector": "6d70f7ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "41935:10:3",
            "parameters": {
              "id": 4409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4408,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "41954:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "41946:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "41946:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41945:18:3"
            },
            "returnParameters": {
              "id": 4412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "41985:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "41985:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41984:6:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4439,
            "nodeType": "FunctionDefinition",
            "src": "42177:140:3",
            "nodes": [],
            "body": {
              "id": 4438,
              "nodeType": "Block",
              "src": "42267:50:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4434,
                      "name": "_operatorDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4966,
                      "src": "42284:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                        "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                      }
                    },
                    "id": 4436,
                    "indexExpression": {
                      "id": 4435,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4428,
                      "src": "42301:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "42284:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                      "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                    }
                  },
                  "functionReturnParameters": 4433,
                  "id": 4437,
                  "nodeType": "Return",
                  "src": "42277:33:3"
                }
              ]
            },
            "baseFunctions": [
              6905
            ],
            "documentation": {
              "id": 4426,
              "nodeType": "StructuredDocumentation",
              "src": "42080:92:3",
              "text": " @notice Returns the OperatorDetails struct associated with an `operator`."
            },
            "functionSelector": "c5e480db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorDetails",
            "nameLocation": "42186:15:3",
            "parameters": {
              "id": 4429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "42210:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4439,
                  "src": "42202:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42202:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42201:18:3"
            },
            "returnParameters": {
              "id": 4433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4439,
                  "src": "42243:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_memory_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 4431,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4430,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "42243:15:3"
                    },
                    "referencedDeclaration": 6613,
                    "src": "42243:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42242:24:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4452,
            "nodeType": "FunctionDefinition",
            "src": "42407:143:3",
            "nodes": [],
            "body": {
              "id": 4451,
              "nodeType": "Block",
              "src": "42483:67:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 4446,
                        "name": "_operatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4966,
                        "src": "42500:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                          "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                        }
                      },
                      "id": 4448,
                      "indexExpression": {
                        "id": 4447,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4441,
                        "src": "42517:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "42500:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                        "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                      }
                    },
                    "id": 4449,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "earningsReceiver",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6606,
                    "src": "42500:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4445,
                  "id": 4450,
                  "nodeType": "Return",
                  "src": "42493:50:3"
                }
              ]
            },
            "baseFunctions": [
              6912
            ],
            "functionSelector": "5f966f14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earningsReceiver",
            "nameLocation": "42416:16:3",
            "parameters": {
              "id": 4442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4441,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "42441:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4452,
                  "src": "42433:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42433:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42432:18:3"
            },
            "returnParameters": {
              "id": 4445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4452,
                  "src": "42474:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42474:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42473:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4466,
            "nodeType": "FunctionDefinition",
            "src": "42642:147:3",
            "nodes": [],
            "body": {
              "id": 4465,
              "nodeType": "Block",
              "src": "42720:69:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 4460,
                        "name": "_operatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4966,
                        "src": "42737:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                          "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                        }
                      },
                      "id": 4462,
                      "indexExpression": {
                        "id": 4461,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4455,
                        "src": "42754:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "42737:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                        "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                      }
                    },
                    "id": 4463,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "delegationApprover",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6609,
                    "src": "42737:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4459,
                  "id": 4464,
                  "nodeType": "Return",
                  "src": "42730:52:3"
                }
              ]
            },
            "baseFunctions": [
              6920
            ],
            "documentation": {
              "id": 4453,
              "nodeType": "StructuredDocumentation",
              "src": "42556:81:3",
              "text": " @notice Returns the delegationApprover account for an operator"
            },
            "functionSelector": "3cdeb5e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegationApprover",
            "nameLocation": "42651:18:3",
            "parameters": {
              "id": 4456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4455,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "42678:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4466,
                  "src": "42670:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42670:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42669:18:3"
            },
            "returnParameters": {
              "id": 4459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4466,
                  "src": "42711:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42711:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42710:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4480,
            "nodeType": "FunctionDefinition",
            "src": "42879:159:3",
            "nodes": [],
            "body": {
              "id": 4479,
              "nodeType": "Block",
              "src": "42963:75:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 4474,
                        "name": "_operatorDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4966,
                        "src": "42980:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorDetails_$6613_storage_$",
                          "typeString": "mapping(address => struct IDelegationManager.OperatorDetails storage ref)"
                        }
                      },
                      "id": 4476,
                      "indexExpression": {
                        "id": 4475,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "42997:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "42980:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage",
                        "typeString": "struct IDelegationManager.OperatorDetails storage ref"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakerOptOutWindowBlocks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6612,
                    "src": "42980:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 4473,
                  "id": 4478,
                  "nodeType": "Return",
                  "src": "42973:58:3"
                }
              ]
            },
            "baseFunctions": [
              6928
            ],
            "documentation": {
              "id": 4467,
              "nodeType": "StructuredDocumentation",
              "src": "42795:79:3",
              "text": " @notice Returns the stakerOptOutWindowBlocks for an operator"
            },
            "functionSelector": "16928365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakerOptOutWindowBlocks",
            "nameLocation": "42888:24:3",
            "parameters": {
              "id": 4470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "42921:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "42913:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42913:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42912:18:3"
            },
            "returnParameters": {
              "id": 4473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4472,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "42954:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42954:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42953:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4533,
            "nodeType": "FunctionDefinition",
            "src": "43128:368:3",
            "nodes": [],
            "body": {
              "id": 4532,
              "nodeType": "Block",
              "src": "43265:231:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4497,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "43292:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4532,
                      "src": "43275:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "43275:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4496,
                        "nodeType": "ArrayTypeName",
                        "src": "43275:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4504,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4501,
                          "name": "strategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4487,
                          "src": "43315:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                            "typeString": "contract IStrategy[] memory"
                          }
                        },
                        "id": 4502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "43315:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "43301:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "43305:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4499,
                        "nodeType": "ArrayTypeName",
                        "src": "43305:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 4503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43301:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43275:58:3"
                },
                {
                  "body": {
                    "id": 4528,
                    "nodeType": "Block",
                    "src": "43391:76:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4516,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4497,
                              "src": "43405:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4518,
                            "indexExpression": {
                              "id": 4517,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4506,
                              "src": "43412:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "43405:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4519,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4960,
                                "src": "43417:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                                }
                              },
                              "id": 4521,
                              "indexExpression": {
                                "id": 4520,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4483,
                                "src": "43432:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "43417:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                                "typeString": "mapping(contract IStrategy => uint256)"
                              }
                            },
                            "id": 4525,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4522,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4487,
                                "src": "43442:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                }
                              },
                              "id": 4524,
                              "indexExpression": {
                                "id": 4523,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4506,
                                "src": "43453:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "43442:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "43417:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "43405:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4527,
                        "nodeType": "ExpressionStatement",
                        "src": "43405:51:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4509,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4506,
                      "src": "43363:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4510,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4487,
                        "src": "43367:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 4511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "43367:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "43363:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4529,
                  "initializationExpression": {
                    "assignments": [
                      4506
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4506,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "43356:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 4529,
                        "src": "43348:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "43348:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4508,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "43360:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "43348:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "43386:3:3",
                      "subExpression": {
                        "id": 4513,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4506,
                        "src": "43388:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4515,
                    "nodeType": "ExpressionStatement",
                    "src": "43386:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "43343:124:3"
                },
                {
                  "expression": {
                    "id": 4530,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4497,
                    "src": "43483:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 4492,
                  "id": 4531,
                  "nodeType": "Return",
                  "src": "43476:13:3"
                }
              ]
            },
            "baseFunctions": [
              6941
            ],
            "documentation": {
              "id": 4481,
              "nodeType": "StructuredDocumentation",
              "src": "43044:79:3",
              "text": "@notice Given array of strategies, returns array of shares for the operator"
            },
            "functionSelector": "90041347",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorShares",
            "nameLocation": "43137:17:3",
            "parameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4483,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "43172:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4533,
                  "src": "43164:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43164:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4487,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "43209:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4533,
                  "src": "43190:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4485,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4484,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "43190:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "43190:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 4486,
                    "nodeType": "ArrayTypeName",
                    "src": "43190:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43154:71:3"
            },
            "returnParameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4533,
                  "src": "43247:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4489,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "43247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4490,
                    "nodeType": "ArrayTypeName",
                    "src": "43247:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43246:18:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4703,
            "nodeType": "FunctionDefinition",
            "src": "43721:1765:3",
            "nodes": [],
            "body": {
              "id": 4702,
              "nodeType": "Block",
              "src": "43826:1660:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4547,
                      "mutability": "mutable",
                      "name": "podShares",
                      "nameLocation": "43910:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "43903:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 4546,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43903:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4552,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4550,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "43953:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4548,
                        "name": "eigenPodManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4949,
                        "src": "43922:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                          "typeString": "contract IEigenPodManager"
                        }
                      },
                      "id": 4549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "podOwnerShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7628,
                      "src": "43922:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
                        "typeString": "function (address) view external returns (int256)"
                      }
                    },
                    "id": 4551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43922:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43903:57:3"
                },
                {
                  "assignments": [
                    4557,
                    4560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4557,
                      "mutability": "mutable",
                      "name": "strategyManagerStrats",
                      "nameLocation": "43990:21:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "43971:40:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                        "typeString": "contract IStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4555,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4554,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8135,
                            "src": "43971:9:3"
                          },
                          "referencedDeclaration": 8135,
                          "src": "43971:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 4556,
                        "nodeType": "ArrayTypeName",
                        "src": "43971:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4560,
                      "mutability": "mutable",
                      "name": "strategyManagerShares",
                      "nameLocation": "44030:21:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "44013:38:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4558,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4559,
                        "nodeType": "ArrayTypeName",
                        "src": "44013:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4563,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "44096:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4561,
                        "name": "strategyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "44068:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                          "typeString": "contract IStrategyManager"
                        }
                      },
                      "id": 4562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8279,
                      "src": "44068:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (contract IStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 4564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44068:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43970:133:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4566,
                      "name": "podShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4547,
                      "src": "44203:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44216:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "44203:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4574,
                  "nodeType": "IfStatement",
                  "src": "44199:98:3",
                  "trueBody": {
                    "id": 4573,
                    "nodeType": "Block",
                    "src": "44219:78:3",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 4569,
                              "name": "strategyManagerStrats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4557,
                              "src": "44241:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            {
                              "id": 4570,
                              "name": "strategyManagerShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4560,
                              "src": "44264:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 4571,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "44240:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(contract IStrategy[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 4545,
                        "id": 4572,
                        "nodeType": "Return",
                        "src": "44233:53:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4579,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "44326:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "44307:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                        "typeString": "contract IStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4576,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8135,
                            "src": "44307:9:3"
                          },
                          "referencedDeclaration": 8135,
                          "src": "44307:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 4578,
                        "nodeType": "ArrayTypeName",
                        "src": "44307:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4580,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44307:29:3"
                },
                {
                  "assignments": [
                    4585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4585,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "44363:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "44346:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44346:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4584,
                        "nodeType": "ArrayTypeName",
                        "src": "44346:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4586,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44346:23:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4587,
                        "name": "strategyManagerStrats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4557,
                        "src": "44384:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 4588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "44384:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44416:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "44384:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4696,
                    "nodeType": "Block",
                    "src": "44689:753:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4624,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4579,
                            "src": "44791:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                              "typeString": "contract IStrategy[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4629,
                                    "name": "strategyManagerStrats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4557,
                                    "src": "44820:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  "id": 4630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "44820:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 4631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "44851:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "44820:32:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "44804:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (contract IStrategy[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4626,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 4625,
                                    "name": "IStrategy",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 8135,
                                    "src": "44808:9:3"
                                  },
                                  "referencedDeclaration": 8135,
                                  "src": "44808:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "id": 4627,
                                "nodeType": "ArrayTypeName",
                                "src": "44808:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                                  "typeString": "contract IStrategy[]"
                                }
                              }
                            },
                            "id": 4633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44804:49:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                              "typeString": "contract IStrategy[] memory"
                            }
                          },
                          "src": "44791:62:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                            "typeString": "contract IStrategy[] memory"
                          }
                        },
                        "id": 4635,
                        "nodeType": "ExpressionStatement",
                        "src": "44791:62:3"
                      },
                      {
                        "expression": {
                          "id": 4643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4636,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4585,
                            "src": "44867:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4640,
                                  "name": "strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4579,
                                  "src": "44890:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                    "typeString": "contract IStrategy[] memory"
                                  }
                                },
                                "id": 4641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "44890:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "44876:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4637,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "44880:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4638,
                                "nodeType": "ArrayTypeName",
                                "src": "44880:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 4642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44876:32:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "44867:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 4644,
                        "nodeType": "ExpressionStatement",
                        "src": "44867:41:3"
                      },
                      {
                        "body": {
                          "id": 4673,
                          "nodeType": "Block",
                          "src": "45062:163:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 4659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4653,
                                    "name": "strategies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4579,
                                    "src": "45080:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  "id": 4655,
                                  "indexExpression": {
                                    "id": 4654,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4646,
                                    "src": "45091:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "45080:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 4656,
                                    "name": "strategyManagerStrats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4557,
                                    "src": "45096:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                      "typeString": "contract IStrategy[] memory"
                                    }
                                  },
                                  "id": 4658,
                                  "indexExpression": {
                                    "id": 4657,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4646,
                                    "src": "45118:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "45096:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "45080:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 4660,
                              "nodeType": "ExpressionStatement",
                              "src": "45080:40:3"
                            },
                            {
                              "expression": {
                                "id": 4667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4661,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4585,
                                    "src": "45138:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 4663,
                                  "indexExpression": {
                                    "id": 4662,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4646,
                                    "src": "45145:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "45138:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 4664,
                                    "name": "strategyManagerShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4560,
                                    "src": "45150:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 4666,
                                  "indexExpression": {
                                    "id": 4665,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4646,
                                    "src": "45172:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "45150:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "45138:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4668,
                              "nodeType": "ExpressionStatement",
                              "src": "45138:36:3"
                            },
                            {
                              "id": 4672,
                              "nodeType": "UncheckedBlock",
                              "src": "45193:18:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 4670,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "45205:3:3",
                                    "subExpression": {
                                      "id": 4669,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4646,
                                      "src": "45207:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4671,
                                  "nodeType": "ExpressionStatement",
                                  "src": "45205:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4649,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4646,
                            "src": "45026:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 4650,
                              "name": "strategyManagerStrats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4557,
                              "src": "45030:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            "id": 4651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "45030:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "45026:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4674,
                        "initializationExpression": {
                          "assignments": [
                            4646
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4646,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "45019:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 4674,
                              "src": "45011:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4645,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "45011:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4648,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45023:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "45011:13:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "45006:219:3"
                      },
                      {
                        "expression": {
                          "id": 4682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4675,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4579,
                              "src": "45309:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            "id": 4680,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4676,
                                  "name": "strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4579,
                                  "src": "45320:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                    "typeString": "contract IStrategy[] memory"
                                  }
                                },
                                "id": 4677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "45320:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 4678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "45340:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "45320:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45309:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4681,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2707,
                            "src": "45345:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "45309:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 4683,
                        "nodeType": "ExpressionStatement",
                        "src": "45309:58:3"
                      },
                      {
                        "expression": {
                          "id": 4694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4684,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4585,
                              "src": "45381:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4689,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4685,
                                  "name": "strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4579,
                                  "src": "45388:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                    "typeString": "contract IStrategy[] memory"
                                  }
                                },
                                "id": 4686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "45388:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 4687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "45408:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "45388:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45381:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4692,
                                "name": "podShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4547,
                                "src": "45421:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 4691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "45413:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 4690,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "45413:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "45413:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "45381:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4695,
                        "nodeType": "ExpressionStatement",
                        "src": "45381:50:3"
                      }
                    ]
                  },
                  "id": 4697,
                  "nodeType": "IfStatement",
                  "src": "44380:1062:3",
                  "trueBody": {
                    "id": 4623,
                    "nodeType": "Block",
                    "src": "44419:264:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4591,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4579,
                            "src": "44506:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                              "typeString": "contract IStrategy[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 4596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "44535:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 4595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "44519:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (contract IStrategy[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4593,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 4592,
                                    "name": "IStrategy",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 8135,
                                    "src": "44523:9:3"
                                  },
                                  "referencedDeclaration": 8135,
                                  "src": "44523:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "id": 4594,
                                "nodeType": "ArrayTypeName",
                                "src": "44523:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                                  "typeString": "contract IStrategy[]"
                                }
                              }
                            },
                            "id": 4597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44519:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                              "typeString": "contract IStrategy[] memory"
                            }
                          },
                          "src": "44506:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                            "typeString": "contract IStrategy[] memory"
                          }
                        },
                        "id": 4599,
                        "nodeType": "ExpressionStatement",
                        "src": "44506:31:3"
                      },
                      {
                        "expression": {
                          "id": 4606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4600,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4585,
                            "src": "44551:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 4604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "44574:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 4603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "44560:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4601,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "44564:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4602,
                                "nodeType": "ArrayTypeName",
                                "src": "44564:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 4605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44560:16:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "44551:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 4607,
                        "nodeType": "ExpressionStatement",
                        "src": "44551:25:3"
                      },
                      {
                        "expression": {
                          "id": 4612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4608,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4579,
                              "src": "44590:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                "typeString": "contract IStrategy[] memory"
                              }
                            },
                            "id": 4610,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44601:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "44590:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4611,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2707,
                            "src": "44606:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "44590:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 4613,
                        "nodeType": "ExpressionStatement",
                        "src": "44590:38:3"
                      },
                      {
                        "expression": {
                          "id": 4621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4614,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4585,
                              "src": "44642:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4616,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44649:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "44642:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4619,
                                "name": "podShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4547,
                                "src": "44662:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 4618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "44654:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 4617,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "44654:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44654:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44642:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4622,
                        "nodeType": "ExpressionStatement",
                        "src": "44642:30:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 4698,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4579,
                        "src": "45460:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      {
                        "id": 4699,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4585,
                        "src": "45472:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 4700,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "45459:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 4545,
                  "id": 4701,
                  "nodeType": "Return",
                  "src": "45452:27:3"
                }
              ]
            },
            "documentation": {
              "id": 4534,
              "nodeType": "StructuredDocumentation",
              "src": "43502:214:3",
              "text": " @notice Returns the number of actively-delegatable shares a staker has across all strategies.\n @dev Returns two empty arrays in the case that the Staker has no actively-delegateable shares."
            },
            "functionSelector": "cf80873e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDelegatableShares",
            "nameLocation": "43730:20:3",
            "parameters": {
              "id": 4537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4536,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "43759:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "43751:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43751:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43750:16:3"
            },
            "returnParameters": {
              "id": 4545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4541,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "43788:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4539,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4538,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "43788:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "43788:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 4540,
                    "nodeType": "ArrayTypeName",
                    "src": "43788:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "43808:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4542,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "43808:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4543,
                    "nodeType": "ArrayTypeName",
                    "src": "43808:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43787:38:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4750,
            "nodeType": "FunctionDefinition",
            "src": "45814:472:3",
            "nodes": [],
            "body": {
              "id": 4749,
              "nodeType": "Block",
              "src": "45905:381:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4714,
                      "mutability": "mutable",
                      "name": "withdrawalDelay",
                      "nameLocation": "45923:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4749,
                      "src": "45915:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4713,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "45915:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4716,
                  "initialValue": {
                    "id": 4715,
                    "name": "minWithdrawalDelayBlocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4986,
                    "src": "45941:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "45915:50:3"
                },
                {
                  "body": {
                    "id": 4745,
                    "nodeType": "Block",
                    "src": "46023:225:3",
                    "statements": [
                      {
                        "assignments": [
                          4729
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4729,
                            "mutability": "mutable",
                            "name": "currWithdrawalDelay",
                            "nameLocation": "46045:19:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 4745,
                            "src": "46037:27:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4728,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "46037:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4735,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4730,
                            "name": "strategyWithdrawalDelayBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5005,
                            "src": "46067:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                              "typeString": "mapping(contract IStrategy => uint256)"
                            }
                          },
                          "id": 4734,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 4731,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4708,
                              "src": "46097:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 4733,
                            "indexExpression": {
                              "id": 4732,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4718,
                              "src": "46108:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "46097:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "46067:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "46037:74:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4736,
                            "name": "currWithdrawalDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4729,
                            "src": "46129:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4737,
                            "name": "withdrawalDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4714,
                            "src": "46151:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "46129:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4744,
                        "nodeType": "IfStatement",
                        "src": "46125:113:3",
                        "trueBody": {
                          "id": 4743,
                          "nodeType": "Block",
                          "src": "46168:70:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 4741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4739,
                                  "name": "withdrawalDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4714,
                                  "src": "46186:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4740,
                                  "name": "currWithdrawalDelay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4729,
                                  "src": "46204:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "46186:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4742,
                              "nodeType": "ExpressionStatement",
                              "src": "46186:37:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4721,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4718,
                      "src": "45995:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4722,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "45999:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      "id": 4723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "45999:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45995:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4746,
                  "initializationExpression": {
                    "assignments": [
                      4718
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4718,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "45988:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 4746,
                        "src": "45980:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4717,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45980:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4720,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45992:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "45980:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "46018:3:3",
                      "subExpression": {
                        "id": 4725,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4718,
                        "src": "46020:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4727,
                    "nodeType": "ExpressionStatement",
                    "src": "46018:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "45975:273:3"
                },
                {
                  "expression": {
                    "id": 4747,
                    "name": "withdrawalDelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4714,
                    "src": "46264:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4712,
                  "id": 4748,
                  "nodeType": "Return",
                  "src": "46257:22:3"
                }
              ]
            },
            "baseFunctions": [
              6951
            ],
            "documentation": {
              "id": 4704,
              "nodeType": "StructuredDocumentation",
              "src": "45492:317:3",
              "text": " @notice Given a list of strategies, return the minimum number of blocks that must pass to withdraw\n from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\n @param strategies The strategies to check withdrawal delays for"
            },
            "functionSelector": "0449ca39",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawalDelay",
            "nameLocation": "45823:18:3",
            "parameters": {
              "id": 4709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4708,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "45863:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4750,
                  "src": "45842:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4706,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4705,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "45842:9:3"
                      },
                      "referencedDeclaration": 8135,
                      "src": "45842:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 4707,
                    "nodeType": "ArrayTypeName",
                    "src": "45842:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45841:33:3"
            },
            "returnParameters": {
              "id": 4712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4750,
                  "src": "45896:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45896:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45895:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4767,
            "nodeType": "FunctionDefinition",
            "src": "46352:150:3",
            "nodes": [],
            "body": {
              "id": 4766,
              "nodeType": "Block",
              "src": "46445:57:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4762,
                            "name": "withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4754,
                            "src": "46483:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                              "typeString": "struct IDelegationManager.Withdrawal memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                              "typeString": "struct IDelegationManager.Withdrawal memory"
                            }
                          ],
                          "expression": {
                            "id": 4760,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "46472:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "46472:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "46472:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4759,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "46462:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46462:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4758,
                  "id": 4765,
                  "nodeType": "Return",
                  "src": "46455:40:3"
                }
              ]
            },
            "baseFunctions": [
              7094
            ],
            "documentation": {
              "id": 4751,
              "nodeType": "StructuredDocumentation",
              "src": "46292:55:3",
              "text": "@notice Returns the keccak256 hash of `withdrawal`."
            },
            "functionSelector": "597b36da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawalRoot",
            "nameLocation": "46361:23:3",
            "parameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4754,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "46403:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "46385:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 4753,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4752,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "46385:10:3"
                    },
                    "referencedDeclaration": 6649,
                    "src": "46385:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46384:30:3"
            },
            "returnParameters": {
              "id": 4758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "46436:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "46436:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46435:9:3"
            },
            "scope": 4907,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4793,
            "nodeType": "FunctionDefinition",
            "src": "46790:408:3",
            "nodes": [],
            "body": {
              "id": 4792,
              "nodeType": "Block",
              "src": "46954:244:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4780,
                      "mutability": "mutable",
                      "name": "currentStakerNonce",
                      "nameLocation": "47016:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4792,
                      "src": "47008:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4779,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47008:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4784,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4781,
                      "name": "stakerNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "47037:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4783,
                    "indexExpression": {
                      "id": 4782,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4770,
                      "src": "47049:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "47037:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47008:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4786,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "47146:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4787,
                        "name": "currentStakerNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4780,
                        "src": "47154:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4788,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "47174:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4789,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4774,
                        "src": "47184:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4785,
                      "name": "calculateStakerDelegationDigestHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4835,
                      "src": "47110:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,address,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 4790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47110:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4778,
                  "id": 4791,
                  "nodeType": "Return",
                  "src": "47103:88:3"
                }
              ]
            },
            "baseFunctions": [
              7023
            ],
            "documentation": {
              "id": 4768,
              "nodeType": "StructuredDocumentation",
              "src": "46508:277:3",
              "text": " @notice Calculates the digestHash for a `staker` to sign to delegate to an `operator`\n @param staker The signing staker\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"
            },
            "functionSelector": "1bbce091",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurrentStakerDelegationDigestHash",
            "nameLocation": "46799:42:3",
            "parameters": {
              "id": 4775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "46859:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4793,
                  "src": "46851:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46851:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4772,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "46883:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4793,
                  "src": "46875:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46875:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "46909:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4793,
                  "src": "46901:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46901:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46841:80:3"
            },
            "returnParameters": {
              "id": 4778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4793,
                  "src": "46945:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "46945:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46944:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4835,
            "nodeType": "FunctionDefinition",
            "src": "47628:560:3",
            "nodes": [],
            "body": {
              "id": 4834,
              "nodeType": "Block",
              "src": "47813:375:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4808,
                      "mutability": "mutable",
                      "name": "stakerStructHash",
                      "nameLocation": "47868:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4834,
                      "src": "47860:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4807,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "47860:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4819,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4812,
                            "name": "STAKER_DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4928,
                            "src": "47921:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4813,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4796,
                            "src": "47949:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4814,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4800,
                            "src": "47957:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4815,
                            "name": "_stakerNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4798,
                            "src": "47967:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4816,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "47981:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4810,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "47910:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "47910:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47910:78:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4809,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "47887:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47887:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47860:138:3"
                },
                {
                  "assignments": [
                    4821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4821,
                      "mutability": "mutable",
                      "name": "stakerDigestHash",
                      "nameLocation": "48053:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4834,
                      "src": "48045:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4820,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "48045:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4831,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 4825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "48099:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4826,
                              "name": "domainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4386,
                              "src": "48111:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 4827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "48111:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4828,
                            "name": "stakerStructHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4808,
                            "src": "48130:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4823,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "48082:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "48082:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "48082:65:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4822,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "48072:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48072:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "48045:103:3"
                },
                {
                  "expression": {
                    "id": 4832,
                    "name": "stakerDigestHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4821,
                    "src": "48165:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4806,
                  "id": 4833,
                  "nodeType": "Return",
                  "src": "48158:23:3"
                }
              ]
            },
            "baseFunctions": [
              7037
            ],
            "documentation": {
              "id": 4794,
              "nodeType": "StructuredDocumentation",
              "src": "47204:419:3",
              "text": " @notice Calculates the digest hash to be signed and used in the `delegateToBySignature` function\n @param staker The signing staker\n @param _stakerNonce The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"
            },
            "functionSelector": "c94b5111",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateStakerDelegationDigestHash",
            "nameLocation": "47637:35:3",
            "parameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4796,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "47690:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4835,
                  "src": "47682:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47682:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4798,
                  "mutability": "mutable",
                  "name": "_stakerNonce",
                  "nameLocation": "47714:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4835,
                  "src": "47706:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47706:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4800,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "47744:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4835,
                  "src": "47736:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47736:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4802,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "47770:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4835,
                  "src": "47762:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47762:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47672:110:3"
            },
            "returnParameters": {
              "id": 4806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4835,
                  "src": "47804:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "47804:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47803:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4880,
            "nodeType": "FunctionDefinition",
            "src": "48784:630:3",
            "nodes": [],
            "body": {
              "id": 4879,
              "nodeType": "Block",
              "src": "49008:406:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4852,
                      "mutability": "mutable",
                      "name": "approverStructHash",
                      "nameLocation": "49063:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4879,
                      "src": "49055:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4851,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "49055:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4864,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4856,
                            "name": "DELEGATION_APPROVAL_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4934,
                            "src": "49118:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4857,
                            "name": "_delegationApprover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4842,
                            "src": "49148:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4858,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4838,
                            "src": "49169:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4859,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4840,
                            "src": "49177:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4860,
                            "name": "approverSalt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4844,
                            "src": "49187:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4861,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4846,
                            "src": "49201:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4854,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "49107:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "49107:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49107:101:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4853,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "49084:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49084:134:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49055:163:3"
                },
                {
                  "assignments": [
                    4866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4866,
                      "mutability": "mutable",
                      "name": "approverDigestHash",
                      "nameLocation": "49273:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 4879,
                      "src": "49265:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4865,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "49265:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4876,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 4870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "49321:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4871,
                              "name": "domainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4386,
                              "src": "49333:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 4872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "49333:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4873,
                            "name": "approverStructHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4852,
                            "src": "49352:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4868,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "49304:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "49304:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49304:67:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4867,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "49294:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49294:78:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49265:107:3"
                },
                {
                  "expression": {
                    "id": 4877,
                    "name": "approverDigestHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4866,
                    "src": "49389:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4850,
                  "id": 4878,
                  "nodeType": "Return",
                  "src": "49382:25:3"
                }
              ]
            },
            "baseFunctions": [
              7053
            ],
            "documentation": {
              "id": 4836,
              "nodeType": "StructuredDocumentation",
              "src": "48194:585:3",
              "text": " @notice Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\n @param staker The account delegating their stake\n @param operator The account receiving delegated stake\n @param _delegationApprover the operator's `delegationApprover` who will be signing the delegationHash (in general)\n @param approverSalt A unique and single use value associated with the approver signature.\n @param expiry Time after which the approver's signature becomes invalid"
            },
            "functionSelector": "0b9f487a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDelegationApprovalDigestHash",
            "nameLocation": "48793:37:3",
            "parameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4838,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "48848:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48840:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48840:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4840,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "48872:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48864:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48864:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4842,
                  "mutability": "mutable",
                  "name": "_delegationApprover",
                  "nameLocation": "48898:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48890:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48890:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4844,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "48935:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48927:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4843,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "48927:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4846,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "48965:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48957:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "48957:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48830:147:3"
            },
            "returnParameters": {
              "id": 4850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "48999:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "48999:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48998:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4906,
            "nodeType": "FunctionDefinition",
            "src": "49522:193:3",
            "nodes": [],
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "49591:124:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4889,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4922,
                            "src": "49629:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "456967656e4c61796572",
                                    "id": 4893,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "49662:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                      "typeString": "literal_string \"EigenLayer\""
                                    },
                                    "value": "EigenLayer"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                      "typeString": "literal_string \"EigenLayer\""
                                    }
                                  ],
                                  "id": 4892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "49656:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 4891,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "49656:5:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "49656:19:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 4890,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "49646:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 4895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "49646:30:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 4896,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "49678:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "49678:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 4900,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "49701:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DelegationManager_$4907",
                                  "typeString": "contract DelegationManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DelegationManager_$4907",
                                  "typeString": "contract DelegationManager"
                                }
                              ],
                              "id": 4899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "49693:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4898,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "49693:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "49693:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4887,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "49618:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "49618:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49618:89:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4886,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "49608:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49608:100:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4885,
                  "id": 4904,
                  "nodeType": "Return",
                  "src": "49601:107:3"
                }
              ]
            },
            "documentation": {
              "id": 4881,
              "nodeType": "StructuredDocumentation",
              "src": "49420:97:3",
              "text": " @dev Recalculates the domain separator when the chainid changes due to a fork."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateDomainSeparator",
            "nameLocation": "49531:25:3",
            "parameters": {
              "id": 4882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49556:2:3"
            },
            "returnParameters": {
              "id": 4885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "49582:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4883,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "49582:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49581:9:3"
            },
            "scope": 4907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2674,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57298,
              "src": "1167:13:3"
            },
            "id": 2675,
            "nodeType": "InheritanceSpecifier",
            "src": "1167:13:3"
          },
          {
            "baseName": {
              "id": 2676,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57147,
              "src": "1182:18:3"
            },
            "id": 2677,
            "nodeType": "InheritanceSpecifier",
            "src": "1182:18:3"
          },
          {
            "baseName": {
              "id": 2678,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "1202:8:3"
            },
            "id": 2679,
            "nodeType": "InheritanceSpecifier",
            "src": "1202:8:3"
          },
          {
            "baseName": {
              "id": 2680,
              "name": "DelegationManagerStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5036,
              "src": "1212:24:3"
            },
            "id": 2681,
            "nodeType": "InheritanceSpecifier",
            "src": "1212:24:3"
          },
          {
            "baseName": {
              "id": 2682,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57357,
              "src": "1238:26:3"
            },
            "id": 2683,
            "nodeType": "InheritanceSpecifier",
            "src": "1238:26:3"
          }
        ],
        "canonicalName": "DelegationManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2673,
          "nodeType": "StructuredDocumentation",
          "src": "421:715:3",
          "text": " @title DelegationManager\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice  This is the contract for delegation in EigenLayer. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayer\n - allowing operators to specify parameters related to stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time)\n - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4907,
          57357,
          5036,
          7102,
          7794,
          10782,
          7748,
          57147,
          57642,
          57298
        ],
        "name": "DelegationManager",
        "nameLocation": "1146:17:3",
        "scope": 4908,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 3
}