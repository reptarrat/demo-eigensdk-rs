{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "_delegation",
          "type": "address"
        },
        {
          "internalType": "contract IEigenPodManager",
          "name": "_eigenPodManager",
          "type": "address"
        },
        {
          "internalType": "contract ISlasher",
          "name": "_slasher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "StrategyWhitelisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "UpdatedThirdPartyTransfersForbidden",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPOSIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "addShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToWhitelist",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "thirdPartyTransfersForbiddenValues",
          "type": "bool[]"
        }
      ],
      "name": "addStrategiesToDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        }
      ],
      "name": "calculateWithdrawalRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositIntoStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "depositIntoStrategyWithSignature",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodManager",
      "outputs": [
        {
          "internalType": "contract IEigenPodManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getDeposits",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialStrategyWhitelister",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        }
      ],
      "name": "migrateQueuedWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "removeShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToRemoveFromWhitelist",
          "type": "address[]"
        }
      ],
      "name": "removeStrategiesFromDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newStrategyWhitelister",
          "type": "address"
        }
      ],
      "name": "setStrategyWhitelister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setThirdPartyTransfersForbidden",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerStrategyList",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "stakerStrategyListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerStrategyShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyIsWhitelistedForDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyWhitelister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "thirdPartyTransfersForbidden",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawSharesAsTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "withdrawalRootPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "969:22193:6:-:0;;;2277:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4342:24:7;;;;;4376:34;;;;;4420:18;;;;2479:22:6::1;:20;:22::i;:::-;-1:-1:-1::0;;2531:13:6::1;2511:33;::::0;-1:-1:-1;969:22193:6;;5388:279:60;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:60;;1025:2:156;5447:66:60;;;1007:21:156;1064:2;1044:18;;;1037:30;1103:34;1083:18;;;1076:62;-1:-1:-1;;;1154:18:156;;;1147:37;1201:19;;5447:66:60;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:60;5588:15;5573:30;;;;;;5622:28;;1373:36:156;;;5622:28:60;;1361:2:156;1346:18;5622:28:60;;;;;;;5523:138;5388:279::o;14:151:156:-;-1:-1:-1;;;;;109:31:156;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:648::-;327:6;335;343;396:2;384:9;375:7;371:23;367:32;364:52;;;412:1;409;402:12;364:52;444:9;438:16;463:51;508:5;463:51;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:53:156;562:25;596:53;:::i;:::-;720:2;705:18;;699:25;668:7;;-1:-1:-1;733:53:156;699:25;733:53;:::i;:::-;805:7;795:17;;;170:648;;;;;:::o;1231:184::-;969:22193:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102275760003560e01c806394f649dd11610130578063c6656702116100b8578063df5cf7231161007c578063df5cf72314610596578063e7a050aa146105bd578063f2fde38b146105d0578063f698da25146105e3578063fabc1cbc146105eb57600080fd5b8063c665670214610520578063cbc2bd6214610533578063cd293f6f14610546578063cf756fdf14610570578063df5b35471461058357600080fd5b8063b43b514b116100ff578063b43b514b146104b1578063b5d8b5b8146104c4578063c3c6b3a9146104d7578063c4623ea1146104fa578063c608c7f31461050d57600080fd5b806394f649dd14610433578063967fc0d2146104545780639b4da03d14610467578063b13442711461048a57600080fd5b80635c975abb116101b35780637ecebe00116101825780637ecebe00146103b3578063886f1195146103d35780638b8aac3c146103e65780638c80d4e51461040f5780638da5cb5b1461042257600080fd5b80635c975abb14610355578063663c1de41461035d578063715018a6146103805780637a7e0d921461038857600080fd5b80634665bcda116101fa5780634665bcda146102a157806348825e94146102e05780634e5a426314610307578063595c6a671461031a5780635ac86ab71461032257600080fd5b806310d67a2f1461022c578063136439dd1461024157806320606b701461025457806332e89ace1461028e575b600080fd5b61023f61023a366004612b42565b6105fe565b005b61023f61024f366004612b5f565b6106ba565b61027b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6040519081526020015b60405180910390f35b61027b61029c366004612bf8565b6107f9565b6102c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610285565b61027b7f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f181565b61023f610315366004612ce5565b610adf565b61023f610b17565b610345610330366004612d1e565b609854600160ff9092169190911b9081161490565b6040519015158152602001610285565b60985461027b565b61034561036b366004612b42565b60d16020526000908152604090205460ff1681565b61023f610bde565b61027b610396366004612d41565b60cd60209081526000928352604080842090915290825290205481565b61027b6103c1366004612b42565b60ca6020526000908152604090205481565b6097546102c8906001600160a01b031681565b61027b6103f4366004612b42565b6001600160a01b0316600090815260ce602052604090205490565b61023f61041d366004612d6f565b610bf2565b6033546001600160a01b03166102c8565b610446610441366004612b42565b610c4b565b604051610285929190612e24565b60cb546102c8906001600160a01b031681565b610345610475366004612b42565b60d36020526000908152604090205460ff1681565b6102c87f000000000000000000000000000000000000000000000000000000000000000081565b61027b6104bf366004612fcd565b610dcb565b61023f6104d23660046130e8565b610e18565b6103456104e5366004612b5f565b60cf6020526000908152604090205460ff1681565b61023f61050836600461312a565b610f8c565b61023f61051b36600461317b565b610fe0565b61023f61052e366004612b42565b611098565b6102c86105413660046131ce565b6110a9565b610559610554366004612fcd565b6110e1565b604080519215158352602083019190915201610285565b61023f61057e36600461312a565b611175565b61023f6105913660046131fa565b6112a9565b6102c87f000000000000000000000000000000000000000000000000000000000000000081565b61027b6105cb366004612d6f565b6114d2565b61023f6105de366004612b42565b61159b565b61027b611611565b61023f6105f9366004612b5f565b61164f565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190613266565b6001600160a01b0316336001600160a01b0316146106ae5760405162461bcd60e51b81526004016106a590613283565b60405180910390fd5b6106b7816117ab565b50565b60975460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906132cd565b6107425760405162461bcd60e51b81526004016106a5906132ea565b609854818116146107bb5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016106a5565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b6098546000908190600190811614156108505760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016106a5565b600260655414156108a35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106a5565b60026065556001600160a01b038816600090815260d3602052604090205460ff161561094a5760405162461bcd60e51b815260206004820152604a60248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207468697264207472616e736665726064820152691cc8191a5cd8589b195960b21b608482015260a4016106a5565b428410156109cc5760405162461bcd60e51b815260206004820152604360248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207369676e617475726520657870696064820152621c995960ea1b608482015260a4016106a5565b6001600160a01b03858116600090815260ca602090815260408083205481517f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1938101939093528c851691830191909152928a1660608201526080810189905260a0810183905260c0810187905260e00160408051601f1981840301815291815281516020928301206001600160a01b038a16600090815260ca9093529082206001850190559150610a7c611611565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050610abf8882886118a2565b610acb888c8c8c611a61565b60016065559b9a5050505050505050505050565b60cb546001600160a01b03163314610b095760405162461bcd60e51b81526004016106a590613332565b610b138282611c30565b5050565b60975460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8391906132cd565b610b9f5760405162461bcd60e51b81526004016106a5906132ea565b600019609881905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b610be6611c9e565b610bf06000611cf8565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c3a5760405162461bcd60e51b81526004016106a59061339c565b610c45838383611d4a565b50505050565b6001600160a01b038116600090815260ce60205260408120546060918291908167ffffffffffffffff811115610c8357610c83612b88565b604051908082528060200260200182016040528015610cac578160200160208202803683370190505b50905060005b82811015610d3d576001600160a01b038616600090815260cd6020908152604080832060ce9092528220805491929184908110610cf157610cf16133fa565b60009182526020808320909101546001600160a01b031683528201929092526040019020548251839083908110610d2a57610d2a6133fa565b6020908102919091010152600101610cb2565b5060ce6000866001600160a01b03166001600160a01b031681526020019081526020016000208181805480602002602001604051908101604052809291908181526020018280548015610db957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d9b575b50505050509150935093505050915091565b80516020808301516040808501516060860151608087015160a08801519351600097610dfb979096959101613410565b604051602081830303815290604052805190602001209050919050565b60cb546001600160a01b03163314610e425760405162461bcd60e51b81526004016106a590613332565b8060005b81811015610c455760d16000858584818110610e6457610e646133fa565b9050602002016020810190610e799190612b42565b6001600160a01b0316815260208101919091526040016000205460ff1615610f8457600060d16000868685818110610eb357610eb36133fa565b9050602002016020810190610ec89190612b42565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f4074413b4b443e4e58019f2855a8765113358c7c72e39509c6af45fc0f5ba030848483818110610f2357610f236133fa565b9050602002016020810190610f389190612b42565b6040516001600160a01b03909116815260200160405180910390a1610f84848483818110610f6857610f686133fa565b9050602002016020810190610f7d9190612b42565b6000611c30565b600101610e46565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fd45760405162461bcd60e51b81526004016106a59061339c565b610c4584848484611ea6565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110285760405162461bcd60e51b81526004016106a59061339c565b604051636ce5768960e11b81526001600160a01b03858116600483015282811660248301526044820184905284169063d9caed1290606401600060405180830381600087803b15801561107a57600080fd5b505af115801561108e573d6000803e3d6000fd5b5050505050505050565b6110a0611c9e565b6106b781612133565b60ce60205281600052604060002081815481106110c557600080fd5b6000918252602090912001546001600160a01b03169150829050565b600080336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461112c5760405162461bcd60e51b81526004016106a59061339c565b600061113784610dcb565b600081815260cf60205260408120549192509060ff161561116c5750600081815260cf60205260409020805460ff1916905560015b92509050915091565b600054610100900460ff16158080156111955750600054600160ff909116105b806111af5750303b1580156111af575060005460ff166001145b6112125760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106a5565b6000805460ff191660011790558015611235576000805461ff0019166101001790555b61123d61219c565b60c95561124a8383612233565b61125385611cf8565b61125c84612133565b80156112a2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60cb546001600160a01b031633146112d35760405162461bcd60e51b81526004016106a590613332565b82811461135c5760405162461bcd60e51b815260206004820152604b60248201527f53747261746567794d616e616765722e61646453747261746567696573546f4460448201527f65706f73697457686974656c6973743a206172726179206c656e67746873206460648201526a0de40dcdee840dac2e8c6d60ab1b608482015260a4016106a5565b8260005b818110156114ca5760d1600087878481811061137e5761137e6133fa565b90506020020160208101906113939190612b42565b6001600160a01b0316815260208101919091526040016000205460ff166114c257600160d160008888858181106113cc576113cc6133fa565b90506020020160208101906113e19190612b42565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f0c35b17d91c96eb2751cd456e1252f42a386e524ef9ff26ecc9950859fdc04fe86868381811061143c5761143c6133fa565b90506020020160208101906114519190612b42565b6040516001600160a01b03909116815260200160405180910390a16114c2868683818110611481576114816133fa565b90506020020160208101906114969190612b42565b8585848181106114a8576114a86133fa565b90506020020160208101906114bd9190613489565b611c30565b600101611360565b505050505050565b6098546000908190600190811614156115295760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016106a5565b6002606554141561157c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106a5565b600260655561158d33868686611a61565b600160655595945050505050565b6115a3611c9e565b6001600160a01b0381166116085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a5565b6106b781611cf8565b60007f0000000000000000000000000000000000000000000000000000000000000000461415611642575060c95490565b61164a61219c565b905090565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c69190613266565b6001600160a01b0316336001600160a01b0316146116f65760405162461bcd60e51b81526004016106a590613283565b6098541981196098541916146117745760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016106a5565b609881905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016107ee565b6001600160a01b0381166118395760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016106a5565b609754604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383163b156119c157604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e906118e290869086906004016134fe565b602060405180830381865afa1580156118ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119239190613517565b6001600160e01b031916146119bc5760405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a4016106a5565b505050565b826001600160a01b03166119d58383612319565b6001600160a01b0316146119bc5760405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a4016106a5565b6001600160a01b038316600090815260d16020526040812054849060ff16611b075760405162461bcd60e51b815260206004820152604d60248201527f53747261746567794d616e616765722e6f6e6c7953747261746567696573576860448201527f6974656c6973746564466f724465706f7369743a207374726174656779206e6f60648201526c1d081dda1a5d195b1a5cdd1959609a1b608482015260a4016106a5565b611b1c6001600160a01b03851633878661233d565b6040516311f9fbc960e21b81526001600160a01b038581166004830152602482018590528616906347e7ef24906044016020604051808303816000875af1158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8f9190613541565b9150611b9d86858785611ea6565b604051631452b9d760e11b81526001600160a01b0387811660048301528681166024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906328a573ae90606401600060405180830381600087803b158015611c0f57600080fd5b505af1158015611c23573d6000803e3d6000fd5b5050505050949350505050565b604080516001600160a01b038416815282151560208201527f77d930df4937793473a95024d87a98fd2ccb9e92d3c2463b3dacd65d3e6a5786910160405180910390a16001600160a01b0391909116600090815260d360205260409020805460ff1916911515919091179055565b6033546001600160a01b03163314610bf05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a5565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081611dbf5760405162461bcd60e51b815260206004820152603e60248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a207360448201527f68617265416d6f756e742073686f756c64206e6f74206265207a65726f21000060648201526084016106a5565b6001600160a01b03808516600090815260cd602090815260408083209387168352929052205480831115611e515760405162461bcd60e51b815260206004820152603360248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a20736044820152720d0c2e4ca82dadeeadce840e8dede40d0d2ced606b1b60648201526084016106a5565b6001600160a01b03808616600090815260cd602090815260408083209388168352929052208382039081905590831415611e9957611e8f8585612397565b6001915050611e9f565b60009150505b9392505050565b6001600160a01b038416611f225760405162461bcd60e51b815260206004820152603960248201527f53747261746567794d616e616765722e5f6164645368617265733a207374616b60448201527f65722063616e6e6f74206265207a65726f20616464726573730000000000000060648201526084016106a5565b80611f8e5760405162461bcd60e51b815260206004820152603660248201527f53747261746567794d616e616765722e5f6164645368617265733a207368617260448201527565732073686f756c64206e6f74206265207a65726f2160501b60648201526084016106a5565b6001600160a01b03808516600090815260cd602090815260408083209386168352929052205461209f576001600160a01b038416600090815260ce6020908152604090912054106120605760405162461bcd60e51b815260206004820152605060248201527f53747261746567794d616e616765722e5f6164645368617265733a206465706f60448201527f73697420776f756c6420657863656564204d41585f5354414b45525f5354524160648201526f0a88a8eb2be9892a6a8be988a9c8ea8960831b608482015260a4016106a5565b6001600160a01b03848116600090815260ce602090815260408220805460018101825590835291200180546001600160a01b0319169184169190911790555b6001600160a01b03808516600090815260cd60209081526040808320938616835292905290812080548392906120d6908490613570565b9091555050604080516001600160a01b03868116825285811660208301528416818301526060810183905290517f7cfff908a4b583f36430b25d75964c458d8ede8a99bd61be750e97ee1b2f3a969181900360800190a150505050565b60cb54604080516001600160a01b03928316815291831660208301527f4264275e593955ff9d6146a51a4525f6ddace2e81db9391abcc9d1ca48047d29910160405180910390a160cb80546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6097546001600160a01b031615801561225457506001600160a01b03821615155b6122d65760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016106a5565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2610b13826117ab565b60008060006123288585612589565b91509150612335816125f9565b509392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610c459085906127b4565b6001600160a01b038216600090815260ce6020526040812054905b818110156124b2576001600160a01b03848116600090815260ce60205260409020805491851691839081106123e9576123e96133fa565b6000918252602090912001546001600160a01b031614156124aa576001600160a01b038416600090815260ce60205260409020805461242a90600190613588565b8154811061243a5761243a6133fa565b60009182526020808320909101546001600160a01b03878116845260ce9092526040909220805491909216919083908110612477576124776133fa565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506124b2565b6001016123b2565b8181141561253a5760405162461bcd60e51b815260206004820152604960248201527f53747261746567794d616e616765722e5f72656d6f766553747261746567794660448201527f726f6d5374616b657253747261746567794c6973743a207374726174656779206064820152681b9bdd08199bdd5b9960ba1b608482015260a4016106a5565b6001600160a01b038416600090815260ce602052604090208054806125615761256161359f565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b6000808251604114156125c05760208301516040840151606085015160001a6125b487828585612886565b945094505050506125f2565b8251604014156125ea57602083015160408401516125df868383612973565b9350935050506125f2565b506000905060025b9250929050565b600081600481111561260d5761260d6135b5565b14156126165750565b600181600481111561262a5761262a6135b5565b14156126785760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a5565b600281600481111561268c5761268c6135b5565b14156126da5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a5565b60038160048111156126ee576126ee6135b5565b14156127475760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106a5565b600481600481111561275b5761275b6135b5565b14156106b75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106a5565b6000612809826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129ac9092919063ffffffff16565b8051909150156119bc578080602001905181019061282791906132cd565b6119bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106a5565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128bd575060009050600361296a565b8460ff16601b141580156128d557508460ff16601c14155b156128e6575060009050600461296a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561293a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129635760006001925092505061296a565b9150600090505b94509492505050565b6000806001600160ff1b0383168161299060ff86901c601b613570565b905061299e87828885612886565b935093505050935093915050565b60606129bb84846000856129c3565b949350505050565b606082471015612a245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106a5565b6001600160a01b0385163b612a7b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106a5565b600080866001600160a01b03168587604051612a9791906135cb565b60006040518083038185875af1925050503d8060008114612ad4576040519150601f19603f3d011682016040523d82523d6000602084013e612ad9565b606091505b5091509150612ae9828286612af4565b979650505050505050565b60608315612b03575081611e9f565b825115612b135782518084602001fd5b8160405162461bcd60e51b81526004016106a591906135e7565b6001600160a01b03811681146106b757600080fd5b600060208284031215612b5457600080fd5b8135611e9f81612b2d565b600060208284031215612b7157600080fd5b5035919050565b8035612b8381612b2d565b919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612bc157612bc1612b88565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612bf057612bf0612b88565b604052919050565b60008060008060008060c08789031215612c1157600080fd5b8635612c1c81612b2d565b9550602087810135612c2d81612b2d565b9550604088013594506060880135612c4481612b2d565b93506080880135925060a088013567ffffffffffffffff80821115612c6857600080fd5b818a0191508a601f830112612c7c57600080fd5b813581811115612c8e57612c8e612b88565b612ca0601f8201601f19168501612bc7565b91508082528b84828501011115612cb657600080fd5b80848401858401376000848284010152508093505050509295509295509295565b80151581146106b757600080fd5b60008060408385031215612cf857600080fd5b8235612d0381612b2d565b91506020830135612d1381612cd7565b809150509250929050565b600060208284031215612d3057600080fd5b813560ff81168114611e9f57600080fd5b60008060408385031215612d5457600080fd5b8235612d5f81612b2d565b91506020830135612d1381612b2d565b600080600060608486031215612d8457600080fd5b8335612d8f81612b2d565b92506020840135612d9f81612b2d565b929592945050506040919091013590565b600081518084526020808501945080840160005b83811015612de95781516001600160a01b031687529582019590820190600101612dc4565b509495945050505050565b600081518084526020808501945080840160005b83811015612de957815187529582019590820190600101612e08565b604081526000612e376040830185612db0565b8281036020840152612e498185612df4565b95945050505050565b600067ffffffffffffffff821115612e6c57612e6c612b88565b5060051b60200190565b600082601f830112612e8757600080fd5b81356020612e9c612e9783612e52565b612bc7565b82815260059290921b84018101918181019086841115612ebb57600080fd5b8286015b84811015612edf578035612ed281612b2d565b8352918301918301612ebf565b509695505050505050565b600082601f830112612efb57600080fd5b81356020612f0b612e9783612e52565b82815260059290921b84018101918181019086841115612f2a57600080fd5b8286015b84811015612edf5780358352918301918301612f2e565b600060408284031215612f5757600080fd5b6040516040810181811067ffffffffffffffff82111715612f7a57612f7a612b88565b6040529050808235612f8b81612b2d565b815260208301356bffffffffffffffffffffffff81168114612fac57600080fd5b6020919091015292915050565b803563ffffffff81168114612b8357600080fd5b600060208284031215612fdf57600080fd5b813567ffffffffffffffff80821115612ff757600080fd5b9083019060e0828603121561300b57600080fd5b613013612b9e565b82358281111561302257600080fd5b61302e87828601612e76565b82525060208301358281111561304357600080fd5b61304f87828601612eea565b60208301525061306160408401612b78565b60408201526130738660608501612f45565b606082015261308460a08401612fb9565b608082015261309560c08401612b78565b60a082015295945050505050565b60008083601f8401126130b557600080fd5b50813567ffffffffffffffff8111156130cd57600080fd5b6020830191508360208260051b85010111156125f257600080fd5b600080602083850312156130fb57600080fd5b823567ffffffffffffffff81111561311257600080fd5b61311e858286016130a3565b90969095509350505050565b6000806000806080858703121561314057600080fd5b843561314b81612b2d565b9350602085013561315b81612b2d565b9250604085013561316b81612b2d565b9396929550929360600135925050565b6000806000806080858703121561319157600080fd5b843561319c81612b2d565b935060208501356131ac81612b2d565b92506040850135915060608501356131c381612b2d565b939692955090935050565b600080604083850312156131e157600080fd5b82356131ec81612b2d565b946020939093013593505050565b6000806000806040858703121561321057600080fd5b843567ffffffffffffffff8082111561322857600080fd5b613234888389016130a3565b9096509450602087013591508082111561324d57600080fd5b5061325a878288016130a3565b95989497509550505050565b60006020828403121561327857600080fd5b8151611e9f81612b2d565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156132df57600080fd5b8151611e9f81612cd7565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60208082526044908201527f53747261746567794d616e616765722e6f6e6c7953747261746567795768697460408201527f656c69737465723a206e6f742074686520737472617465677957686974656c6960608201526339ba32b960e11b608082015260a00190565b602080825260409082018190527f53747261746567794d616e616765722e6f6e6c7944656c65676174696f6e4d61908201527f6e616765723a206e6f74207468652044656c65676174696f6e4d616e61676572606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60e08152600061342360e0830189612db0565b82810360208401526134358189612df4565b6001600160a01b0397881660408501528651881660608501526020909601516bffffffffffffffffffffffff166080840152505063ffffffff9290921660a083015290921660c09092019190915292915050565b60006020828403121561349b57600080fd5b8135611e9f81612cd7565b60005b838110156134c15781810151838201526020016134a9565b83811115610c455750506000910152565b600081518084526134ea8160208601602086016134a6565b601f01601f19169290920160200192915050565b8281526040602082015260006129bb60408301846134d2565b60006020828403121561352957600080fd5b81516001600160e01b031981168114611e9f57600080fd5b60006020828403121561355357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156135835761358361355a565b500190565b60008282101561359a5761359a61355a565b500390565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600082516135dd8184602087016134a6565b9190910192915050565b602081526000611e9f60208301846134d256fea2646970667358221220f08e8d42e70dc4ea08c20e602d3bc8374aee27c1d8886baf47239ec2792041e564736f6c634300080c0033",
    "sourceMap": "969:22193:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5826:138:27;;;;;;:::i;:::-;;:::i;:::-;;3832:392;;;;;;:::i;:::-;;:::i;681:130:7:-;;731:80;681:130;;;;;791:25:156;;;779:2;764:18;681:130:7;;;;;;;;6409:1571:6;;;;;;:::i;:::-;;:::i;1285:49:7:-;;;;;;;;-1:-1:-1;;;;;3433:32:156;;;3415:51;;3403:2;3388:18;1285:49:7;3244:228:156;898:147:7;;949:96;898:147;;10284:194:6;;;;;;:::i;:::-;;:::i;4299:136:27:-;;;:::i;5606:149::-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;;;;4461:14:156;;4454:22;4436:41;;4424:2;4409:18;5606:149:27;4296:187:156;5418:87:27;5491:7;;5418:87;;3324:65:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2071:101:59;;;:::i;2320:77:7:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1793:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1825:37:27;;;;;-1:-1:-1;;;;;1825:37:27;;;21608:139:6;;;;;;:::i;:::-;-1:-1:-1;;;;;21707:26:6;21681:7;21707:26;;;:18;:26;;;;;:33;;21608:139;8122:191;;;;;;:::i;:::-;;:::i;1441:85:59:-;1513:6;;-1:-1:-1;;;;;1513:6:59;1441:85;;21009:504:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1966:34:7:-;;;;;-1:-1:-1;;;;;1966:34:7;;;4165:62;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1340:33;;;;;22611:549:6;;;;;;:::i;:::-;;:::i;12606:921::-;;;;;;:::i;:::-;;:::i;2790:53:7:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8441:214:6;;;;;;:::i;:::-;;:::i;8774:230::-;;;;;;:::i;:::-;;:::i;10660:147::-;;;;;;:::i;:::-;;:::i;2492:57:7:-;;;;;;:::i;:::-;;:::i;9294:532:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;14951:14:156;;14944:22;14926:41;;14998:2;14983:18;;14976:34;;;;14899:18;9294:532:6;14758:258:156;3123:431:6;;;;;;:::i;:::-;;:::i;11227:1073::-;;;;;;:::i;:::-;;:::i;1233:46:7:-;;;;;4426:274:6;;;;;;:::i;:::-;;:::i;2321:198:59:-;;;;;;:::i;:::-;;:::i;21954:227:6:-;;;:::i;4911:437:27:-;;;;;;:::i;:::-;;:::i;5826:138::-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;;;;;;;;;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;3832:392::-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;3415:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;3388:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:27;;18823:2:156;4025:107:27::1;::::0;::::1;18805:21:156::0;18862:2;18842:18;;;18835:30;18901:34;18881:18;;;18874:62;18972:26;18952:18;;;18945:54;19016:19;;4025:107:27::1;18621:420:156::0;4025:107:27::1;4142:7;:25:::0;;;4182:35:::1;::::0;791:25:156;;;4189:10:27::1;::::0;4182:35:::1;::::0;779:2:156;764:18;4182:35:27::1;;;;;;;;3832:392:::0;:::o;6409:1571:6:-;5724:7:27;;6677:14:6;;;;5695:1:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;19248:2:156;2759:52:27;;;19230:21:156;19287:2;19267:18;;;19260:30;-1:-1:-1;;;19306:18:156;;;19299:55;19371:18;;2759:52:27;19046:349:156;2759:52:27;1815:1:61::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:61;;19602:2:156;2561:63:61::1;::::0;::::1;19584:21:156::0;19641:2;19621:18;;;19614:30;19680:33;19660:18;;;19653:61;19731:18;;2561:63:61::1;19400:355:156::0;2561:63:61::1;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;6725:38:6;::::2;;::::0;;;:28:::2;:38;::::0;;;;;::::2;;6724:39;6703:160;;;::::0;-1:-1:-1;;;6703:160:6;;19962:2:156;6703:160:6::2;::::0;::::2;19944:21:156::0;20001:2;19981:18;;;19974:30;20040:34;20020:18;;;20013:62;20111:34;20091:18;;;20084:62;-1:-1:-1;;;20162:19:156;;;20155:41;20213:19;;6703:160:6::2;19760:478:156::0;6703:160:6::2;6891:15;6881:6;:25;;6873:105;;;::::0;-1:-1:-1;;;6873:105:6;;20445:2:156;6873:105:6::2;::::0;::::2;20427:21:156::0;20484:2;20464:18;;;20457:30;20523:34;20503:18;;;20496:62;20594:34;20574:18;;;20567:62;-1:-1:-1;;;20645:19:156;;;20638:34;20689:19;;6873:105:6::2;20243:471:156::0;6873:105:6::2;-1:-1:-1::0;;;;;7070:14:6;;::::2;7054:13;7070:14:::0;;;:6:::2;:14;::::0;;;;;;;;7125:68;;949:96:7::2;7125:68:6::0;;::::2;21040:25:156::0;;;;21139:15;;;21119:18;;;21112:43;;;;21191:15;;;21171:18;;;21164:43;21223:18;;;21216:34;;;21266:19;;;21259:35;;;21310:19;;;21303:35;;;21012:19;;7125:68:6::2;::::0;;-1:-1:-1;;7125:68:6;;::::2;::::0;;;;;;7115:79;;7125:68:::2;7115:79:::0;;::::2;::::0;-1:-1:-1;;;;;7228:14:6;::::2;;::::0;;;:6:::2;:14:::0;;;;;;7253:1:::2;7245:9:::0;::::2;7228:26:::0;;7115:79;-1:-1:-1;7372:17:6::2;:15;:17::i;:::-;7343:59;::::0;-1:-1:-1;;;7343:59:6::2;::::0;::::2;21607:27:156::0;21650:11;;;21643:27;;;;21686:12;;;21679:28;;;21723:12;;7343:59:6::2;;;;;;;;;;;;7333:70;;;;;;7312:91;;7729:75;7774:6;7782:10;7794:9;7729:44;:75::i;:::-;7920:53;7941:6;7949:8;7959:5;7966:6;7920:20;:53::i;:::-;1772:1:61::1;2872:7;:22:::0;7911:62:6;6409:1571;-1:-1:-1;;;;;;;;;;;6409:1571:6:o;10284:194::-;1436:19;;-1:-1:-1;;;;;1436:19:6;1422:10;:33;1401:148;;;;-1:-1:-1;;;1401:148:6;;;;;;;:::i;:::-;10422:49:::1;10455:8;10465:5;10422:32;:49::i;:::-;10284:194:::0;;:::o;4299:136:27:-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;3415:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;3388:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:27::1;:27:::0;;;4391:37:::1;::::0;791:25:156;;;4398:10:27::1;::::0;4391:37:::1;::::0;779:2:156;764:18;4391:37:27::1;;;;;;;4299:136::o:0;2071:101:59:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;8122:191:6:-;1888:10;-1:-1:-1;;;;;1910:10:6;1888:33;;1880:110;;;;-1:-1:-1;;;1880:110:6;;;;;;;:::i;:::-;8267:39:::1;8281:6;8289:8;8299:6;8267:13;:39::i;:::-;;8122:191:::0;;;:::o;21009:504::-;-1:-1:-1;;;;;21144:26:6;;21117:24;21144:26;;;:18;:26;;;;;:33;21069:18;;;;21144:33;;21213:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21213:31:6;;21187:57;;21260:9;21255:199;21279:16;21275:1;:20;21255:199;;;-1:-1:-1;;;;;21325:28:6;;;;;;:20;:28;;;;;;;;21354:18;:26;;;;;:29;;21325:28;;;21381:1;;21354:29;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;21354:29:6;21325:59;;;;;;;;;;;;;21313:9;;:6;;21320:1;;21313:9;;;;;;:::i;:::-;;;;;;;;;;:71;21426:3;;21255:199;;;;21471:18;:26;21490:6;-1:-1:-1;;;;;21471:26:6;-1:-1:-1;;;;;21471:26:6;;;;;;;;;;;;21499:6;21463:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21463:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21009:504;;;:::o;22611:549::-;22823:27;;22872:23;;;;;22917;;;;;22962:35;;;;23019:37;;;;23078:33;;;;22791:338;;22724:7;;22791:338;;22823:27;;22872:23;23078:33;22791:338;;:::i;:::-;;;;;;;;;;;;;22764:379;;;;;;22743:410;;22611:549;;;:::o;12606:921::-;1436:19;;-1:-1:-1;;;;;1436:19:6;1422:10;:33;1401:148;;;;-1:-1:-1;;;1401:148:6;;;;;;;:::i;:::-;12811:31;12763:45:::1;12859:662;12883:37;12879:1;:41;12859:662;;;13028:31;:67;13060:31;;13092:1;13060:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13028:67:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13028:67:6;;::::1;;13024:428;;;13185:5;13115:31;:67;13147:31;;13179:1;13147:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13115:67:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13115:67:6;:75;;-1:-1:-1;;13115:75:6::1;::::0;::::1;;::::0;;;::::1;::::0;;13213:71:::1;13249:31:::0;;13281:1;13249:34;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13213:71;::::0;-1:-1:-1;;;;;3433:32:156;;;3415:51;;3403:2;3388:18;13213:71:6::1;;;;;;;13362:75;13395:31;;13427:1;13395:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;13431:5;13362:32;:75::i;:::-;13493:3;;12859:662;;8441:214:::0;1888:10;-1:-1:-1;;;;;1910:10:6;1888:33;;1880:110;;;;-1:-1:-1;;;1880:110:6;;;;;;;:::i;:::-;8605:43:::1;8616:6;8624:5;8631:8;8641:6;8605:10;:43::i;8774:230::-:0;1888:10;-1:-1:-1;;;;;1910:10:6;1888:33;;1880:110;;;;-1:-1:-1;;;1880:110:6;;;;;;;:::i;:::-;8954:43:::1;::::0;-1:-1:-1;;;8954:43:6;;-1:-1:-1;;;;;24135:15:156;;;8954:43:6::1;::::0;::::1;24117:34:156::0;24187:15;;;24167:18;;;24160:43;24219:18;;;24212:34;;;8954:17:6;::::1;::::0;::::1;::::0;24052:18:156;;8954:43:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8774:230:::0;;;;:::o;10660:147::-;1334:13:59;:11;:13::i;:::-;10753:47:6::1;10777:22;10753:23;:47::i;2492:57:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2492:57:7;;-1:-1:-1;2492:57:7;;-1:-1:-1;2492:57:7:o;9294:532:6:-;9425:4;;1888:10;-1:-1:-1;;;;;1910:10:6;1888:33;;1880:110;;;;-1:-1:-1;;;1880:110:6;;;;;;;:::i;:::-;9450:30:::1;9483:41;9507:16;9483:23;:41::i;:::-;9534:14;9613:45:::0;;;:21:::1;:45;::::0;;;;;9450:74;;-1:-1:-1;9534:14:6;9613:45:::1;;9609:159;;;-1:-1:-1::0;9722:5:6::1;9674:45:::0;;;:21:::1;:45;::::0;;;;:53;;-1:-1:-1;;9674:53:6::1;::::0;;;9609:159:::1;9785:9:::0;-1:-1:-1;9796:22:6;-1:-1:-1;9294:532:6;;;:::o;3123:431::-;3111:19:60;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:60;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:60;1476:19:62;:23;;;3219:66:60;;-1:-1:-1;3268:12:60;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:60;;24459:2:156;3157:201:60;;;24441:21:156;24498:2;24478:18;;;24471:30;24537:34;24517:18;;;24510:62;-1:-1:-1;;;24588:18:156;;;24581:44;24642:19;;3157:201:60;24257:410:156;3157:201:60;3368:12;:16;;-1:-1:-1;;3368:16:60;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:60;;;;;3394:65;3352:27:6::1;:25;:27::i;:::-;3332:17;:47:::0;3389:55:::1;3407:15:::0;3424:19;3389:17:::1;:55::i;:::-;3454:32;3473:12;3454:18;:32::i;:::-;3496:51;3520:26;3496:23;:51::i;:::-;3483:14:60::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:60;;;3553:14;;-1:-1:-1;24824:36:156;;3553:14:60;;24812:2:156;24797:18;3553:14:60;;;;;;;3479:99;3101:483;3123:431:6;;;;:::o;11227:1073::-;1436:19;;-1:-1:-1;;;;;1436:19:6;1422:10;:33;1401:148;;;;-1:-1:-1;;;1401:148:6;;;;;;;:::i;:::-;11450:73;;::::1;11429:195;;;::::0;-1:-1:-1;;;11429:195:6;;25073:2:156;11429:195:6::1;::::0;::::1;25055:21:156::0;25112:2;25092:18;;;25085:30;25151:34;25131:18;;;25124:62;25222:34;25202:18;;;25195:62;-1:-1:-1;;;25273:19:156;;;25266:42;25325:19;;11429:195:6::1;24871:479:156::0;11429:195:6::1;11672:21:::0;11634:35:::1;11710:584;11734:27;11730:1;:31;11710:584;;;11874:31;:57;11906:21;;11928:1;11906:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11874:57:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11874:57:6;;::::1;;11869:356;;12011:4;11951:31;:57;11983:21;;12005:1;11983:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11951:57:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11951:57:6;:64;;-1:-1:-1;;11951:64:6::1;::::0;::::1;;::::0;;;::::1;::::0;;12038:57:::1;12070:21:::0;;12092:1;12070:24;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12038:57;::::0;-1:-1:-1;;;;;3433:32:156;;;3415:51;;3403:2;3388:18;12038:57:6::1;;;;;;;12113:97;12146:21;;12168:1;12146:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12172:34;;12207:1;12172:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12113:32;:97::i;:::-;12266:3;;11710:584;;;;11419:881;11227:1073:::0;;;;:::o;4426:274::-;5724:7:27;;4601:14:6;;;;5695:1:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;19248:2:156;2759:52:27;;;19230:21:156;19287:2;19267:18;;;19260:30;-1:-1:-1;;;19306:18:156;;;19299:55;19371:18;;2759:52:27;19046:349:156;2759:52:27;1815:1:61::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:61;;19602:2:156;2561:63:61::1;::::0;::::1;19584:21:156::0;19641:2;19621:18;;;19614:30;19680:33;19660:18;;;19653:61;19731:18;;2561:63:61::1;19400:355:156::0;2561:63:61::1;1815:1;2699:7;:18:::0;4636:57:6::2;4657:10;4669:8:::0;4679:5;4686:6;4636:20:::2;:57::i;:::-;1772:1:61::1;2872:7;:22:::0;4627:66:6;4426:274;-1:-1:-1;;;;;4426:274:6:o;2321:198:59:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:59;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:59;;25803:2:156;2401:73:59::1;::::0;::::1;25785:21:156::0;25842:2;25822:18;;;25815:30;25881:34;25861:18;;;25854:62;-1:-1:-1;;;25932:18:156;;;25925:36;25978:19;;2401:73:59::1;25601:402:156::0;2401:73:59::1;2484:28;2503:8;2484:18;:28::i;21954:227:6:-:0;22002:7;22042:17;22025:13;:34;22021:154;;;-1:-1:-1;22082:17:6;;;21954:227::o;22021:154::-;22137:27;:25;:27::i;:::-;22130:34;;21954:227;:::o;4911:437:27:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:27;;26210:2:156;5104:150:27::1;::::0;::::1;26192:21:156::0;26249:2;26229:18;;;26222:30;26288:34;26268:18;;;26261:62;26359:26;26339:18;;;26332:54;26403:19;;5104:150:27::1;26008:420:156::0;5104:150:27::1;5264:7;:25:::0;;;5304:37:::1;::::0;791:25:156;;;5313:10:27::1;::::0;5304:37:::1;::::0;779:2:156;764:18;5304:37:27::1;645:177:156::0;6024:360:27;-1:-1:-1;;;;;6127:40:27;;6106:160;;;;-1:-1:-1;;;6106:160:27;;26635:2:156;6106:160:27;;;26617:21:156;26674:2;26654:18;;;26647:30;26713:34;26693:18;;;26686:62;26784:34;26764:18;;;26757:62;-1:-1:-1;;;26835:19:156;;;26828:40;26885:19;;6106:160:27;26433:477:156;6106:160:27;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:27;;;27175:34:156;;27245:15;;;27240:2;27225:18;;27218:43;6281:52:27;;27110:18:156;6281:52:27;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:27;-1:-1:-1;;;;;6343:34:27;;;;;;;;;;6024:360::o;974:926:23:-;-1:-1:-1;;;;;1476:19:62;;;:23;1410:484:23;;1481:56;;-1:-1:-1;;;1481:56:23;;;1541:18;-1:-1:-1;;;;;1481:33:23;;;574:10;;1481:56;;1515:10;;1527:9;;1481:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1481:78:23;;1456:220;;;;-1:-1:-1;;;1456:220:23;;28587:2:156;1456:220:23;;;28569:21:156;28626:2;28606:18;;;28599:30;28665:34;28645:18;;;28638:62;28736:34;28716:18;;;28709:62;-1:-1:-1;;;28787:19:156;;;28780:50;28847:19;;1456:220:23;28385:487:156;1456:220:23;974:926;;;:::o;1410:484::-;1772:6;-1:-1:-1;;;;;1732:46:23;:36;1746:10;1758:9;1732:13;:36::i;:::-;-1:-1:-1;;;;;1732:46:23;;1707:176;;;;-1:-1:-1;;;1707:176:23;;29079:2:156;1707:176:23;;;29061:21:156;29118:2;29098:18;;;29091:30;29157:34;29137:18;;;29130:62;29228:34;29208:18;;;29201:62;-1:-1:-1;;;29279:19:156;;;29272:38;29327:19;;1707:176:23;28877:475:156;15830:811:6;-1:-1:-1;;;;;1669:41:6;;16028:14;1669:41;;;:31;:41;;;;;;16009:8;;1669:41;;1648:165;;;;-1:-1:-1;;;1648:165:6;;29559:2:156;1648:165:6;;;29541:21:156;29598:2;29578:18;;;29571:30;29637:34;29617:18;;;29610:62;29708:34;29688:18;;;29681:62;-1:-1:-1;;;29759:19:156;;;29752:44;29813:19;;1648:165:6;29357:481:156;1648:165:6;16113:61:::1;-1:-1:-1::0;;;;;16113:22:6;::::1;16136:10;16156:8:::0;16167:6;16113:22:::1;:61::i;:::-;16309:31;::::0;-1:-1:-1;;;16309:31:6;;-1:-1:-1;;;;;30051:32:156;;;16309:31:6::1;::::0;::::1;30033:51:156::0;30100:18;;;30093:34;;;16309:16:6;::::1;::::0;::::1;::::0;30006:18:156;;16309:31:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16300:40;;16436:43;16447:6;16455:5;16462:8;16472:6;16436:10;:43::i;:::-;16550:60;::::0;-1:-1:-1;;;16550:60:6;;-1:-1:-1;;;;;24135:15:156;;;16550:60:6::1;::::0;::::1;24117:34:156::0;24187:15;;;24167:18;;;24160:43;24219:18;;;24212:34;;;16550:10:6::1;:34;::::0;::::1;::::0;24052:18:156;;16550:60:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15830:811:::0;;;;;;;:::o;20040:213::-;20138:52;;;-1:-1:-1;;;;;30929:32:156;;30911:51;;31005:14;;30998:22;30993:2;30978:18;;30971:50;20138:52:6;;30884:18:156;20138:52:6;;;;;;;-1:-1:-1;;;;;20200:38:6;;;;;;;;:28;:38;;;;;:46;;-1:-1:-1;;20200:46:6;;;;;;;;;;20040:213::o;1599:130:59:-;1513:6;;-1:-1:-1;;;;;1513:6:59;929:10:63;1662:23:59;1654:68;;;;-1:-1:-1;;;1654:68:59;;31234:2:156;1654:68:59;;;31216:21:156;;;31253:18;;;31246:30;31312:34;31292:18;;;31285:62;31364:18;;1654:68:59;31032:356:156;2673:187:59;2765:6;;;-1:-1:-1;;;;;2781:17:59;;;-1:-1:-1;;;;;;2781:17:59;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;17174:1255:6:-;17302:4;17361:16;17353:91;;;;-1:-1:-1;;;17353:91:6;;31595:2:156;17353:91:6;;;31577:21:156;31634:2;31614:18;;;31607:30;31673:34;31653:18;;;31646:62;31744:32;31724:18;;;31717:60;31794:19;;17353:91:6;31393:426:156;17353:91:6;-1:-1:-1;;;;;17528:28:6;;;17507:18;17528:28;;;:20;:28;;;;;;;;:38;;;;;;;;;;17585:25;;;;17577:89;;;;-1:-1:-1;;;17577:89:6;;32026:2:156;17577:89:6;;;32008:21:156;32065:2;32045:18;;;32038:30;32104:34;32084:18;;;32077:62;-1:-1:-1;;;32155:18:156;;;32148:49;32214:19;;17577:89:6;31824:415:156;17577:89:6;-1:-1:-1;;;;;17905:28:6;;;;;;;:20;:28;;;;;;;;:38;;;;;;;;;17777:24;;;17905:51;;;;17777:24;18071:15;;18067:229;;;18102:55;18140:6;18148:8;18102:37;:55::i;:::-;18281:4;18274:11;;;;;18067:229;18417:5;18410:12;;;17174:1255;;;;;;:::o;14316:949::-;-1:-1:-1;;;;;14464:20:6;;14456:90;;;;-1:-1:-1;;;14456:90:6;;32446:2:156;14456:90:6;;;32428:21:156;32485:2;32465:18;;;32458:30;32524:34;32504:18;;;32497:62;32595:27;32575:18;;;32568:55;32640:19;;14456:90:6;32244:421:156;14456:90:6;14564:11;14556:78;;;;-1:-1:-1;;;14556:78:6;;32872:2:156;14556:78:6;;;32854:21:156;32911:2;32891:18;;;32884:30;32950:34;32930:18;;;32923:62;-1:-1:-1;;;33001:18:156;;;32994:52;33063:19;;14556:78:6;32670:418:156;14556:78:6;-1:-1:-1;;;;;14735:28:6;;;;;;;:20;:28;;;;;;;;:38;;;;;;;;;;14731:335;;-1:-1:-1;;;;;14819:26:6;;;;;;:18;1200:2:7;14819:26:6;;;;;;;:33;:67;14794:206;;;;-1:-1:-1;;;14794:206:6;;33295:2:156;14794:206:6;;;33277:21:156;33334:2;33314:18;;;33307:30;33373:34;33353:18;;;33346:62;33444:34;33424:18;;;33417:62;-1:-1:-1;;;33495:19:156;;;33488:47;33552:19;;14794:206:6;33093:484:156;14794:206:6;-1:-1:-1;;;;;15014:26:6;;;;;;;:18;:26;;;;;;;:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15014:41:6;;;;;;;;;;14731:335;-1:-1:-1;;;;;15154:28:6;;;;;;;:20;:28;;;;;;;;:38;;;;;;;;;;;:48;;15196:6;;15154:28;:48;;15196:6;;15154:48;:::i;:::-;;;;-1:-1:-1;;15218:40:6;;;-1:-1:-1;;;;;34168:15:156;;;34150:34;;34220:15;;;34215:2;34200:18;;34193:43;34272:15;;34252:18;;;34245:43;34319:2;34304:18;;34297:34;;;15218:40:6;;;;;;;34099:3:156;15218:40:6;;;14316:949;;;;:::o;20513:221::-;20629:19;;20602:71;;;-1:-1:-1;;;;;20629:19:6;;;27175:34:156;;27245:15;;;27240:2;27225:18;;27218:43;20602:71:6;;27110:18:156;20602:71:6;;;;;;;20683:19;:44;;-1:-1:-1;;;;;;20683:44:6;-1:-1:-1;;;;;20683:44:6;;;;;;;;;;20513:221::o;22282:193::-;22416:19;;;;;;;;;;;-1:-1:-1;;;22416:19:6;;;;;22378:89;;731:80:7;22378:89:6;;;34882:25:156;22406:30:6;34923:18:156;;;34916:34;22438:13:6;34966:18:156;;;34959:34;22461:4:6;35009:18:156;;;;35002:60;;;;22378:89:6;;;;;;;;;;34854:19:156;;;;22378:89:6;;;22368:100;;;;;;22282:193::o;2943:441:27:-;3077:14;;-1:-1:-1;;;;;3077:14:27;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:27;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:27;;35275:2:156;3048:197:27;;;35257:21:156;35314:2;35294:18;;;35287:30;35353:34;35333:18;;;35326:62;35424:34;35404:18;;;35397:62;-1:-1:-1;;;35475:19:156;;;35468:38;35523:19;;3048:197:27;35073:475:156;3048:197:27;3255:7;:26;;;3296:36;;791:25:156;;;3303:10:27;;3296:36;;779:2:156;764:18;3296:36:27;;;;;;;3342:35;3361:15;3342:18;:35::i;4402:227:88:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;:::-;-1:-1:-1;4613:9:88;4402:227;-1:-1:-1;;;4402:227:88:o;974:241:82:-;1139:68;;;-1:-1:-1;;;;;24135:15:156;;;1139:68:82;;;24117:34:156;24187:15;;24167:18;;;24160:43;24219:18;;;;24212:34;;;1139:68:82;;;;;;;;;;24052:18:156;;;;1139:68:82;;;;;;;;-1:-1:-1;;;;;1139:68:82;-1:-1:-1;;;1139:68:82;;;1112:96;;1132:5;;1112:19;:96::i;18718:957:6:-;-1:-1:-1;;;;;18944:26:6;;18921:20;18944:26;;;:18;:26;;;;;:33;;19010:394;19021:12;19017:1;:16;19010:394;;;-1:-1:-1;;;;;19055:26:6;;;;;;;:18;:26;;;;;:29;;:41;;;;19082:1;;19055:29;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;19055:29:6;:41;19051:312;;;-1:-1:-1;;;;;19222:26:6;;;;;;:18;:26;;;;;19270:33;;:37;;19306:1;;19270:37;:::i;:::-;19222:103;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;19190:26:6;;;;;:18;:26;;;;;;;:29;;19222:103;;;;;19190:26;19217:1;;19190:29;;;;;;:::i;:::-;;;;;;;;;:135;;;;;-1:-1:-1;;;;;19190:135:6;;;;;-1:-1:-1;;;;;19190:135:6;;;;;;19343:5;;19051:312;19388:3;;19010:394;;;19476:12;19471:1;:17;;19463:103;;;;-1:-1:-1;;;19463:103:6;;36265:2:156;19463:103:6;;;36247:21:156;36304:2;36284:18;;;36277:30;36343:34;36323:18;;;36316:62;36414:34;36394:18;;;36387:62;-1:-1:-1;;;36465:19:156;;;36458:40;36515:19;;19463:103:6;36063:477:156;19463:103:6;-1:-1:-1;;;;;19636:26:6;;;;;;:18;:26;;;;;:32;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;19636:32:6;;;;;-1:-1:-1;;;;;;19636:32:6;;;;;;-1:-1:-1;;;;18718:957:6:o;2243:1373:88:-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:88;;-1:-1:-1;3563:35:88;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:88;;37011:2:156;766:34:88;;;36993:21:156;37050:2;37030:18;;;37023:30;37089:26;37069:18;;;37062:54;37133:18;;766:34:88;36809:348:156;708:465:88;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:88;;37364:2:156;881:41:88;;;37346:21:156;37403:2;37383:18;;;37376:30;37442:33;37422:18;;;37415:61;37493:18;;881:41:88;37162:355:156;817:356:88;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:88;;37724:2:156;998:44:88;;;37706:21:156;37763:2;37743:18;;;37736:30;37802:34;37782:18;;;37775:62;-1:-1:-1;;;37853:18:156;;;37846:32;37895:19;;998:44:88;37522:398:156;939:234:88;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:88;;38127:2:156;1118:44:88;;;38109:21:156;38166:2;38146:18;;;38139:30;38205:34;38185:18;;;38178:62;-1:-1:-1;;;38256:18:156;;;38249:32;38298:19;;1118:44:88;37925:398:156;3747:706:82;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:82;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:82;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:82;;38530:2:156;4351:85:82;;;38512:21:156;38569:2;38549:18;;;38542:30;38608:34;38588:18;;;38581:62;-1:-1:-1;;;38659:18:156;;;38652:40;38709:19;;4351:85:82;38328:406:156;5810:1603:88;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:88;;-1:-1:-1;6962:30:88;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:88;;-1:-1:-1;7071:30:88;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;38966:25:156;;;39039:4;39027:17;;39007:18;;;39000:45;;;;39061:18;;;39054:34;;;39104:18;;;39097:34;;;7224:24:88;;38938:19:156;;7224:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:88;;-1:-1:-1;;7224:24:88;;;-1:-1:-1;;;;;;;7262:20:88;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:88;;-1:-1:-1;5810:1603:88;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:88;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;3861:223:83:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:83:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:83;;39344:2:156;5137:81:83;;;39326:21:156;39383:2;39363:18;;;39356:30;39422:34;39402:18;;;39395:62;-1:-1:-1;;;39473:18:156;;;39466:36;39519:19;;5137:81:83;39142:402:156;5137:81:83;-1:-1:-1;;;;;1476:19:62;;;5228:60:83;;;;-1:-1:-1;;;5228:60:83;;39751:2:156;5228:60:83;;;39733:21:156;39790:2;39770:18;;;39763:30;39829:31;39809:18;;;39802:59;39878:18;;5228:60:83;39549:353:156;5228:60:83;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:83;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:83:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:83;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:83;;;;;;;;:::i;14:148:156:-;-1:-1:-1;;;;;106:31:156;;96:42;;86:70;;152:1;149;142:12;167:288;250:6;303:2;291:9;282:7;278:23;274:32;271:52;;;319:1;316;309:12;271:52;358:9;345:23;377:48;419:5;377:48;:::i;460:180::-;519:6;572:2;560:9;551:7;547:23;543:32;540:52;;;588:1;585;578:12;540:52;-1:-1:-1;611:23:156;;460:180;-1:-1:-1;460:180:156:o;827:151::-;895:20;;924:48;895:20;924:48;:::i;:::-;827:151;;;:::o;983:127::-;1044:10;1039:3;1035:20;1032:1;1025:31;1075:4;1072:1;1065:15;1099:4;1096:1;1089:15;1115:253;1187:2;1181:9;1229:4;1217:17;;1264:18;1249:34;;1285:22;;;1246:62;1243:88;;;1311:18;;:::i;:::-;1347:2;1340:22;1115:253;:::o;1373:275::-;1444:2;1438:9;1509:2;1490:13;;-1:-1:-1;;1486:27:156;1474:40;;1544:18;1529:34;;1565:22;;;1526:62;1523:88;;;1591:18;;:::i;:::-;1627:2;1620:22;1373:275;;-1:-1:-1;1373:275:156:o;1653:1404::-;1800:6;1808;1816;1824;1832;1840;1893:3;1881:9;1872:7;1868:23;1864:33;1861:53;;;1910:1;1907;1900:12;1861:53;1949:9;1936:23;1968:48;2010:5;1968:48;:::i;:::-;2035:5;-1:-1:-1;2059:2:156;2098:18;;;2085:32;2126:50;2085:32;2126:50;:::i;:::-;2195:7;-1:-1:-1;2249:2:156;2234:18;;2221:32;;-1:-1:-1;2305:2:156;2290:18;;2277:32;2318:50;2277:32;2318:50;:::i;:::-;2387:7;-1:-1:-1;2441:3:156;2426:19;;2413:33;;-1:-1:-1;2497:3:156;2482:19;;2469:33;2521:18;2551:14;;;2548:34;;;2578:1;2575;2568:12;2548:34;2616:6;2605:9;2601:22;2591:32;;2661:7;2654:4;2650:2;2646:13;2642:27;2632:55;;2683:1;2680;2673:12;2632:55;2719:2;2706:16;2741:2;2737;2734:10;2731:36;;;2747:18;;:::i;:::-;2789:53;2832:2;2813:13;;-1:-1:-1;;2809:27:156;2805:36;;2789:53;:::i;:::-;2776:66;;2865:2;2858:5;2851:17;2905:7;2900:2;2895;2891;2887:11;2883:20;2880:33;2877:53;;;2926:1;2923;2916:12;2877:53;2981:2;2976;2972;2968:11;2963:2;2956:5;2952:14;2939:45;3025:1;3020:2;3015;3008:5;3004:14;3000:23;2993:34;;3046:5;3036:15;;;;;1653:1404;;;;;;;;:::o;3477:118::-;3563:5;3556:13;3549:21;3542:5;3539:32;3529:60;;3585:1;3582;3575:12;3600:417;3683:6;3691;3744:2;3732:9;3723:7;3719:23;3715:32;3712:52;;;3760:1;3757;3750:12;3712:52;3799:9;3786:23;3818:48;3860:5;3818:48;:::i;:::-;3885:5;-1:-1:-1;3942:2:156;3927:18;;3914:32;3955:30;3914:32;3955:30;:::i;:::-;4004:7;3994:17;;;3600:417;;;;;:::o;4022:269::-;4079:6;4132:2;4120:9;4111:7;4107:23;4103:32;4100:52;;;4148:1;4145;4138:12;4100:52;4187:9;4174:23;4237:4;4230:5;4226:16;4219:5;4216:27;4206:55;;4257:1;4254;4247:12;4775:440;4861:6;4869;4922:2;4910:9;4901:7;4897:23;4893:32;4890:52;;;4938:1;4935;4928:12;4890:52;4977:9;4964:23;4996:48;5038:5;4996:48;:::i;:::-;5063:5;-1:-1:-1;5120:2:156;5105:18;;5092:32;5133:50;5092:32;5133:50;:::i;5721:508::-;5816:6;5824;5832;5885:2;5873:9;5864:7;5860:23;5856:32;5853:52;;;5901:1;5898;5891:12;5853:52;5940:9;5927:23;5959:48;6001:5;5959:48;:::i;:::-;6026:5;-1:-1:-1;6083:2:156;6068:18;;6055:32;6096:50;6055:32;6096:50;:::i;:::-;5721:508;;6165:7;;-1:-1:-1;;;6219:2:156;6204:18;;;;6191:32;;5721:508::o;6442:472::-;6506:3;6544:5;6538:12;6571:6;6566:3;6559:19;6597:4;6626:2;6621:3;6617:12;6610:19;;6663:2;6656:5;6652:14;6684:1;6694:195;6708:6;6705:1;6702:13;6694:195;;;6773:13;;-1:-1:-1;;;;;6769:39:156;6757:52;;6829:12;;;;6864:15;;;;6805:1;6723:9;6694:195;;;-1:-1:-1;6905:3:156;;6442:472;-1:-1:-1;;;;;6442:472:156:o;6919:435::-;6972:3;7010:5;7004:12;7037:6;7032:3;7025:19;7063:4;7092:2;7087:3;7083:12;7076:19;;7129:2;7122:5;7118:14;7150:1;7160:169;7174:6;7171:1;7168:13;7160:169;;;7235:13;;7223:26;;7269:12;;;;7304:15;;;;7196:1;7189:9;7160:169;;7359:494;7634:2;7623:9;7616:21;7597:4;7660:67;7723:2;7712:9;7708:18;7700:6;7660:67;:::i;:::-;7775:9;7767:6;7763:22;7758:2;7747:9;7743:18;7736:50;7803:44;7840:6;7832;7803:44;:::i;:::-;7795:52;7359:494;-1:-1:-1;;;;;7359:494:156:o;8083:194::-;8154:4;8187:18;8179:6;8176:30;8173:56;;;8209:18;;:::i;:::-;-1:-1:-1;8254:1:156;8250:14;8266:4;8246:25;;8083:194::o;8282:776::-;8347:5;8400:3;8393:4;8385:6;8381:17;8377:27;8367:55;;8418:1;8415;8408:12;8367:55;8454:6;8441:20;8480:4;8504:71;8520:54;8571:2;8520:54;:::i;:::-;8504:71;:::i;:::-;8609:15;;;8695:1;8691:10;;;;8679:23;;8675:32;;;8640:12;;;;8719:15;;;8716:35;;;8747:1;8744;8737:12;8716:35;8783:2;8775:6;8771:15;8795:234;8811:6;8806:3;8803:15;8795:234;;;8891:3;8878:17;8908:48;8950:5;8908:48;:::i;:::-;8969:18;;9007:12;;;;8828;;8795:234;;;-1:-1:-1;9047:5:156;8282:776;-1:-1:-1;;;;;;8282:776:156:o;9063:673::-;9117:5;9170:3;9163:4;9155:6;9151:17;9147:27;9137:55;;9188:1;9185;9178:12;9137:55;9224:6;9211:20;9250:4;9274:71;9290:54;9341:2;9290:54;:::i;9274:71::-;9379:15;;;9465:1;9461:10;;;;9449:23;;9445:32;;;9410:12;;;;9489:15;;;9486:35;;;9517:1;9514;9507:12;9486:35;9553:2;9545:6;9541:15;9565:142;9581:6;9576:3;9573:15;9565:142;;;9647:17;;9635:30;;9685:12;;;;9598;;9565:142;;9741:715;9823:5;9871:4;9859:9;9854:3;9850:19;9846:30;9843:50;;;9889:1;9886;9879:12;9843:50;9922:4;9916:11;9966:4;9958:6;9954:17;10037:6;10025:10;10022:22;10001:18;9989:10;9986:34;9983:62;9980:88;;;10048:18;;:::i;:::-;10084:4;10077:24;10119:6;-1:-1:-1;10119:6:156;10149:23;;10181:50;10149:23;10181:50;:::i;:::-;10240:23;;10315:2;10300:18;;10287:32;10363:26;10350:40;;10338:53;;10328:81;;10405:1;10402;10395:12;10328:81;10437:2;10425:15;;;;10418:32;9741:715;;-1:-1:-1;;9741:715:156:o;10461:163::-;10528:20;;10588:10;10577:22;;10567:33;;10557:61;;10614:1;10611;10604:12;10629:1146;10739:6;10792:2;10780:9;10771:7;10767:23;10763:32;10760:52;;;10808:1;10805;10798:12;10760:52;10848:9;10835:23;10877:18;10918:2;10910:6;10907:14;10904:34;;;10934:1;10931;10924:12;10904:34;10957:22;;;;11013:4;10995:16;;;10991:27;10988:47;;;11031:1;11028;11021:12;10988:47;11057:22;;:::i;:::-;11117:2;11104:16;11145:2;11135:8;11132:16;11129:36;;;11161:1;11158;11151:12;11129:36;11188:67;11247:7;11236:8;11232:2;11228:17;11188:67;:::i;:::-;11181:5;11174:82;;11302:2;11298;11294:11;11281:25;11331:2;11321:8;11318:16;11315:36;;;11347:1;11344;11337:12;11315:36;11383:56;11431:7;11420:8;11416:2;11412:17;11383:56;:::i;:::-;11378:2;11371:5;11367:14;11360:80;;11472:31;11499:2;11495;11491:11;11472:31;:::i;:::-;11467:2;11460:5;11456:14;11449:55;11536:75;11603:7;11598:2;11594;11590:11;11536:75;:::i;:::-;11531:2;11524:5;11520:14;11513:99;11646:31;11672:3;11668:2;11664:12;11646:31;:::i;:::-;11639:4;11632:5;11628:16;11621:57;11711:33;11738:4;11734:2;11730:13;11711:33;:::i;:::-;11705:3;11694:15;;11687:58;11698:5;10629:1146;-1:-1:-1;;;;;10629:1146:156:o;11780:378::-;11854:8;11864:6;11918:3;11911:4;11903:6;11899:17;11895:27;11885:55;;11936:1;11933;11926:12;11885:55;-1:-1:-1;11959:20:156;;12002:18;11991:30;;11988:50;;;12034:1;12031;12024:12;11988:50;12071:4;12063:6;12059:17;12047:29;;12131:3;12124:4;12114:6;12111:1;12107:14;12099:6;12095:27;12091:38;12088:47;12085:67;;;12148:1;12145;12138:12;12163:466;12267:6;12275;12328:2;12316:9;12307:7;12303:23;12299:32;12296:52;;;12344:1;12341;12334:12;12296:52;12384:9;12371:23;12417:18;12409:6;12406:30;12403:50;;;12449:1;12446;12439:12;12403:50;12488:81;12561:7;12552:6;12541:9;12537:22;12488:81;:::i;:::-;12588:8;;12462:107;;-1:-1:-1;12163:466:156;-1:-1:-1;;;;12163:466:156:o;12819:683::-;12939:6;12947;12955;12963;13016:3;13004:9;12995:7;12991:23;12987:33;12984:53;;;13033:1;13030;13023:12;12984:53;13072:9;13059:23;13091:48;13133:5;13091:48;:::i;:::-;13158:5;-1:-1:-1;13215:2:156;13200:18;;13187:32;13228:50;13187:32;13228:50;:::i;:::-;13297:7;-1:-1:-1;13356:2:156;13341:18;;13328:32;13369:50;13328:32;13369:50;:::i;:::-;12819:683;;;;-1:-1:-1;13438:7:156;;13492:2;13477:18;13464:32;;-1:-1:-1;;12819:683:156:o;13507:::-;13627:6;13635;13643;13651;13704:3;13692:9;13683:7;13679:23;13675:33;13672:53;;;13721:1;13718;13711:12;13672:53;13760:9;13747:23;13779:48;13821:5;13779:48;:::i;:::-;13846:5;-1:-1:-1;13903:2:156;13888:18;;13875:32;13916:50;13875:32;13916:50;:::i;:::-;13985:7;-1:-1:-1;14039:2:156;14024:18;;14011:32;;-1:-1:-1;14095:2:156;14080:18;;14067:32;14108:50;14067:32;14108:50;:::i;:::-;13507:683;;;;-1:-1:-1;13507:683:156;;-1:-1:-1;;13507:683:156:o;14195:332::-;14263:6;14271;14324:2;14312:9;14303:7;14299:23;14295:32;14292:52;;;14340:1;14337;14330:12;14292:52;14379:9;14366:23;14398:48;14440:5;14398:48;:::i;:::-;14465:5;14517:2;14502:18;;;;14489:32;;-1:-1:-1;;;14195:332:156:o;15699:810::-;15836:6;15844;15852;15860;15913:2;15901:9;15892:7;15888:23;15884:32;15881:52;;;15929:1;15926;15919:12;15881:52;15969:9;15956:23;15998:18;16039:2;16031:6;16028:14;16025:34;;;16055:1;16052;16045:12;16025:34;16094:81;16167:7;16158:6;16147:9;16143:22;16094:81;:::i;:::-;16194:8;;-1:-1:-1;16068:107:156;-1:-1:-1;16282:2:156;16267:18;;16254:32;;-1:-1:-1;16298:16:156;;;16295:36;;;16327:1;16324;16317:12;16295:36;;16366:83;16441:7;16430:8;16419:9;16415:24;16366:83;:::i;:::-;15699:810;;;;-1:-1:-1;16468:8:156;-1:-1:-1;;;;15699:810:156:o;17278:268::-;17348:6;17401:2;17389:9;17380:7;17376:23;17372:32;17369:52;;;17417:1;17414;17407:12;17369:52;17449:9;17443:16;17468:48;17510:5;17468:48;:::i;17551:406::-;17753:2;17735:21;;;17792:2;17772:18;;;17765:30;17831:34;17826:2;17811:18;;17804:62;-1:-1:-1;;;17897:2:156;17882:18;;17875:40;17947:3;17932:19;;17551:406::o;17962:245::-;18029:6;18082:2;18070:9;18061:7;18057:23;18053:32;18050:52;;;18098:1;18095;18088:12;18050:52;18130:9;18124:16;18149:28;18171:5;18149:28;:::i;18212:404::-;18414:2;18396:21;;;18453:2;18433:18;;;18426:30;18492:34;18487:2;18472:18;;18465:62;-1:-1:-1;;;18558:2:156;18543:18;;18536:38;18606:3;18591:19;;18212:404::o;21746:472::-;21948:2;21930:21;;;21987:2;21967:18;;;21960:30;22026:34;22021:2;22006:18;;21999:62;22097:34;22092:2;22077:18;;22070:62;-1:-1:-1;;;22163:3:156;22148:19;;22141:35;22208:3;22193:19;;21746:472::o;22223:428::-;22425:2;22407:21;;;22464:2;22444:18;;;22437:30;;;22503:34;22483:18;;;22476:62;22574:34;22569:2;22554:18;;22547:62;22641:3;22626:19;;22223:428::o;22656:127::-;22717:10;22712:3;22708:20;22705:1;22698:31;22748:4;22745:1;22738:15;22772:4;22769:1;22762:15;22788:1068;23279:3;23268:9;23261:22;23242:4;23306:68;23369:3;23358:9;23354:19;23346:6;23306:68;:::i;:::-;23422:9;23414:6;23410:22;23405:2;23394:9;23390:18;23383:50;23450:44;23487:6;23479;23450:44;:::i;:::-;-1:-1:-1;;;;;23568:15:156;;;23563:2;23548:18;;23541:43;23624:13;;23620:22;;23615:2;23600:18;;23593:50;23702:2;23690:15;;;23684:22;23708:26;23680:55;23674:3;23659:19;;23652:84;-1:-1:-1;;23785:10:156;23773:23;;;;23521:3;23752:19;;23745:52;23834:15;;;23828:3;23813:19;;;23806:44;;;;23442:52;22788:1068;-1:-1:-1;;22788:1068:156:o;25355:241::-;25411:6;25464:2;25452:9;25443:7;25439:23;25435:32;25432:52;;;25480:1;25477;25470:12;25432:52;25519:9;25506:23;25538:28;25560:5;25538:28;:::i;27272:258::-;27344:1;27354:113;27368:6;27365:1;27362:13;27354:113;;;27444:11;;;27438:18;27425:11;;;27418:39;27390:2;27383:10;27354:113;;;27485:6;27482:1;27479:13;27476:48;;;-1:-1:-1;;27520:1:156;27502:16;;27495:27;27272:258::o;27535:257::-;27576:3;27614:5;27608:12;27641:6;27636:3;27629:19;27657:63;27713:6;27706:4;27701:3;27697:14;27690:4;27683:5;27679:16;27657:63;:::i;:::-;27774:2;27753:15;-1:-1:-1;;27749:29:156;27740:39;;;;27781:4;27736:50;;27535:257;-1:-1:-1;;27535:257:156:o;27797:288::-;27972:6;27961:9;27954:25;28015:2;28010;27999:9;27995:18;27988:30;27935:4;28035:44;28075:2;28064:9;28060:18;28052:6;28035:44;:::i;28090:290::-;28159:6;28212:2;28200:9;28191:7;28187:23;28183:32;28180:52;;;28228:1;28225;28218:12;28180:52;28254:16;;-1:-1:-1;;;;;;28299:32:156;;28289:43;;28279:71;;28346:1;28343;28336:12;30138:184;30208:6;30261:2;30249:9;30240:7;30236:23;30232:32;30229:52;;;30277:1;30274;30267:12;30229:52;-1:-1:-1;30300:16:156;;30138:184;-1:-1:-1;30138:184:156:o;33582:127::-;33643:10;33638:3;33634:20;33631:1;33624:31;33674:4;33671:1;33664:15;33698:4;33695:1;33688:15;33714:128;33754:3;33785:1;33781:6;33778:1;33775:13;33772:39;;;33791:18;;:::i;:::-;-1:-1:-1;33827:9:156;;33714:128::o;35933:125::-;35973:4;36001:1;35998;35995:8;35992:34;;;36006:18;;:::i;:::-;-1:-1:-1;36043:9:156;;35933:125::o;36545:127::-;36606:10;36601:3;36597:20;36594:1;36587:31;36637:4;36634:1;36627:15;36661:4;36658:1;36651:15;36677:127;36738:10;36733:3;36729:20;36726:1;36719:31;36769:4;36766:1;36759:15;36793:4;36790:1;36783:15;39907:274;40036:3;40074:6;40068:13;40090:53;40136:6;40131:3;40124:4;40116:6;40112:17;40090:53;:::i;:::-;40159:16;;;;;39907:274;-1:-1:-1;;39907:274:156:o;40186:219::-;40335:2;40324:9;40317:21;40298:4;40355:44;40395:2;40384:9;40380:18;40372:6;40355:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "5299": [
        {
          "start": 5653,
          "length": 32
        }
      ],
      "6284": [
        {
          "start": 1435,
          "length": 32
        },
        {
          "start": 3069,
          "length": 32
        },
        {
          "start": 3991,
          "length": 32
        },
        {
          "start": 4075,
          "length": 32
        },
        {
          "start": 4335,
          "length": 32
        },
        {
          "start": 7115,
          "length": 32
        }
      ],
      "6287": [
        {
          "start": 678,
          "length": 32
        }
      ],
      "6290": [
        {
          "start": 1167,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEPOSIT_TYPEHASH()": "48825e94",
    "DOMAIN_TYPEHASH()": "20606b70",
    "addShares(address,address,address,uint256)": "c4623ea1",
    "addStrategiesToDepositWhitelist(address[],bool[])": "df5b3547",
    "calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))": "b43b514b",
    "delegation()": "df5cf723",
    "depositIntoStrategy(address,address,uint256)": "e7a050aa",
    "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": "32e89ace",
    "domainSeparator()": "f698da25",
    "eigenPodManager()": "4665bcda",
    "getDeposits(address)": "94f649dd",
    "initialize(address,address,address,uint256)": "cf756fdf",
    "migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))": "cd293f6f",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "removeShares(address,address,uint256)": "8c80d4e5",
    "removeStrategiesFromDepositWhitelist(address[])": "b5d8b5b8",
    "renounceOwnership()": "715018a6",
    "setPauserRegistry(address)": "10d67a2f",
    "setStrategyWhitelister(address)": "c6656702",
    "setThirdPartyTransfersForbidden(address,bool)": "4e5a4263",
    "slasher()": "b1344271",
    "stakerStrategyList(address,uint256)": "cbc2bd62",
    "stakerStrategyListLength(address)": "8b8aac3c",
    "stakerStrategyShares(address,address)": "7a7e0d92",
    "strategyIsWhitelistedForDeposit(address)": "663c1de4",
    "strategyWhitelister()": "967fc0d2",
    "thirdPartyTransfersForbidden(address)": "9b4da03d",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "withdrawSharesAsTokens(address,address,uint256,address)": "c608c7f3",
    "withdrawalRootPending(bytes32)": "c3c6b3a9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"UpdatedThirdPartyTransfersForbidden\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToWhitelist\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"thirdPartyTransfersForbiddenValues\",\"type\":\"bool[]\"}],\"name\":\"addStrategiesToDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositIntoStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositIntoStrategyWithSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialStrategyWhitelister\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"migrateQueuedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToRemoveFromWhitelist\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategyWhitelister\",\"type\":\"address\"}],\"name\":\"setStrategyWhitelister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setThirdPartyTransfersForbidden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerStrategyList\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerStrategyListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerStrategyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyIsWhitelistedForDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyWhitelister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"thirdPartyTransfersForbidden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"withdrawalRootPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"params\":{\"strategiesToWhitelist\":\"Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\",\"thirdPartyTransfersForbiddenValues\":\"bool values to set `thirdPartyTransfersForbidden` to for each strategy\"}},\"constructor\":{\"params\":{\"_delegation\":\"The delegation contract of EigenLayer.\",\"_eigenPodManager\":\"The contract that keeps track of EigenPod stakes for restaking beacon chain ether.\",\"_slasher\":\"The primary slashing contract of EigenLayer.\"}},\"depositIntoStrategy(address,address,uint256)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf. WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"expiry\":\"the timestamp at which the signature expires\",\"signature\":\"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract\",\"staker\":\"the staker that the deposited assets will be credited to\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.\"},\"getDeposits(address)\":{\"params\":{\"staker\":\"The staker of interest, whose deposits this function will fetch\"},\"returns\":{\"_0\":\"(staker's strategies, shares in these strategies)\"}},\"initialize(address,address,address,uint256)\":{\"params\":{\"_pauserRegistry\":\"Used for access control of pausing.\",\"initialOwner\":\"Ownership of this contract is transferred to this address.\",\"initialPausedStatus\":\"The initial value of `_paused` to set.\",\"initialStrategyWhitelister\":\"The initial value of `strategyWhitelister` to set.\"}},\"migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))\":{\"details\":\"This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"removeStrategiesFromDepositWhitelist(address[])\":{\"params\":{\"strategiesToRemoveFromWhitelist\":\"Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setStrategyWhitelister(address)\":{\"params\":{\"newStrategyWhitelister\":\"new address for the `strategyWhitelister`.\"}},\"setThirdPartyTransfersForbidden(address,bool)\":{\"params\":{\"strategy\":\"The strategy to set `thirdPartyTransfersForbidden` value to\",\"value\":\"bool value to set `thirdPartyTransfersForbidden` to\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"The primary entry- and exit-point for funds into and out of EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256)\":{\"notice\":\"Emitted when a new deposit occurs on behalf of `staker`.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StrategyAddedToDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is added to the approved list of strategies for deposit\"},\"StrategyRemovedFromDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is removed from the approved list of strategies for deposit\"},\"StrategyWhitelisterChanged(address,address)\":{\"notice\":\"Emitted when the `strategyWhitelister` is changed\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"UpdatedThirdPartyTransfersForbidden(address,bool)\":{\"notice\":\"Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner\"}},\"kind\":\"user\",\"methods\":{\"DEPOSIT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the deposit struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"addShares(address,address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue\"},\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"notice\":\"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\"},\"calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))\":{\"notice\":\"Returns the keccak256 hash of `queuedWithdrawal`.\"},\"delegation()\":{\"notice\":\"Returns the single, central Delegation contract of EigenLayer\"},\"depositIntoStrategy(address,address,uint256)\":{\"notice\":\"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\"},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"notice\":\"Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"Returns the EigenPodManager contract of EigenLayer\"},\"getDeposits(address)\":{\"notice\":\"Get all details on the staker's deposits and corresponding shares\"},\"initialize(address,address,address,uint256)\":{\"notice\":\"Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set), and transfers contract ownership to the specified `initialOwner`.\"},\"migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))\":{\"notice\":\"Function called by the DelegationManager as part of the process of transferring existing queued withdrawals from this contract to that contract.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"removeShares(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue\"},\"removeStrategiesFromDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWhitelister(address)\":{\"notice\":\"Owner-only function to change the `strategyWhitelister` address.\"},\"setThirdPartyTransfersForbidden(address,bool)\":{\"notice\":\"If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves. Defaulted to false for all existing strategies.\"},\"slasher()\":{\"notice\":\"Returns the single, central Slasher contract of EigenLayer\"},\"stakerStrategyList(address,uint256)\":{\"notice\":\"Mapping: staker => array of strategies in which they have nonzero shares\"},\"stakerStrategyListLength(address)\":{\"notice\":\"Simple getter function that returns `stakerStrategyList[staker].length`.\"},\"stakerStrategyShares(address,address)\":{\"notice\":\"Mapping: staker => Strategy => number of shares which they currently hold\"},\"strategyIsWhitelistedForDeposit(address)\":{\"notice\":\"Mapping: strategy => whether or not stakers are allowed to deposit into it\"},\"strategyWhitelister()\":{\"notice\":\"Permissioned role, which can be changed by the contract owner. Has the ability to edit the strategy whitelist\"},\"thirdPartyTransfersForbidden(address)\":{\"notice\":\"Mapping: strategy => whether or not stakers are allowed to transfer strategy shares to another address if true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker and also when performing queueWithdrawals, a staker can only withdraw to themselves\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"withdrawSharesAsTokens(address,address,uint256,address)\":{\"notice\":\"Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient\"},\"withdrawalRootPending(bytes32)\":{\"notice\":\"*Deprecated* mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis contract is for managing deposits in different strategies. The main functionalities are: - adding and removing strategies that any delegator can deposit into - enabling deposit of assets into specified strategy(s)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/core/StrategyManager.sol\":\"StrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/core/StrategyManager.sol\":{\"keccak256\":\"0x974dbb924c9d0078236d3097da7de2f184ad7381075bfa1e9bc23de4944914e7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8eda1efb414eff1d861afea26f4098a7fc50630758e22268eb75e260ce02b5b1\",\"dweb:/ipfs/QmSeKsvXuEuVLLaHjxYp56JmCFvsN5yfcMtzcKGxepVtMF\"]},\"lib/eigenlayer-contracts/src/contracts/core/StrategyManagerStorage.sol\":{\"keccak256\":\"0x58de6f1ccb38a215e2b0829c1603553b25ef903fee5a5554042aac718f9402a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://02ebad64a6ae929e14bfe46213fa1ea8c5bf41e142ac8a7ab1e23d6db8f096d6\",\"dweb:/ipfs/QmcZXwNwQ9tkXCyrYPBHSn9uBokaMgERvrGBKLM8L26wSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c\",\"dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            },
            {
              "internalType": "contract ISlasher",
              "name": "_slasher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWhitelisterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedThirdPartyTransfersForbidden",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPOSIT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToWhitelist",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "thirdPartyTransfersForbiddenValues",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToDepositWhitelist"
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategyWithSignature",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposits",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialStrategyWhitelister",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateQueuedWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToRemoveFromWhitelist",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromDepositWhitelist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStrategyWhitelister",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyWhitelister"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setThirdPartyTransfersForbidden"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyList",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyListLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyIsWhitelistedForDeposit",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWhitelister",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "thirdPartyTransfersForbidden",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawSharesAsTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawalRootPending",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToDepositWhitelist(address[],bool[])": {
            "params": {
              "strategiesToWhitelist": "Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)",
              "thirdPartyTransfersForbiddenValues": "bool values to set `thirdPartyTransfersForbidden` to for each strategy"
            }
          },
          "constructor": {
            "params": {
              "_delegation": "The delegation contract of EigenLayer.",
              "_eigenPodManager": "The contract that keeps track of EigenPod stakes for restaking beacon chain ether.",
              "_slasher": "The primary slashing contract of EigenLayer."
            }
          },
          "depositIntoStrategy(address,address,uint256)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf. WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the staker",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            },
            "returns": {
              "shares": "The amount of new shares in the `strategy` created as part of the action."
            }
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the staker",
              "expiry": "the timestamp at which the signature expires",
              "signature": "is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract",
              "staker": "the staker that the deposited assets will be credited to",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            },
            "returns": {
              "shares": "The amount of new shares in the `strategy` created as part of the action."
            }
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID."
          },
          "getDeposits(address)": {
            "params": {
              "staker": "The staker of interest, whose deposits this function will fetch"
            },
            "returns": {
              "_0": "(staker's strategies, shares in these strategies)"
            }
          },
          "initialize(address,address,address,uint256)": {
            "params": {
              "_pauserRegistry": "Used for access control of pausing.",
              "initialOwner": "Ownership of this contract is transferred to this address.",
              "initialPausedStatus": "The initial value of `_paused` to set.",
              "initialStrategyWhitelister": "The initial value of `strategyWhitelister` to set."
            }
          },
          "migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))": {
            "details": "This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "removeStrategiesFromDepositWhitelist(address[])": {
            "params": {
              "strategiesToRemoveFromWhitelist": "Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setStrategyWhitelister(address)": {
            "params": {
              "newStrategyWhitelister": "new address for the `strategyWhitelister`."
            }
          },
          "setThirdPartyTransfersForbidden(address,bool)": {
            "params": {
              "strategy": "The strategy to set `thirdPartyTransfersForbidden` value to",
              "value": "bool value to set `thirdPartyTransfersForbidden` to"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DEPOSIT_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the deposit struct used by the contract"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "addShares(address,address,address,uint256)": {
            "notice": "Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"
          },
          "addStrategiesToDepositWhitelist(address[],bool[])": {
            "notice": "Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into"
          },
          "calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))": {
            "notice": "Returns the keccak256 hash of `queuedWithdrawal`."
          },
          "delegation()": {
            "notice": "Returns the single, central Delegation contract of EigenLayer"
          },
          "depositIntoStrategy(address,address,uint256)": {
            "notice": "Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`"
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "notice": "Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another."
          },
          "domainSeparator()": {
            "notice": "Getter function for the current EIP-712 domain separator for this contract."
          },
          "eigenPodManager()": {
            "notice": "Returns the EigenPodManager contract of EigenLayer"
          },
          "getDeposits(address)": {
            "notice": "Get all details on the staker's deposits and corresponding shares"
          },
          "initialize(address,address,address,uint256)": {
            "notice": "Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set), and transfers contract ownership to the specified `initialOwner`."
          },
          "migrateQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address))": {
            "notice": "Function called by the DelegationManager as part of the process of transferring existing queued withdrawals from this contract to that contract."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "removeShares(address,address,uint256)": {
            "notice": "Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"
          },
          "removeStrategiesFromDepositWhitelist(address[])": {
            "notice": "Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into"
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "setStrategyWhitelister(address)": {
            "notice": "Owner-only function to change the `strategyWhitelister` address."
          },
          "setThirdPartyTransfersForbidden(address,bool)": {
            "notice": "If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves. Defaulted to false for all existing strategies."
          },
          "slasher()": {
            "notice": "Returns the single, central Slasher contract of EigenLayer"
          },
          "stakerStrategyList(address,uint256)": {
            "notice": "Mapping: staker => array of strategies in which they have nonzero shares"
          },
          "stakerStrategyListLength(address)": {
            "notice": "Simple getter function that returns `stakerStrategyList[staker].length`."
          },
          "stakerStrategyShares(address,address)": {
            "notice": "Mapping: staker => Strategy => number of shares which they currently hold"
          },
          "strategyIsWhitelistedForDeposit(address)": {
            "notice": "Mapping: strategy => whether or not stakers are allowed to deposit into it"
          },
          "strategyWhitelister()": {
            "notice": "Permissioned role, which can be changed by the contract owner. Has the ability to edit the strategy whitelist"
          },
          "thirdPartyTransfersForbidden(address)": {
            "notice": "Mapping: strategy => whether or not stakers are allowed to transfer strategy shares to another address if true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker and also when performing queueWithdrawals, a staker can only withdraw to themselves"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "withdrawSharesAsTokens(address,address,uint256,address)": {
            "notice": "Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"
          },
          "withdrawalRootPending(bytes32)": {
            "notice": "*Deprecated* mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/core/StrategyManager.sol": "StrategyManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/core/StrategyManager.sol": {
        "keccak256": "0x974dbb924c9d0078236d3097da7de2f184ad7381075bfa1e9bc23de4944914e7",
        "urls": [
          "bzz-raw://8eda1efb414eff1d861afea26f4098a7fc50630758e22268eb75e260ce02b5b1",
          "dweb:/ipfs/QmSeKsvXuEuVLLaHjxYp56JmCFvsN5yfcMtzcKGxepVtMF"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/core/StrategyManagerStorage.sol": {
        "keccak256": "0x58de6f1ccb38a215e2b0829c1603553b25ef903fee5a5554042aac718f9402a5",
        "urls": [
          "bzz-raw://02ebad64a6ae929e14bfe46213fa1ea8c5bf41e142ac8a7ab1e23d6db8f096d6",
          "dweb:/ipfs/QmcZXwNwQ9tkXCyrYPBHSn9uBokaMgERvrGBKLM8L26wSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol": {
        "keccak256": "0x5e8efc3becf04d44f69f2794e7cc77d6ae291602a376ed88e6276b5917e8bcec",
        "urls": [
          "bzz-raw://1248163ce62bdcf6a7d24a32c217b6330381f24393032369271e10a8e33f544c",
          "dweb:/ipfs/QmSRNEwkfa4QimC1KthYKskiDsFYc8RAc3pcbZUTTaPVgg"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/core/StrategyManager.sol",
    "id": 6257,
    "exportedSymbols": {
      "Address": [
        60436
      ],
      "AddressUpgradeable": [
        57600
      ],
      "BeaconChainProofs": [
        9143
      ],
      "ContextUpgradeable": [
        57642
      ],
      "ECDSA": [
        61262
      ],
      "EIP1271SignatureUtils": [
        9528
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC1271": [
        58273
      ],
      "IERC20": [
        59726
      ],
      "IERC20Permit": [
        59831
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Initializable": [
        57298
      ],
      "Merkle": [
        9899
      ],
      "OwnableUpgradeable": [
        57147
      ],
      "Pausable": [
        10782
      ],
      "ReentrancyGuardUpgradeable": [
        57357
      ],
      "SafeERC20": [
        60141
      ],
      "StrategyManager": [
        6256
      ],
      "StrategyManagerStorage": [
        6373
      ],
      "Strings": [
        60855
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:23126:6",
    "nodes": [
      {
        "id": 5271,
        "nodeType": "PragmaDirective",
        "src": "37:24:6",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 5272,
        "nodeType": "ImportDirective",
        "src": "63:72:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 57299,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5273,
        "nodeType": "ImportDirective",
        "src": "136:72:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 57148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5274,
        "nodeType": "ImportDirective",
        "src": "209:82:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 57358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5275,
        "nodeType": "ImportDirective",
        "src": "292:65:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 60142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5276,
        "nodeType": "ImportDirective",
        "src": "358:44:6",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol",
        "file": "../interfaces/IEigenPodManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 7677,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5277,
        "nodeType": "ImportDirective",
        "src": "403:37:6",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 10783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5278,
        "nodeType": "ImportDirective",
        "src": "441:38:6",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/core/StrategyManagerStorage.sol",
        "file": "./StrategyManagerStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 6374,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5279,
        "nodeType": "ImportDirective",
        "src": "480:48:6",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol",
        "file": "../libraries/EIP1271SignatureUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6257,
        "sourceUnit": 9529,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6256,
        "nodeType": "ContractDefinition",
        "src": "969:22193:6",
        "nodes": [
          {
            "id": 5294,
            "nodeType": "UsingForDirective",
            "src": "1119:27:6",
            "nodes": [],
            "libraryName": {
              "id": 5291,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60141,
              "src": "1125:9:6"
            },
            "typeName": {
              "id": 5293,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5292,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59726,
                "src": "1139:6:6"
              },
              "referencedDeclaration": 59726,
              "src": "1139:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$59726",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5297,
            "nodeType": "VariableDeclaration",
            "src": "1204:43:6",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "1228:15:6",
            "scope": 6256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 5295,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1204:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5296,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1246:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 5299,
            "nodeType": "VariableDeclaration",
            "src": "1305:44:6",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "ORIGINAL_CHAIN_ID",
            "nameLocation": "1332:17:6",
            "scope": 6256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5298,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1305:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5311,
            "nodeType": "ModifierDefinition",
            "src": "1356:211:6",
            "nodes": [],
            "body": {
              "id": 5310,
              "nodeType": "Block",
              "src": "1391:176:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1422:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1422:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5304,
                          "name": "strategyWhitelister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6300,
                          "src": "1436:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1422:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c79537472617465677957686974656c69737465723a206e6f742074686520737472617465677957686974656c6973746572",
                        "id": 5306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1469:70:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eed5718e5f8918dd27a217047b762f206c0ebaa785baaebb5afad02662fe015",
                          "typeString": "literal_string \"StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister\""
                        },
                        "value": "StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eed5718e5f8918dd27a217047b762f206c0ebaa785baaebb5afad02662fe015",
                          "typeString": "literal_string \"StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister\""
                        }
                      ],
                      "id": 5301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1401:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:148:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5308,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:148:6"
                },
                {
                  "id": 5309,
                  "nodeType": "PlaceholderStatement",
                  "src": "1559:1:6"
                }
              ]
            },
            "name": "onlyStrategyWhitelister",
            "nameLocation": "1365:23:6",
            "parameters": {
              "id": 5300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:2:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5325,
            "nodeType": "ModifierDefinition",
            "src": "1573:258:6",
            "nodes": [],
            "body": {
              "id": 5324,
              "nodeType": "Block",
              "src": "1638:193:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5317,
                          "name": "strategyIsWhitelistedForDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6332,
                          "src": "1669:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                            "typeString": "mapping(contract IStrategy => bool)"
                          }
                        },
                        "id": 5319,
                        "indexExpression": {
                          "id": 5318,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5314,
                          "src": "1701:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1669:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c795374726174656769657357686974656c6973746564466f724465706f7369743a207374726174656779206e6f742077686974656c6973746564",
                        "id": 5320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:79:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a08b3e3f20ff77ec50f5e9e2b14191dfdb6adee44cea1ab3aa52c0f06173907f",
                          "typeString": "literal_string \"StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted\""
                        },
                        "value": "StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a08b3e3f20ff77ec50f5e9e2b14191dfdb6adee44cea1ab3aa52c0f06173907f",
                          "typeString": "literal_string \"StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted\""
                        }
                      ],
                      "id": 5316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1648:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:165:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5322,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:165:6"
                },
                {
                  "id": 5323,
                  "nodeType": "PlaceholderStatement",
                  "src": "1823:1:6"
                }
              ]
            },
            "name": "onlyStrategiesWhitelistedForDeposit",
            "nameLocation": "1582:35:6",
            "parameters": {
              "id": 5315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5314,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "1628:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5325,
                  "src": "1618:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5312,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "1618:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "1618:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:20:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5340,
            "nodeType": "ModifierDefinition",
            "src": "1837:171:6",
            "nodes": [],
            "body": {
              "id": 5339,
              "nodeType": "Block",
              "src": "1870:138:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5328,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1888:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1888:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5332,
                              "name": "delegation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6284,
                              "src": "1910:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                "typeString": "contract IDelegationManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                "typeString": "contract IDelegationManager"
                              }
                            ],
                            "id": 5331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1902:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5330,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1902:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1902:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1888:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c7944656c65676174696f6e4d616e616765723a206e6f74207468652044656c65676174696f6e4d616e61676572",
                        "id": 5335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1923:66:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ff82ab6d47a9ce27ff29e91e1f1e4107fa4114c50fd26c162706b3bf14f9c84",
                          "typeString": "literal_string \"StrategyManager.onlyDelegationManager: not the DelegationManager\""
                        },
                        "value": "StrategyManager.onlyDelegationManager: not the DelegationManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ff82ab6d47a9ce27ff29e91e1f1e4107fa4114c50fd26c162706b3bf14f9c84",
                          "typeString": "literal_string \"StrategyManager.onlyDelegationManager: not the DelegationManager\""
                        }
                      ],
                      "id": 5327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1880:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5337,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:110:6"
                },
                {
                  "id": 5338,
                  "nodeType": "PlaceholderStatement",
                  "src": "2000:1:6"
                }
              ]
            },
            "name": "onlyDelegationManager",
            "nameLocation": "1846:21:6",
            "parameters": {
              "id": 5326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:2:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5367,
            "nodeType": "FunctionDefinition",
            "src": "2277:274:6",
            "nodes": [],
            "body": {
              "id": 5366,
              "nodeType": "Block",
              "src": "2469:82:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5358,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57297,
                      "src": "2479:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5360,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:22:6"
                },
                {
                  "expression": {
                    "id": 5364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5361,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5299,
                      "src": "2511:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5362,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2531:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "2531:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2511:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5365,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:33:6"
                }
              ]
            },
            "documentation": {
              "id": 5341,
              "nodeType": "StructuredDocumentation",
              "src": "2014:258:6",
              "text": " @param _delegation The delegation contract of EigenLayer.\n @param _slasher The primary slashing contract of EigenLayer.\n @param _eigenPodManager The contract that keeps track of EigenPod stakes for restaking beacon chain ether."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5353,
                    "name": "_delegation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5344,
                    "src": "2428:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  {
                    "id": 5354,
                    "name": "_eigenPodManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5347,
                    "src": "2441:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  {
                    "id": 5355,
                    "name": "_slasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5350,
                    "src": "2459:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  }
                ],
                "id": 5356,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5352,
                  "name": "StrategyManagerStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6373,
                  "src": "2405:22:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2405:63:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5344,
                  "mutability": "mutable",
                  "name": "_delegation",
                  "nameLocation": "2317:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2298:30:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 5343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5342,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "2298:18:6"
                    },
                    "referencedDeclaration": 7102,
                    "src": "2298:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5347,
                  "mutability": "mutable",
                  "name": "_eigenPodManager",
                  "nameLocation": "2355:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2338:33:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                    "typeString": "contract IEigenPodManager"
                  },
                  "typeName": {
                    "id": 5346,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5345,
                      "name": "IEigenPodManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7676,
                      "src": "2338:16:6"
                    },
                    "referencedDeclaration": 7676,
                    "src": "2338:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$7676",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5350,
                  "mutability": "mutable",
                  "name": "_slasher",
                  "nameLocation": "2390:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2381:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$8033",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 5349,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5348,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8033,
                      "src": "2381:8:6"
                    },
                    "referencedDeclaration": 8033,
                    "src": "2381:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2288:116:6"
            },
            "returnParameters": {
              "id": 5357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5401,
            "nodeType": "FunctionDefinition",
            "src": "3123:431:6",
            "nodes": [],
            "body": {
              "id": 5400,
              "nodeType": "Block",
              "src": "3322:232:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5382,
                      "name": "_DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6293,
                      "src": "3332:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5383,
                        "name": "_calculateDomainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6226,
                        "src": "3352:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view returns (bytes32)"
                        }
                      },
                      "id": 5384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3352:27:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3332:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 5386,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5388,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5375,
                        "src": "3407:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 5389,
                        "name": "initialPausedStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "3424:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5387,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10611,
                      "src": "3389:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7778_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 5390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5391,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5393,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5370,
                        "src": "3473:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5392,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57141,
                      "src": "3454:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5395,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:32:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5397,
                        "name": "initialStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5372,
                        "src": "3520:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5396,
                      "name": "_setStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6103,
                      "src": "3496:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5399,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:51:6"
                }
              ]
            },
            "documentation": {
              "id": 5368,
              "nodeType": "StructuredDocumentation",
              "src": "2584:534:6",
              "text": " @notice Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set),\n and transfers contract ownership to the specified `initialOwner`.\n @param _pauserRegistry Used for access control of pausing.\n @param initialOwner Ownership of this contract is transferred to this address.\n @param initialStrategyWhitelister The initial value of `strategyWhitelister` to set.\n @param  initialPausedStatus The initial value of `_paused` to set."
            },
            "functionSelector": "cf756fdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5380,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5379,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57218,
                  "src": "3310:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3310:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "3132:10:6",
            "parameters": {
              "id": 5378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5370,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "3160:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "3152:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5372,
                  "mutability": "mutable",
                  "name": "initialStrategyWhitelister",
                  "nameLocation": "3190:26:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "3182:34:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5375,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "3242:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "3226:31:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 5374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5373,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7778,
                      "src": "3226:15:6"
                    },
                    "referencedDeclaration": 7778,
                    "src": "3226:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5377,
                  "mutability": "mutable",
                  "name": "initialPausedStatus",
                  "nameLocation": "3275:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "3267:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3142:158:6"
            },
            "returnParameters": {
              "id": 5381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3322:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5431,
            "nodeType": "FunctionDefinition",
            "src": "4426:274:6",
            "nodes": [],
            "body": {
              "id": 5430,
              "nodeType": "Block",
              "src": "4617:83:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5420,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5418,
                      "src": "4627:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 5422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4657:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4657:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5424,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5405,
                          "src": "4669:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        {
                          "id": 5425,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5408,
                          "src": "4679:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 5426,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5410,
                          "src": "4686:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5421,
                        "name": "_depositIntoStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
                        "src": "4636:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_contract$_IERC20_$59726_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,contract IStrategy,contract IERC20,uint256) returns (uint256)"
                        }
                      },
                      "id": 5427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4636:57:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4627:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5429,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:66:6"
                }
              ]
            },
            "baseFunctions": [
              8196
            ],
            "documentation": {
              "id": 5402,
              "nodeType": "StructuredDocumentation",
              "src": "3560:861:6",
              "text": " @notice Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy."
            },
            "functionSelector": "e7a050aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5413,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5297,
                    "src": "4562:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 5414,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5412,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "4544:17:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4544:34:6"
              },
              {
                "id": 5416,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5415,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57351,
                  "src": "4579:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4579:12:6"
              }
            ],
            "name": "depositIntoStrategy",
            "nameLocation": "4435:19:6",
            "parameters": {
              "id": 5411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5405,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4474:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5431,
                  "src": "4464:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5404,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5403,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "4464:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "4464:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5408,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4499:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5431,
                  "src": "4492:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5407,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5406,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "4492:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "4492:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5410,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4522:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5431,
                  "src": "4514:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4454:80:6"
            },
            "returnParameters": {
              "id": 5419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5418,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4609:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5431,
                  "src": "4601:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4601:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4600:16:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5531,
            "nodeType": "FunctionDefinition",
            "src": "6409:1571:6",
            "nodes": [],
            "body": {
              "id": 5530,
              "nodeType": "Block",
              "src": "6693:1287:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6724:39:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 5457,
                            "name": "thirdPartyTransfersForbidden",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6342,
                            "src": "6725:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                              "typeString": "mapping(contract IStrategy => bool)"
                            }
                          },
                          "id": 5459,
                          "indexExpression": {
                            "id": 5458,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5435,
                            "src": "6754:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6725:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6465706f736974496e746f5374726174656779576974685369676e61747572653a207468697264207472616e73666572732064697361626c6564",
                        "id": 5461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6777:76:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c957d3ef66a0ee3272372c67d26586ef00af3a37be275942317cb5f4661ffdf8",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: third transfers disabled\""
                        },
                        "value": "StrategyManager.depositIntoStrategyWithSignature: third transfers disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c957d3ef66a0ee3272372c67d26586ef00af3a37be275942317cb5f4661ffdf8",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: third transfers disabled\""
                        }
                      ],
                      "id": 5456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6703:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6703:160:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5463,
                  "nodeType": "ExpressionStatement",
                  "src": "6703:160:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5465,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5444,
                          "src": "6881:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 5466,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6891:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6891:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6881:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6465706f736974496e746f5374726174656779576974685369676e61747572653a207369676e61747572652065787069726564",
                        "id": 5469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6908:69:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b1335c32999e9b8f96bc33eca3a20f63765c34e4f380b93bceca3bbeeb560",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature expired\""
                        },
                        "value": "StrategyManager.depositIntoStrategyWithSignature: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b1335c32999e9b8f96bc33eca3a20f63765c34e4f380b93bceca3bbeeb560",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature expired\""
                        }
                      ],
                      "id": 5464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6873:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6873:105:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5471,
                  "nodeType": "ExpressionStatement",
                  "src": "6873:105:6"
                },
                {
                  "assignments": [
                    5473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5473,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "7062:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5530,
                      "src": "7054:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7054:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5477,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5474,
                      "name": "nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6297,
                      "src": "7070:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5476,
                    "indexExpression": {
                      "id": 5475,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5442,
                      "src": "7077:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7070:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7054:30:6"
                },
                {
                  "assignments": [
                    5479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5479,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "7102:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5530,
                      "src": "7094:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5478,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7094:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5491,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5483,
                            "name": "DEPOSIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6278,
                            "src": "7136:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5484,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5435,
                            "src": "7154:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          {
                            "id": 5485,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5438,
                            "src": "7164:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$59726",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 5486,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5440,
                            "src": "7171:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5487,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5473,
                            "src": "7179:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5488,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5444,
                            "src": "7186:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$59726",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5481,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7125:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7125:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7125:68:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5480,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7115:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7115:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7094:100:6"
                },
                {
                  "id": 5500,
                  "nodeType": "UncheckedBlock",
                  "src": "7204:61:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 5498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 5492,
                            "name": "nonces",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6297,
                            "src": "7228:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5494,
                          "indexExpression": {
                            "id": 5493,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5442,
                            "src": "7235:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7228:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5495,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5473,
                            "src": "7245:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 5496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7253:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7245:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7228:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5499,
                      "nodeType": "ExpressionStatement",
                      "src": "7228:26:6"
                    }
                  ]
                },
                {
                  "assignments": [
                    5502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5502,
                      "mutability": "mutable",
                      "name": "digestHash",
                      "nameLocation": "7320:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5530,
                      "src": "7312:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5501,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7312:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5512,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 5506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7360:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5507,
                              "name": "domainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6201,
                              "src": "7372:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 5508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7372:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5509,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5479,
                            "src": "7391:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 5504,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7343:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7343:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7343:59:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5503,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7333:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7333:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7312:91:6"
                },
                {
                  "documentation": " check validity of signature:\n 1) if `staker` is an EOA, then `signature` must be a valid ECDSA signature from `staker`,\n indicating their intention for this action\n 2) if `staker` is a contract, then `signature` will be checked according to EIP-1271",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5516,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5442,
                        "src": "7774:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5517,
                        "name": "digestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5502,
                        "src": "7782:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5518,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5446,
                        "src": "7794:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 5513,
                        "name": "EIP1271SignatureUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9528,
                        "src": "7729:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EIP1271SignatureUtils_$9528_$",
                          "typeString": "type(library EIP1271SignatureUtils)"
                        }
                      },
                      "id": 5515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkSignature_EIP1271",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9527,
                      "src": "7729:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) view"
                      }
                    },
                    "id": 5519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7729:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5520,
                  "nodeType": "ExpressionStatement",
                  "src": "7729:75:6"
                },
                {
                  "expression": {
                    "id": 5528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5521,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5454,
                      "src": "7911:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5523,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5442,
                          "src": "7941:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5524,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "7949:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        {
                          "id": 5525,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "7959:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 5526,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5440,
                          "src": "7966:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5522,
                        "name": "_depositIntoStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
                        "src": "7920:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_contract$_IERC20_$59726_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,contract IStrategy,contract IERC20,uint256) returns (uint256)"
                        }
                      },
                      "id": 5527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7920:53:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7911:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5529,
                  "nodeType": "ExpressionStatement",
                  "src": "7911:62:6"
                }
              ]
            },
            "baseFunctions": [
              8216
            ],
            "documentation": {
              "id": 5432,
              "nodeType": "StructuredDocumentation",
              "src": "4706:1698:6",
              "text": " @notice Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`,\n who must sign off on the action.\n Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed\n purely to help one address deposit 'for' another.\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @param staker the staker that the deposited assets will be credited to\n @param expiry the timestamp at which the signature expires\n @param signature is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward\n following EIP-1271 if the `staker` is a contract\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev A signature is required for this function to eliminate the possibility of griefing attacks, specifically those\n targeting stakers who may be attempting to undelegate.\n @dev Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy\n  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy"
            },
            "functionSelector": "32e89ace",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5449,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5297,
                    "src": "6638:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 5450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5448,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "6620:17:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6620:34:6"
              },
              {
                "id": 5452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5451,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57351,
                  "src": "6655:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6655:12:6"
              }
            ],
            "name": "depositIntoStrategyWithSignature",
            "nameLocation": "6418:32:6",
            "parameters": {
              "id": 5447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5435,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "6470:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6460:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5433,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "6460:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "6460:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5438,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6495:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6488:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5436,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "6488:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "6488:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5440,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6518:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6510:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6510:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5442,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6542:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6534:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6534:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5444,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "6566:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6558:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5446,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "6595:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6582:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5445,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6450:160:6"
            },
            "returnParameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6685:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "6677:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6676:16:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5551,
            "nodeType": "FunctionDefinition",
            "src": "8122:191:6",
            "nodes": [],
            "body": {
              "id": 5550,
              "nodeType": "Block",
              "src": "8257:56:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5545,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5534,
                        "src": "8281:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5546,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5537,
                        "src": "8289:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5547,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5539,
                        "src": "8299:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5544,
                      "name": "_removeShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5996,
                      "src": "8267:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,contract IStrategy,uint256) returns (bool)"
                      }
                    },
                    "id": 5548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8267:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5549,
                  "nodeType": "ExpressionStatement",
                  "src": "8267:39:6"
                }
              ]
            },
            "baseFunctions": [
              8227
            ],
            "documentation": {
              "id": 5532,
              "nodeType": "StructuredDocumentation",
              "src": "7986:131:6",
              "text": "@notice Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"
            },
            "functionSelector": "8c80d4e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5541,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5340,
                  "src": "8235:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8235:21:6"
              }
            ],
            "name": "removeShares",
            "nameLocation": "8131:12:6",
            "parameters": {
              "id": 5540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5534,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "8161:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5551,
                  "src": "8153:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8153:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5537,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "8187:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5551,
                  "src": "8177:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5536,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5535,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "8177:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "8177:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5539,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "8213:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5551,
                  "src": "8205:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8205:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8143:82:6"
            },
            "returnParameters": {
              "id": 5543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8257:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5575,
            "nodeType": "FunctionDefinition",
            "src": "8441:214:6",
            "nodes": [],
            "body": {
              "id": 5574,
              "nodeType": "Block",
              "src": "8595:60:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5568,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5554,
                        "src": "8616:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5569,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5557,
                        "src": "8624:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5570,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5560,
                        "src": "8631:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5571,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5562,
                        "src": "8641:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5567,
                      "name": "_addShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5874,
                      "src": "8605:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract IStrategy,uint256)"
                      }
                    },
                    "id": 5572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8605:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5573,
                  "nodeType": "ExpressionStatement",
                  "src": "8605:43:6"
                }
              ]
            },
            "baseFunctions": [
              8241
            ],
            "documentation": {
              "id": 5552,
              "nodeType": "StructuredDocumentation",
              "src": "8319:117:6",
              "text": "@notice Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"
            },
            "functionSelector": "c4623ea1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5564,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5340,
                  "src": "8573:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8573:21:6"
              }
            ],
            "name": "addShares",
            "nameLocation": "8450:9:6",
            "parameters": {
              "id": 5563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5554,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "8477:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5575,
                  "src": "8469:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8469:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5557,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8500:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5575,
                  "src": "8493:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5556,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5555,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "8493:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "8493:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5560,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "8525:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5575,
                  "src": "8515:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5558,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "8515:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "8515:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5562,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "8551:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5575,
                  "src": "8543:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8543:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8459:104:6"
            },
            "returnParameters": {
              "id": 5566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8595:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5600,
            "nodeType": "FunctionDefinition",
            "src": "8774:230:6",
            "nodes": [],
            "body": {
              "id": 5599,
              "nodeType": "Block",
              "src": "8944:60:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5594,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5578,
                        "src": "8972:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5595,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5586,
                        "src": "8983:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5596,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5583,
                        "src": "8990:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5591,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5581,
                        "src": "8954:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 5593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8059,
                      "src": "8954:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256) external"
                      }
                    },
                    "id": 5597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8954:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5598,
                  "nodeType": "ExpressionStatement",
                  "src": "8954:43:6"
                }
              ]
            },
            "baseFunctions": [
              8255
            ],
            "documentation": {
              "id": 5576,
              "nodeType": "StructuredDocumentation",
              "src": "8661:108:6",
              "text": "@notice Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"
            },
            "functionSelector": "c608c7f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5589,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5588,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5340,
                  "src": "8922:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8922:21:6"
              }
            ],
            "name": "withdrawSharesAsTokens",
            "nameLocation": "8783:22:6",
            "parameters": {
              "id": 5587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5578,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8823:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5600,
                  "src": "8815:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8815:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5581,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "8852:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5600,
                  "src": "8842:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5579,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "8842:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "8842:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5583,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "8878:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5600,
                  "src": "8870:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8870:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5586,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8901:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5600,
                  "src": "8894:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5584,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "8894:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "8894:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8805:107:6"
            },
            "returnParameters": {
              "id": 5590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8944:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5642,
            "nodeType": "FunctionDefinition",
            "src": "9294:532:6",
            "nodes": [],
            "body": {
              "id": 5641,
              "nodeType": "Block",
              "src": "9440:386:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5614,
                      "mutability": "mutable",
                      "name": "existingWithdrawalRoot",
                      "nameLocation": "9458:22:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5641,
                      "src": "9450:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5613,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9450:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5618,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5616,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5604,
                        "src": "9507:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                          "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                          "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                        }
                      ],
                      "id": 5615,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6255,
                      "src": "9483:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9483:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9450:74:6"
                },
                {
                  "assignments": [
                    5620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5620,
                      "mutability": "mutable",
                      "name": "isDeleted",
                      "nameLocation": "9539:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5641,
                      "src": "9534:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5619,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9534:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5621,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9534:14:6"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 5622,
                      "name": "withdrawalRootPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6322,
                      "src": "9613:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 5624,
                    "indexExpression": {
                      "id": 5623,
                      "name": "existingWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5614,
                      "src": "9635:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9613:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5636,
                  "nodeType": "IfStatement",
                  "src": "9609:159:6",
                  "trueBody": {
                    "id": 5635,
                    "nodeType": "Block",
                    "src": "9660:108:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 5629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5625,
                              "name": "withdrawalRootPending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6322,
                              "src": "9674:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 5627,
                            "indexExpression": {
                              "id": 5626,
                              "name": "existingWithdrawalRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5614,
                              "src": "9696:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9674:45:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 5628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9722:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "9674:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5630,
                        "nodeType": "ExpressionStatement",
                        "src": "9674:53:6"
                      },
                      {
                        "expression": {
                          "id": 5633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5631,
                            "name": "isDeleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5620,
                            "src": "9741:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9753:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9741:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5634,
                        "nodeType": "ExpressionStatement",
                        "src": "9741:16:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 5637,
                        "name": "isDeleted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5620,
                        "src": "9785:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 5638,
                        "name": "existingWithdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5614,
                        "src": "9796:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 5639,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9784:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 5612,
                  "id": 5640,
                  "nodeType": "Return",
                  "src": "9777:42:6"
                }
              ]
            },
            "baseFunctions": [
              8374
            ],
            "documentation": {
              "id": 5601,
              "nodeType": "StructuredDocumentation",
              "src": "9010:279:6",
              "text": "@notice Function called by the DelegationManager as part of the process of transferring existing queued withdrawals from this contract to that contract.\n @dev This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
            },
            "functionSelector": "cd293f6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5607,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5606,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5340,
                  "src": "9395:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "9395:21:6"
              }
            ],
            "name": "migrateQueuedWithdrawal",
            "nameLocation": "9303:23:6",
            "parameters": {
              "id": 5605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5604,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "9368:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5642,
                  "src": "9327:57:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 5603,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5602,
                      "name": "DeprecatedStruct_QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8364,
                      "src": "9327:33:6"
                    },
                    "referencedDeclaration": 8364,
                    "src": "9327:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9326:59:6"
            },
            "returnParameters": {
              "id": 5612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5642,
                  "src": "9425:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5608,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9425:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5642,
                  "src": "9431:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5610,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9431:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9424:15:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5659,
            "nodeType": "FunctionDefinition",
            "src": "10284:194:6",
            "nodes": [],
            "body": {
              "id": 5658,
              "nodeType": "Block",
              "src": "10412:66:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5654,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5646,
                        "src": "10455:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5655,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5648,
                        "src": "10465:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5653,
                      "name": "_setThirdPartyTransfersForbidden",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6087,
                      "src": "10422:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$8135_$_t_bool_$returns$__$",
                        "typeString": "function (contract IStrategy,bool)"
                      }
                    },
                    "id": 5656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10422:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5657,
                  "nodeType": "ExpressionStatement",
                  "src": "10422:49:6"
                }
              ]
            },
            "documentation": {
              "id": 5643,
              "nodeType": "StructuredDocumentation",
              "src": "9832:447:6",
              "text": " If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker\n and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves.\n Defaulted to false for all existing strategies.\n @param strategy The strategy to set `thirdPartyTransfersForbidden` value to\n @param value bool value to set `thirdPartyTransfersForbidden` to"
            },
            "functionSelector": "4e5a4263",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5650,
                  "name": "onlyStrategyWhitelister",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5311,
                  "src": "10388:23:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10388:23:6"
              }
            ],
            "name": "setThirdPartyTransfersForbidden",
            "nameLocation": "10293:31:6",
            "parameters": {
              "id": 5649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5646,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "10344:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5659,
                  "src": "10334:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5645,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5644,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "10334:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "10334:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5648,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10367:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5659,
                  "src": "10362:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10362:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10324:54:6"
            },
            "returnParameters": {
              "id": 5652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10412:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5672,
            "nodeType": "FunctionDefinition",
            "src": "10660:147:6",
            "nodes": [],
            "body": {
              "id": 5671,
              "nodeType": "Block",
              "src": "10743:64:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5668,
                        "name": "newStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5662,
                        "src": "10777:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5667,
                      "name": "_setStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6103,
                      "src": "10753:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10753:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5670,
                  "nodeType": "ExpressionStatement",
                  "src": "10753:47:6"
                }
              ]
            },
            "documentation": {
              "id": 5660,
              "nodeType": "StructuredDocumentation",
              "src": "10484:171:6",
              "text": " @notice Owner-only function to change the `strategyWhitelister` address.\n @param newStrategyWhitelister new address for the `strategyWhitelister`."
            },
            "functionSelector": "c6656702",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5665,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5664,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57061,
                  "src": "10733:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10733:9:6"
              }
            ],
            "name": "setStrategyWhitelister",
            "nameLocation": "10669:22:6",
            "parameters": {
              "id": 5663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5662,
                  "mutability": "mutable",
                  "name": "newStrategyWhitelister",
                  "nameLocation": "10700:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5672,
                  "src": "10692:30:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10692:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10691:32:6"
            },
            "returnParameters": {
              "id": 5666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10743:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5744,
            "nodeType": "FunctionDefinition",
            "src": "11227:1073:6",
            "nodes": [],
            "body": {
              "id": 5743,
              "nodeType": "Block",
              "src": "11419:881:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5686,
                            "name": "strategiesToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5677,
                            "src": "11450:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 5687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11450:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5688,
                            "name": "thirdPartyTransfersForbiddenValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5680,
                            "src": "11482:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                              "typeString": "bool[] calldata"
                            }
                          },
                          "id": 5689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11482:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11450:73:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e61646453747261746567696573546f4465706f73697457686974656c6973743a206172726179206c656e6774687320646f206e6f74206d61746368",
                        "id": 5691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11537:77:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eb95ea1f109edd8c0cca3be35b7df130fcf01f5844b8338a5abdfbe001f3f23",
                          "typeString": "literal_string \"StrategyManager.addStrategiesToDepositWhitelist: array lengths do not match\""
                        },
                        "value": "StrategyManager.addStrategiesToDepositWhitelist: array lengths do not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eb95ea1f109edd8c0cca3be35b7df130fcf01f5844b8338a5abdfbe001f3f23",
                          "typeString": "literal_string \"StrategyManager.addStrategiesToDepositWhitelist: array lengths do not match\""
                        }
                      ],
                      "id": 5685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11429:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11429:195:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5693,
                  "nodeType": "ExpressionStatement",
                  "src": "11429:195:6"
                },
                {
                  "assignments": [
                    5695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5695,
                      "mutability": "mutable",
                      "name": "strategiesToWhitelistLength",
                      "nameLocation": "11642:27:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5743,
                      "src": "11634:35:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11634:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5698,
                  "initialValue": {
                    "expression": {
                      "id": 5696,
                      "name": "strategiesToWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5677,
                      "src": "11672:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 5697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11672:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11634:66:6"
                },
                {
                  "body": {
                    "id": 5741,
                    "nodeType": "Block",
                    "src": "11765:529:6",
                    "statements": [
                      {
                        "condition": {
                          "id": 5711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "11873:58:6",
                          "subExpression": {
                            "baseExpression": {
                              "id": 5706,
                              "name": "strategyIsWhitelistedForDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6332,
                              "src": "11874:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                                "typeString": "mapping(contract IStrategy => bool)"
                              }
                            },
                            "id": 5710,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 5707,
                                "name": "strategiesToWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5677,
                                "src": "11906:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              "id": 5709,
                              "indexExpression": {
                                "id": 5708,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5700,
                                "src": "11928:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11906:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11874:57:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5736,
                        "nodeType": "IfStatement",
                        "src": "11869:356:6",
                        "trueBody": {
                          "id": 5735,
                          "nodeType": "Block",
                          "src": "11933:292:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 5718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 5712,
                                    "name": "strategyIsWhitelistedForDeposit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6332,
                                    "src": "11951:31:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                                      "typeString": "mapping(contract IStrategy => bool)"
                                    }
                                  },
                                  "id": 5716,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 5713,
                                      "name": "strategiesToWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5677,
                                      "src": "11983:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5715,
                                    "indexExpression": {
                                      "id": 5714,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5700,
                                      "src": "12005:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11983:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11951:57:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 5717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12011:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11951:64:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5719,
                              "nodeType": "ExpressionStatement",
                              "src": "11951:64:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 5721,
                                      "name": "strategiesToWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5677,
                                      "src": "12070:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5723,
                                    "indexExpression": {
                                      "id": 5722,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5700,
                                      "src": "12092:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12070:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 5720,
                                  "name": "StrategyAddedToDepositWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8176,
                                  "src": "12038:31:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$8135_$returns$__$",
                                    "typeString": "function (contract IStrategy)"
                                  }
                                },
                                "id": 5724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12038:57:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5725,
                              "nodeType": "EmitStatement",
                              "src": "12033:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 5727,
                                      "name": "strategiesToWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5677,
                                      "src": "12146:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5729,
                                    "indexExpression": {
                                      "id": 5728,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5700,
                                      "src": "12168:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12146:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 5730,
                                      "name": "thirdPartyTransfersForbiddenValues",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5680,
                                      "src": "12172:34:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                                        "typeString": "bool[] calldata"
                                      }
                                    },
                                    "id": 5732,
                                    "indexExpression": {
                                      "id": 5731,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5700,
                                      "src": "12207:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12172:37:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 5726,
                                  "name": "_setThirdPartyTransfersForbidden",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6087,
                                  "src": "12113:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$8135_$_t_bool_$returns$__$",
                                    "typeString": "function (contract IStrategy,bool)"
                                  }
                                },
                                "id": 5733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12113:97:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5734,
                              "nodeType": "ExpressionStatement",
                              "src": "12113:97:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 5740,
                        "nodeType": "UncheckedBlock",
                        "src": "12238:46:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 5738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12266:3:6",
                              "subExpression": {
                                "id": 5737,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5700,
                                "src": "12268:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5739,
                            "nodeType": "ExpressionStatement",
                            "src": "12266:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5703,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5700,
                      "src": "11730:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5704,
                      "name": "strategiesToWhitelistLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5695,
                      "src": "11734:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11730:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5742,
                  "initializationExpression": {
                    "assignments": [
                      5700
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5700,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11723:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 5742,
                        "src": "11715:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5699,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11715:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5702,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11727:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11715:13:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "11710:584:6"
                }
              ]
            },
            "baseFunctions": [
              8298
            ],
            "documentation": {
              "id": 5673,
              "nodeType": "StructuredDocumentation",
              "src": "10813:409:6",
              "text": " @notice Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToWhitelist Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\n @param thirdPartyTransfersForbiddenValues bool values to set `thirdPartyTransfersForbidden` to for each strategy"
            },
            "functionSelector": "df5b3547",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5683,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5682,
                  "name": "onlyStrategyWhitelister",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5311,
                  "src": "11395:23:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11395:23:6"
              }
            ],
            "name": "addStrategiesToDepositWhitelist",
            "nameLocation": "11236:31:6",
            "parameters": {
              "id": 5681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5677,
                  "mutability": "mutable",
                  "name": "strategiesToWhitelist",
                  "nameLocation": "11298:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5744,
                  "src": "11277:42:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5675,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5674,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "11277:9:6"
                      },
                      "referencedDeclaration": 8135,
                      "src": "11277:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 5676,
                    "nodeType": "ArrayTypeName",
                    "src": "11277:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5680,
                  "mutability": "mutable",
                  "name": "thirdPartyTransfersForbiddenValues",
                  "nameLocation": "11345:34:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5744,
                  "src": "11329:50:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5678,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "11329:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5679,
                    "nodeType": "ArrayTypeName",
                    "src": "11329:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11267:118:6"
            },
            "returnParameters": {
              "id": 5684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11419:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5801,
            "nodeType": "FunctionDefinition",
            "src": "12606:921:6",
            "nodes": [],
            "body": {
              "id": 5800,
              "nodeType": "Block",
              "src": "12753:774:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5755,
                      "mutability": "mutable",
                      "name": "strategiesToRemoveFromWhitelistLength",
                      "nameLocation": "12771:37:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5800,
                      "src": "12763:45:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12763:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5758,
                  "initialValue": {
                    "expression": {
                      "id": 5756,
                      "name": "strategiesToRemoveFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5749,
                      "src": "12811:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 5757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12811:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12763:86:6"
                },
                {
                  "body": {
                    "id": 5798,
                    "nodeType": "Block",
                    "src": "12924:597:6",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 5766,
                            "name": "strategyIsWhitelistedForDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6332,
                            "src": "13028:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                              "typeString": "mapping(contract IStrategy => bool)"
                            }
                          },
                          "id": 5770,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 5767,
                              "name": "strategiesToRemoveFromWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5749,
                              "src": "13060:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 5769,
                            "indexExpression": {
                              "id": 5768,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5760,
                              "src": "13092:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13060:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13028:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5793,
                        "nodeType": "IfStatement",
                        "src": "13024:428:6",
                        "trueBody": {
                          "id": 5792,
                          "nodeType": "Block",
                          "src": "13097:355:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 5777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 5771,
                                    "name": "strategyIsWhitelistedForDeposit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6332,
                                    "src": "13115:31:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                                      "typeString": "mapping(contract IStrategy => bool)"
                                    }
                                  },
                                  "id": 5775,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 5772,
                                      "name": "strategiesToRemoveFromWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5749,
                                      "src": "13147:31:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5774,
                                    "indexExpression": {
                                      "id": 5773,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5760,
                                      "src": "13179:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13147:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13115:67:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 5776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13185:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "13115:75:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5778,
                              "nodeType": "ExpressionStatement",
                              "src": "13115:75:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 5780,
                                      "name": "strategiesToRemoveFromWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5749,
                                      "src": "13249:31:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5782,
                                    "indexExpression": {
                                      "id": 5781,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5760,
                                      "src": "13281:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13249:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 5779,
                                  "name": "StrategyRemovedFromDepositWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8182,
                                  "src": "13213:35:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$8135_$returns$__$",
                                    "typeString": "function (contract IStrategy)"
                                  }
                                },
                                "id": 5783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13213:71:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5784,
                              "nodeType": "EmitStatement",
                              "src": "13208:76:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 5786,
                                      "name": "strategiesToRemoveFromWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5749,
                                      "src": "13395:31:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 5788,
                                    "indexExpression": {
                                      "id": 5787,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5760,
                                      "src": "13427:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13395:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 5789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13431:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 5785,
                                  "name": "_setThirdPartyTransfersForbidden",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6087,
                                  "src": "13362:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$8135_$_t_bool_$returns$__$",
                                    "typeString": "function (contract IStrategy,bool)"
                                  }
                                },
                                "id": 5790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13362:75:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5791,
                              "nodeType": "ExpressionStatement",
                              "src": "13362:75:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 5797,
                        "nodeType": "UncheckedBlock",
                        "src": "13465:46:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 5795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "13493:3:6",
                              "subExpression": {
                                "id": 5794,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5760,
                                "src": "13495:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5796,
                            "nodeType": "ExpressionStatement",
                            "src": "13493:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5763,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5760,
                      "src": "12879:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5764,
                      "name": "strategiesToRemoveFromWhitelistLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5755,
                      "src": "12883:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12879:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5799,
                  "initializationExpression": {
                    "assignments": [
                      5760
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5760,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12872:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 5799,
                        "src": "12864:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12864:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5762,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12876:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12864:13:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "12859:662:6"
                }
              ]
            },
            "baseFunctions": [
              8306
            ],
            "documentation": {
              "id": 5745,
              "nodeType": "StructuredDocumentation",
              "src": "12306:295:6",
              "text": " @notice Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToRemoveFromWhitelist Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"
            },
            "functionSelector": "b5d8b5b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5751,
                  "name": "onlyStrategyWhitelister",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5311,
                  "src": "12729:23:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "12729:23:6"
              }
            ],
            "name": "removeStrategiesFromDepositWhitelist",
            "nameLocation": "12615:36:6",
            "parameters": {
              "id": 5750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5749,
                  "mutability": "mutable",
                  "name": "strategiesToRemoveFromWhitelist",
                  "nameLocation": "12682:31:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5801,
                  "src": "12661:52:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5747,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5746,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "12661:9:6"
                      },
                      "referencedDeclaration": 8135,
                      "src": "12661:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 5748,
                    "nodeType": "ArrayTypeName",
                    "src": "12661:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12651:68:6"
            },
            "returnParameters": {
              "id": 5753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12753:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5874,
            "nodeType": "FunctionDefinition",
            "src": "14316:949:6",
            "nodes": [],
            "body": {
              "id": 5873,
              "nodeType": "Block",
              "src": "14411:854:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5816,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5804,
                          "src": "14464:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14482:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14474:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5817,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14474:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14474:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14464:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a207374616b65722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 5822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14486:59:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0faa85a9bec34ca9a98c3a1b5641a249d83fc6e8ba41f566db87819bd86acea1",
                          "typeString": "literal_string \"StrategyManager._addShares: staker cannot be zero address\""
                        },
                        "value": "StrategyManager._addShares: staker cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0faa85a9bec34ca9a98c3a1b5641a249d83fc6e8ba41f566db87819bd86acea1",
                          "typeString": "literal_string \"StrategyManager._addShares: staker cannot be zero address\""
                        }
                      ],
                      "id": 5815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14456:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14456:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5824,
                  "nodeType": "ExpressionStatement",
                  "src": "14456:90:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5826,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5812,
                          "src": "14564:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14574:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14564:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a207368617265732073686f756c64206e6f74206265207a65726f21",
                        "id": 5829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14577:56:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce519665a6b93fe095241af2c2664f6ed1e4ca920805999803e3ca90a4cff68c",
                          "typeString": "literal_string \"StrategyManager._addShares: shares should not be zero!\""
                        },
                        "value": "StrategyManager._addShares: shares should not be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce519665a6b93fe095241af2c2664f6ed1e4ca920805999803e3ca90a4cff68c",
                          "typeString": "literal_string \"StrategyManager._addShares: shares should not be zero!\""
                        }
                      ],
                      "id": 5825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14556:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14556:78:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5831,
                  "nodeType": "ExpressionStatement",
                  "src": "14556:78:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5832,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6310,
                          "src": "14735:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 5834,
                        "indexExpression": {
                          "id": 5833,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5804,
                          "src": "14756:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14735:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 5836,
                      "indexExpression": {
                        "id": 5835,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5810,
                        "src": "14764:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14735:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14777:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14735:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5857,
                  "nodeType": "IfStatement",
                  "src": "14731:335:6",
                  "trueBody": {
                    "id": 5856,
                    "nodeType": "Block",
                    "src": "14780:286:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 5840,
                                    "name": "stakerStrategyList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6317,
                                    "src": "14819:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                      "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                    }
                                  },
                                  "id": 5842,
                                  "indexExpression": {
                                    "id": 5841,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5804,
                                    "src": "14838:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14819:26:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 5843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14819:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 5844,
                                "name": "MAX_STAKER_STRATEGY_LIST_LENGTH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6281,
                                "src": "14855:31:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "14819:67:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a206465706f73697420776f756c6420657863656564204d41585f5354414b45525f53545241544547595f4c4953545f4c454e475448",
                              "id": 5846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14904:82:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_818243ee92c680502bd49b10cd721b7368e6bf025348a28587882777b4d49231",
                                "typeString": "literal_string \"StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH\""
                              },
                              "value": "StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_818243ee92c680502bd49b10cd721b7368e6bf025348a28587882777b4d49231",
                                "typeString": "literal_string \"StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH\""
                              }
                            ],
                            "id": 5839,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14794:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14794:206:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5848,
                        "nodeType": "ExpressionStatement",
                        "src": "14794:206:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5853,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5810,
                              "src": "15046:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 5849,
                                "name": "stakerStrategyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6317,
                                "src": "15014:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                }
                              },
                              "id": 5851,
                              "indexExpression": {
                                "id": 5850,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5804,
                                "src": "15033:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15014:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 5852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "15014:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr_$_t_contract$_IStrategy_$8135_$returns$__$bound_to$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr_$",
                              "typeString": "function (contract IStrategy[] storage pointer,contract IStrategy)"
                            }
                          },
                          "id": 5854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15014:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5855,
                        "nodeType": "ExpressionStatement",
                        "src": "15014:41:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5858,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6310,
                          "src": "15154:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 5861,
                        "indexExpression": {
                          "id": 5859,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5804,
                          "src": "15175:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15154:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 5862,
                      "indexExpression": {
                        "id": 5860,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5810,
                        "src": "15183:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15154:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5863,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5812,
                      "src": "15196:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15154:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5865,
                  "nodeType": "ExpressionStatement",
                  "src": "15154:48:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5867,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5804,
                        "src": "15226:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5868,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5807,
                        "src": "15234:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5869,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5810,
                        "src": "15241:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5870,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5812,
                        "src": "15251:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5866,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8155,
                      "src": "15218:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract IStrategy,uint256)"
                      }
                    },
                    "id": 5871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15218:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5872,
                  "nodeType": "EmitStatement",
                  "src": "15213:45:6"
                }
              ]
            },
            "documentation": {
              "id": 5802,
              "nodeType": "StructuredDocumentation",
              "src": "13560:751:6",
              "text": " @notice This function adds `shares` for a given `strategy` to the `staker` and runs through the necessary update logic.\n @param staker The address to add shares to\n @param token The token that is being deposited (used for indexing)\n @param strategy The Strategy in which the `staker` is receiving shares\n @param shares The amount of shares to grant to the `staker`\n @dev In particular, this function calls `delegation.increaseDelegatedShares(staker, strategy, shares)` to ensure that all\n delegated shares are tracked, increases the stored share amount in `stakerStrategyShares[staker][strategy]`, and adds `strategy`\n to the `staker`'s list of strategies, if it is not in the list already."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addShares",
            "nameLocation": "14325:10:6",
            "parameters": {
              "id": 5813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5804,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "14344:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "14336:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5807,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14359:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "14352:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5805,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "14352:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "14352:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5810,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "14376:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "14366:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5809,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5808,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "14366:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "14366:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5812,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "14394:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "14386:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14386:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14335:66:6"
            },
            "returnParameters": {
              "id": 5814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14411:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5931,
            "nodeType": "FunctionDefinition",
            "src": "15830:811:6",
            "nodes": [],
            "body": {
              "id": 5930,
              "nodeType": "Block",
              "src": "16044:597:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16136:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16136:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5900,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5880,
                            "src": "16156:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          ],
                          "id": 5899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16148:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5898,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16148:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16148:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5902,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5885,
                        "src": "16167:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5893,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5883,
                        "src": "16113:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59918,
                      "src": "16113:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$59726_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$59726_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 5903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16113:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5904,
                  "nodeType": "ExpressionStatement",
                  "src": "16113:61:6"
                },
                {
                  "expression": {
                    "id": 5911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5905,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5891,
                      "src": "16300:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5908,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5883,
                          "src": "16326:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 5909,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5885,
                          "src": "16333:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$59726",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5906,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5880,
                          "src": "16309:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 5907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8048,
                        "src": "16309:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$59726_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,uint256) external returns (uint256)"
                        }
                      },
                      "id": 5910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16309:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16300:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5912,
                  "nodeType": "ExpressionStatement",
                  "src": "16300:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5914,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5877,
                        "src": "16447:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5915,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5883,
                        "src": "16455:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5916,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5880,
                        "src": "16462:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5917,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5891,
                        "src": "16472:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5913,
                      "name": "_addShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5874,
                      "src": "16436:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$59726_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract IStrategy,uint256)"
                      }
                    },
                    "id": 5918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16436:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5919,
                  "nodeType": "ExpressionStatement",
                  "src": "16436:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5923,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5877,
                        "src": "16585:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5924,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5880,
                        "src": "16593:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 5925,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5891,
                        "src": "16603:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5920,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6284,
                        "src": "16550:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 5922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDelegatedShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6877,
                      "src": "16550:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256) external"
                      }
                    },
                    "id": 5926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16550:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5927,
                  "nodeType": "ExpressionStatement",
                  "src": "16550:60:6"
                },
                {
                  "expression": {
                    "id": 5928,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5891,
                    "src": "16628:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5892,
                  "id": 5929,
                  "nodeType": "Return",
                  "src": "16621:13:6"
                }
              ]
            },
            "documentation": {
              "id": 5875,
              "nodeType": "StructuredDocumentation",
              "src": "15271:554:6",
              "text": " @notice Internal function in which `amount` of ERC20 `token` is transferred from `msg.sender` to the Strategy-type contract\n `strategy`, with the resulting shares credited to `staker`.\n @param staker The address that will be credited with the new shares.\n @param strategy The Strategy contract to deposit into.\n @param token The ERC20 token to deposit.\n @param amount The amount of `token` to deposit.\n @return shares The amount of *new* shares in `strategy` that have been credited to the `staker`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5888,
                    "name": "strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5880,
                    "src": "16009:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  }
                ],
                "id": 5889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5887,
                  "name": "onlyStrategiesWhitelistedForDeposit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5325,
                  "src": "15973:35:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "15973:45:6"
              }
            ],
            "name": "_depositIntoStrategy",
            "nameLocation": "15839:20:6",
            "parameters": {
              "id": 5886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5877,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "15877:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5931,
                  "src": "15869:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15869:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5880,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "15903:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5931,
                  "src": "15893:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5879,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5878,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "15893:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "15893:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5883,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15928:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5931,
                  "src": "15921:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$59726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5882,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5881,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59726,
                      "src": "15921:6:6"
                    },
                    "referencedDeclaration": 59726,
                    "src": "15921:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$59726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5885,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15951:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5931,
                  "src": "15943:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15943:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15859:104:6"
            },
            "returnParameters": {
              "id": 5892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5891,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "16036:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5931,
                  "src": "16028:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16028:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16027:16:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5996,
            "nodeType": "FunctionDefinition",
            "src": "17174:1255:6",
            "nodes": [],
            "body": {
              "id": 5995,
              "nodeType": "Block",
              "src": "17308:1121:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5945,
                          "name": "shareAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5939,
                          "src": "17361:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17376:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17361:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f76655368617265733a207368617265416d6f756e742073686f756c64206e6f74206265207a65726f21",
                        "id": 5948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17379:64:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be1081ec55dae903ada20dc8f879f170e8d4fab2f39a48ab92e512958118a5a",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount should not be zero!\""
                        },
                        "value": "StrategyManager._removeShares: shareAmount should not be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be1081ec55dae903ada20dc8f879f170e8d4fab2f39a48ab92e512958118a5a",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount should not be zero!\""
                        }
                      ],
                      "id": 5944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17353:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17353:91:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5950,
                  "nodeType": "ExpressionStatement",
                  "src": "17353:91:6"
                },
                {
                  "assignments": [
                    5952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5952,
                      "mutability": "mutable",
                      "name": "userShares",
                      "nameLocation": "17515:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 5995,
                      "src": "17507:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17507:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5958,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 5953,
                        "name": "stakerStrategyShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6310,
                        "src": "17528:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                        }
                      },
                      "id": 5955,
                      "indexExpression": {
                        "id": 5954,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5934,
                        "src": "17549:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17528:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                        "typeString": "mapping(contract IStrategy => uint256)"
                      }
                    },
                    "id": 5957,
                    "indexExpression": {
                      "id": 5956,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5937,
                      "src": "17557:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17528:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17507:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5960,
                          "name": "shareAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5939,
                          "src": "17585:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5961,
                          "name": "userShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5952,
                          "src": "17600:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17585:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f76655368617265733a207368617265416d6f756e7420746f6f2068696768",
                        "id": 5963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17612:53:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63d4303cc95bda825a5017e04e486f0a31d8e1b0d8608720315fcfb997e1096f",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount too high\""
                        },
                        "value": "StrategyManager._removeShares: shareAmount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63d4303cc95bda825a5017e04e486f0a31d8e1b0d8608720315fcfb997e1096f",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount too high\""
                        }
                      ],
                      "id": 5959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17577:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17577:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5965,
                  "nodeType": "ExpressionStatement",
                  "src": "17577:89:6"
                },
                {
                  "id": 5972,
                  "nodeType": "UncheckedBlock",
                  "src": "17740:72:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 5970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 5966,
                          "name": "userShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5952,
                          "src": "17764:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5967,
                            "name": "userShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5952,
                            "src": "17777:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5968,
                            "name": "shareAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5939,
                            "src": "17790:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17777:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17764:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5971,
                      "nodeType": "ExpressionStatement",
                      "src": "17764:37:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 5979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5973,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6310,
                          "src": "17905:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 5976,
                        "indexExpression": {
                          "id": 5974,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5934,
                          "src": "17926:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17905:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 5977,
                      "indexExpression": {
                        "id": 5975,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5937,
                        "src": "17934:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17905:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5978,
                      "name": "userShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5952,
                      "src": "17946:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17905:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5980,
                  "nodeType": "ExpressionStatement",
                  "src": "17905:51:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5981,
                      "name": "userShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5952,
                      "src": "18071:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18085:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18071:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5992,
                  "nodeType": "IfStatement",
                  "src": "18067:229:6",
                  "trueBody": {
                    "id": 5991,
                    "nodeType": "Block",
                    "src": "18088:208:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5985,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5934,
                              "src": "18140:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5986,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5937,
                              "src": "18148:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "id": 5984,
                            "name": "_removeStrategyFromStakerStrategyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6066,
                            "src": "18102:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$returns$__$",
                              "typeString": "function (address,contract IStrategy)"
                            }
                          },
                          "id": 5987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18102:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5988,
                        "nodeType": "ExpressionStatement",
                        "src": "18102:55:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 5989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18281:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 5943,
                        "id": 5990,
                        "nodeType": "Return",
                        "src": "18274:11:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 5993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18417:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 5943,
                  "id": 5994,
                  "nodeType": "Return",
                  "src": "18410:12:6"
                }
              ]
            },
            "documentation": {
              "id": 5932,
              "nodeType": "StructuredDocumentation",
              "src": "16647:522:6",
              "text": " @notice Decreases the shares that `staker` holds in `strategy` by `shareAmount`.\n @param staker The address to decrement shares from\n @param strategy The strategy for which the `staker`'s shares are being decremented\n @param shareAmount The amount of shares to decrement\n @dev If the amount of shares represents all of the staker`s shares in said strategy,\n then the strategy is removed from stakerStrategyList[staker] and 'true' is returned. Otherwise 'false' is returned."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeShares",
            "nameLocation": "17183:13:6",
            "parameters": {
              "id": 5940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5934,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "17214:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5996,
                  "src": "17206:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17206:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5937,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "17240:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5996,
                  "src": "17230:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 5936,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5935,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "17230:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "17230:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5939,
                  "mutability": "mutable",
                  "name": "shareAmount",
                  "nameLocation": "17266:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 5996,
                  "src": "17258:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17258:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17196:87:6"
            },
            "returnParameters": {
              "id": 5943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5996,
                  "src": "17302:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5941,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17302:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17301:6:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6066,
            "nodeType": "FunctionDefinition",
            "src": "18718:957:6",
            "nodes": [],
            "body": {
              "id": 6065,
              "nodeType": "Block",
              "src": "18832:843:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6006,
                      "mutability": "mutable",
                      "name": "stratsLength",
                      "nameLocation": "18929:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 6065,
                      "src": "18921:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6005,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18921:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6011,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 6007,
                        "name": "stakerStrategyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6317,
                        "src": "18944:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                          "typeString": "mapping(address => contract IStrategy[] storage ref)"
                        }
                      },
                      "id": 6009,
                      "indexExpression": {
                        "id": 6008,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5999,
                        "src": "18963:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18944:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "id": 6010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "18944:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18921:56:6"
                },
                {
                  "assignments": [
                    6013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6013,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "18995:1:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 6065,
                      "src": "18987:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18987:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6015,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 6014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18999:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18987:13:6"
                },
                {
                  "body": {
                    "id": 6050,
                    "nodeType": "Block",
                    "src": "19037:367:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IStrategy_$8135",
                            "typeString": "contract IStrategy"
                          },
                          "id": 6025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6019,
                                "name": "stakerStrategyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6317,
                                "src": "19055:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                }
                              },
                              "id": 6021,
                              "indexExpression": {
                                "id": 6020,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5999,
                                "src": "19074:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19055:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 6023,
                            "indexExpression": {
                              "id": 6022,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6013,
                              "src": "19082:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19055:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 6024,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6002,
                            "src": "19088:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$8135",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "19055:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6045,
                        "nodeType": "IfStatement",
                        "src": "19051:312:6",
                        "trueBody": {
                          "id": 6044,
                          "nodeType": "Block",
                          "src": "19098:265:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 6041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 6026,
                                      "name": "stakerStrategyList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6317,
                                      "src": "19190:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                        "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                      }
                                    },
                                    "id": 6029,
                                    "indexExpression": {
                                      "id": 6027,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5999,
                                      "src": "19209:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19190:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                      "typeString": "contract IStrategy[] storage ref"
                                    }
                                  },
                                  "id": 6030,
                                  "indexExpression": {
                                    "id": 6028,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6013,
                                    "src": "19217:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19190:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 6031,
                                      "name": "stakerStrategyList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6317,
                                      "src": "19222:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                        "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                      }
                                    },
                                    "id": 6033,
                                    "indexExpression": {
                                      "id": 6032,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5999,
                                      "src": "19241:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19222:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                      "typeString": "contract IStrategy[] storage ref"
                                    }
                                  },
                                  "id": 6040,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6034,
                                          "name": "stakerStrategyList",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6317,
                                          "src": "19270:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                          }
                                        },
                                        "id": 6036,
                                        "indexExpression": {
                                          "id": 6035,
                                          "name": "staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5999,
                                          "src": "19289:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19270:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                          "typeString": "contract IStrategy[] storage ref"
                                        }
                                      },
                                      "id": 6037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "19270:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 6038,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19306:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "19270:37:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19222:103:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "19190:135:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$8135",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 6042,
                              "nodeType": "ExpressionStatement",
                              "src": "19190:135:6"
                            },
                            {
                              "id": 6043,
                              "nodeType": "Break",
                              "src": "19343:5:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 6049,
                        "nodeType": "UncheckedBlock",
                        "src": "19376:18:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 6047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "19388:3:6",
                              "subExpression": {
                                "id": 6046,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6013,
                                "src": "19390:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6048,
                            "nodeType": "ExpressionStatement",
                            "src": "19388:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6016,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6013,
                      "src": "19017:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6017,
                      "name": "stratsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6006,
                      "src": "19021:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19017:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6051,
                  "nodeType": "ForStatement",
                  "src": "19010:394:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6053,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6013,
                          "src": "19471:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6054,
                          "name": "stratsLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6006,
                          "src": "19476:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19471:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f7665537472617465677946726f6d5374616b657253747261746567794c6973743a207374726174656779206e6f7420666f756e64",
                        "id": 6056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19490:75:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e2f86725d8cb8d317a350c002495b7b912f6b12104c9f90f18fe4424b84e247",
                          "typeString": "literal_string \"StrategyManager._removeStrategyFromStakerStrategyList: strategy not found\""
                        },
                        "value": "StrategyManager._removeStrategyFromStakerStrategyList: strategy not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e2f86725d8cb8d317a350c002495b7b912f6b12104c9f90f18fe4424b84e247",
                          "typeString": "literal_string \"StrategyManager._removeStrategyFromStakerStrategyList: strategy not found\""
                        }
                      ],
                      "id": 6052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19463:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19463:103:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6058,
                  "nodeType": "ExpressionStatement",
                  "src": "19463:103:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 6059,
                          "name": "stakerStrategyList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6317,
                          "src": "19636:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                          }
                        },
                        "id": 6061,
                        "indexExpression": {
                          "id": 6060,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5999,
                          "src": "19655:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19636:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      "id": 6062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "19636:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr_$",
                        "typeString": "function (contract IStrategy[] storage pointer)"
                      }
                    },
                    "id": 6063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19636:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6064,
                  "nodeType": "ExpressionStatement",
                  "src": "19636:32:6"
                }
              ]
            },
            "documentation": {
              "id": 5997,
              "nodeType": "StructuredDocumentation",
              "src": "18435:278:6",
              "text": " @notice Removes `strategy` from `staker`'s dynamic array of strategies, i.e. from `stakerStrategyList[staker]`\n @param staker The user whose array will have an entry removed\n @param strategy The Strategy to remove from `stakerStrategyList[staker]`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeStrategyFromStakerStrategyList",
            "nameLocation": "18727:37:6",
            "parameters": {
              "id": 6003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5999,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "18782:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6066,
                  "src": "18774:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18774:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6002,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "18808:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6066,
                  "src": "18798:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6000,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "18798:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "18798:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18764:58:6"
            },
            "returnParameters": {
              "id": 6004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18832:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6087,
            "nodeType": "FunctionDefinition",
            "src": "20040:213:6",
            "nodes": [],
            "body": {
              "id": 6086,
              "nodeType": "Block",
              "src": "20123:130:6",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6076,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6070,
                        "src": "20174:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 6077,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6072,
                        "src": "20184:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6075,
                      "name": "UpdatedThirdPartyTransfersForbidden",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8163,
                      "src": "20138:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$8135_$_t_bool_$returns$__$",
                        "typeString": "function (contract IStrategy,bool)"
                      }
                    },
                    "id": 6078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20138:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6079,
                  "nodeType": "EmitStatement",
                  "src": "20133:57:6"
                },
                {
                  "expression": {
                    "id": 6084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6080,
                        "name": "thirdPartyTransfersForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6342,
                        "src": "20200:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_bool_$",
                          "typeString": "mapping(contract IStrategy => bool)"
                        }
                      },
                      "id": 6082,
                      "indexExpression": {
                        "id": 6081,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6070,
                        "src": "20229:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$8135",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20200:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6083,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6072,
                      "src": "20241:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20200:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6085,
                  "nodeType": "ExpressionStatement",
                  "src": "20200:46:6"
                }
              ]
            },
            "documentation": {
              "id": 6067,
              "nodeType": "StructuredDocumentation",
              "src": "19681:354:6",
              "text": " @notice Internal function for modifying `thirdPartyTransfersForbidden`.\n Used inside of the `setThirdPartyTransfersForbidden` and `addStrategiesToDepositWhitelist` functions.\n @param strategy The strategy to set `thirdPartyTransfersForbidden` value to\n @param value bool value to set `thirdPartyTransfersForbidden` to"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setThirdPartyTransfersForbidden",
            "nameLocation": "20049:32:6",
            "parameters": {
              "id": 6073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6070,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "20092:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6087,
                  "src": "20082:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6068,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "20082:9:6"
                    },
                    "referencedDeclaration": 8135,
                    "src": "20082:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6072,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "20107:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6087,
                  "src": "20102:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20102:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20081:32:6"
            },
            "returnParameters": {
              "id": 6074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20123:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6103,
            "nodeType": "FunctionDefinition",
            "src": "20513:221:6",
            "nodes": [],
            "body": {
              "id": 6102,
              "nodeType": "Block",
              "src": "20587:147:6",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6094,
                        "name": "strategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6300,
                        "src": "20629:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6095,
                        "name": "newStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6090,
                        "src": "20650:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6093,
                      "name": "StrategyWhitelisterChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8170,
                      "src": "20602:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20602:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6097,
                  "nodeType": "EmitStatement",
                  "src": "20597:76:6"
                },
                {
                  "expression": {
                    "id": 6100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6098,
                      "name": "strategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6300,
                      "src": "20683:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6099,
                      "name": "newStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6090,
                      "src": "20705:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20683:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6101,
                  "nodeType": "ExpressionStatement",
                  "src": "20683:44:6"
                }
              ]
            },
            "documentation": {
              "id": 6088,
              "nodeType": "StructuredDocumentation",
              "src": "20259:249:6",
              "text": " @notice Internal function for modifying the `strategyWhitelister`. Used inside of the `setStrategyWhitelister` and `initialize` functions.\n @param newStrategyWhitelister The new address for the `strategyWhitelister` to take."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setStrategyWhitelister",
            "nameLocation": "20522:23:6",
            "parameters": {
              "id": 6091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6090,
                  "mutability": "mutable",
                  "name": "newStrategyWhitelister",
                  "nameLocation": "20554:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6103,
                  "src": "20546:30:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20546:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20545:32:6"
            },
            "returnParameters": {
              "id": 6092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20587:0:6"
            },
            "scope": 6256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6168,
            "nodeType": "FunctionDefinition",
            "src": "21009:504:6",
            "nodes": [],
            "body": {
              "id": 6167,
              "nodeType": "Block",
              "src": "21107:406:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6117,
                      "mutability": "mutable",
                      "name": "strategiesLength",
                      "nameLocation": "21125:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 6167,
                      "src": "21117:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21117:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6122,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 6118,
                        "name": "stakerStrategyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6317,
                        "src": "21144:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                          "typeString": "mapping(address => contract IStrategy[] storage ref)"
                        }
                      },
                      "id": 6120,
                      "indexExpression": {
                        "id": 6119,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6106,
                        "src": "21163:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21144:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "id": 6121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "21144:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21117:60:6"
                },
                {
                  "assignments": [
                    6127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6127,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "21204:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 6167,
                      "src": "21187:23:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21187:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6126,
                        "nodeType": "ArrayTypeName",
                        "src": "21187:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6131,
                        "name": "strategiesLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6117,
                        "src": "21227:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21213:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6128,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21217:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6129,
                        "nodeType": "ArrayTypeName",
                        "src": "21217:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 6132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21213:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21187:57:6"
                },
                {
                  "body": {
                    "id": 6159,
                    "nodeType": "Block",
                    "src": "21299:155:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 6153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6141,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6127,
                              "src": "21313:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 6143,
                            "indexExpression": {
                              "id": 6142,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6135,
                              "src": "21320:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21313:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6144,
                                "name": "stakerStrategyShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6310,
                                "src": "21325:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                                }
                              },
                              "id": 6146,
                              "indexExpression": {
                                "id": 6145,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6106,
                                "src": "21346:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21325:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$8135_$_t_uint256_$",
                                "typeString": "mapping(contract IStrategy => uint256)"
                              }
                            },
                            "id": 6152,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 6147,
                                  "name": "stakerStrategyList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6317,
                                  "src": "21354:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                                    "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                  }
                                },
                                "id": 6149,
                                "indexExpression": {
                                  "id": 6148,
                                  "name": "staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6106,
                                  "src": "21373:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21354:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                                  "typeString": "contract IStrategy[] storage ref"
                                }
                              },
                              "id": 6151,
                              "indexExpression": {
                                "id": 6150,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6135,
                                "src": "21381:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21354:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$8135",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21325:59:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21313:71:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6154,
                        "nodeType": "ExpressionStatement",
                        "src": "21313:71:6"
                      },
                      {
                        "id": 6158,
                        "nodeType": "UncheckedBlock",
                        "src": "21398:46:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 6156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "21426:3:6",
                              "subExpression": {
                                "id": 6155,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6135,
                                "src": "21428:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6157,
                            "nodeType": "ExpressionStatement",
                            "src": "21426:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6138,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6135,
                      "src": "21275:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6139,
                      "name": "strategiesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6117,
                      "src": "21279:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21275:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6160,
                  "initializationExpression": {
                    "assignments": [
                      6135
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6135,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "21268:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 6160,
                        "src": "21260:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21260:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6137,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21272:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21260:13:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "21255:199:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 6161,
                          "name": "stakerStrategyList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6317,
                          "src": "21471:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                          }
                        },
                        "id": 6163,
                        "indexExpression": {
                          "id": 6162,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6106,
                          "src": "21490:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21471:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      {
                        "id": 6164,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6127,
                        "src": "21499:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 6165,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21470:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] storage ref,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 6115,
                  "id": 6166,
                  "nodeType": "Return",
                  "src": "21463:43:6"
                }
              ]
            },
            "baseFunctions": [
              8279
            ],
            "documentation": {
              "id": 6104,
              "nodeType": "StructuredDocumentation",
              "src": "20762:242:6",
              "text": " @notice Get all details on the staker's deposits and corresponding shares\n @param staker The staker of interest, whose deposits this function will fetch\n @return (staker's strategies, shares in these strategies)"
            },
            "functionSelector": "94f649dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposits",
            "nameLocation": "21018:11:6",
            "parameters": {
              "id": 6107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6106,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "21038:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6168,
                  "src": "21030:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21030:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21029:16:6"
            },
            "returnParameters": {
              "id": 6115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6168,
                  "src": "21069:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6109,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6108,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "21069:9:6"
                      },
                      "referencedDeclaration": 8135,
                      "src": "21069:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 6110,
                    "nodeType": "ArrayTypeName",
                    "src": "21069:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6168,
                  "src": "21089:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6112,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21089:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6113,
                    "nodeType": "ArrayTypeName",
                    "src": "21089:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21068:38:6"
            },
            "scope": 6256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6182,
            "nodeType": "FunctionDefinition",
            "src": "21608:139:6",
            "nodes": [],
            "body": {
              "id": 6181,
              "nodeType": "Block",
              "src": "21690:57:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 6176,
                        "name": "stakerStrategyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6317,
                        "src": "21707:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$8135_$dyn_storage_$",
                          "typeString": "mapping(address => contract IStrategy[] storage ref)"
                        }
                      },
                      "id": 6178,
                      "indexExpression": {
                        "id": 6177,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6171,
                        "src": "21726:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21707:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "id": 6179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "21707:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6175,
                  "id": 6180,
                  "nodeType": "Return",
                  "src": "21700:40:6"
                }
              ]
            },
            "baseFunctions": [
              8287
            ],
            "documentation": {
              "id": 6169,
              "nodeType": "StructuredDocumentation",
              "src": "21519:84:6",
              "text": "@notice Simple getter function that returns `stakerStrategyList[staker].length`."
            },
            "functionSelector": "8b8aac3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakerStrategyListLength",
            "nameLocation": "21617:24:6",
            "parameters": {
              "id": 6172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6171,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "21650:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6182,
                  "src": "21642:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21642:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21641:16:6"
            },
            "returnParameters": {
              "id": 6175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6182,
                  "src": "21681:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21681:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21680:9:6"
            },
            "scope": 6256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6201,
            "nodeType": "FunctionDefinition",
            "src": "21954:227:6",
            "nodes": [],
            "body": {
              "id": 6200,
              "nodeType": "Block",
              "src": "22011:170:6",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6188,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "22025:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "22025:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 6190,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5299,
                      "src": "22042:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22025:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6198,
                    "nodeType": "Block",
                    "src": "22116:59:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6195,
                            "name": "_calculateDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6226,
                            "src": "22137:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 6196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22137:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 6187,
                        "id": 6197,
                        "nodeType": "Return",
                        "src": "22130:34:6"
                      }
                    ]
                  },
                  "id": 6199,
                  "nodeType": "IfStatement",
                  "src": "22021:154:6",
                  "trueBody": {
                    "id": 6194,
                    "nodeType": "Block",
                    "src": "22061:49:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 6192,
                          "name": "_DOMAIN_SEPARATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6293,
                          "src": "22082:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 6187,
                        "id": 6193,
                        "nodeType": "Return",
                        "src": "22075:24:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6183,
              "nodeType": "StructuredDocumentation",
              "src": "21753:196:6",
              "text": " @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID."
            },
            "functionSelector": "f698da25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "domainSeparator",
            "nameLocation": "21963:15:6",
            "parameters": {
              "id": 6184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21978:2:6"
            },
            "returnParameters": {
              "id": 6187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6201,
                  "src": "22002:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6185,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22002:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22001:9:6"
            },
            "scope": 6256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6226,
            "nodeType": "FunctionDefinition",
            "src": "22282:193:6",
            "nodes": [],
            "body": {
              "id": 6225,
              "nodeType": "Block",
              "src": "22351:124:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6209,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6272,
                            "src": "22389:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "456967656e4c61796572",
                                    "id": 6213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22422:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                      "typeString": "literal_string \"EigenLayer\""
                                    },
                                    "value": "EigenLayer"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                      "typeString": "literal_string \"EigenLayer\""
                                    }
                                  ],
                                  "id": 6212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22416:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 6211,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22416:5:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22416:19:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 6210,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "22406:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 6215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22406:30:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 6216,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "22438:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "22438:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 6220,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "22461:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StrategyManager_$6256",
                                  "typeString": "contract StrategyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StrategyManager_$6256",
                                  "typeString": "contract StrategyManager"
                                }
                              ],
                              "id": 6219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22453:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6218,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22453:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22453:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6207,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22378:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "22378:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22378:89:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6206,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "22368:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22368:100:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6205,
                  "id": 6224,
                  "nodeType": "Return",
                  "src": "22361:107:6"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateDomainSeparator",
            "nameLocation": "22291:25:6",
            "parameters": {
              "id": 6202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22316:2:6"
            },
            "returnParameters": {
              "id": 6205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6226,
                  "src": "22342:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6203,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22342:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22341:9:6"
            },
            "scope": 6256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6255,
            "nodeType": "FunctionDefinition",
            "src": "22611:549:6",
            "nodes": [],
            "body": {
              "id": 6254,
              "nodeType": "Block",
              "src": "22733:427:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 6238,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "22823:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6239,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "strategies",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8351,
                                "src": "22823:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6240,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "22872:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6241,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8354,
                                "src": "22872:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6242,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "22917:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6243,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "staker",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8356,
                                "src": "22917:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6244,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "22962:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6245,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawerAndNonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8359,
                                "src": "22962:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DeprecatedStruct_WithdrawerAndNonce_$8347_memory_ptr",
                                  "typeString": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6246,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "23019:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6247,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalStartBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8361,
                                "src": "23019:37:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6248,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6230,
                                  "src": "23078:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal memory"
                                  }
                                },
                                "id": 6249,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "delegatedAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8363,
                                "src": "23078:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_DeprecatedStruct_WithdrawerAndNonce_$8347_memory_ptr",
                                  "typeString": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce memory"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 6236,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "22791:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 6237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "22791:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 6250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22791:338:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 6235,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "22764:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22764:379:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 6252,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22750:403:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6234,
                  "id": 6253,
                  "nodeType": "Return",
                  "src": "22743:410:6"
                }
              ]
            },
            "baseFunctions": [
              8382
            ],
            "documentation": {
              "id": 6227,
              "nodeType": "StructuredDocumentation",
              "src": "22545:61:6",
              "text": "@notice Returns the keccak256 hash of `queuedWithdrawal`."
            },
            "functionSelector": "b43b514b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawalRoot",
            "nameLocation": "22620:23:6",
            "parameters": {
              "id": 6231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6230,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "22685:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6255,
                  "src": "22644:57:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 6229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6228,
                      "name": "DeprecatedStruct_QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8364,
                      "src": "22644:33:6"
                    },
                    "referencedDeclaration": 8364,
                    "src": "22644:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22643:59:6"
            },
            "returnParameters": {
              "id": 6234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6255,
                  "src": "22724:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22724:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22723:9:6"
            },
            "scope": 6256,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5281,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57298,
              "src": "1001:13:6"
            },
            "id": 5282,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:13:6"
          },
          {
            "baseName": {
              "id": 5283,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57147,
              "src": "1020:18:6"
            },
            "id": 5284,
            "nodeType": "InheritanceSpecifier",
            "src": "1020:18:6"
          },
          {
            "baseName": {
              "id": 5285,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57357,
              "src": "1044:26:6"
            },
            "id": 5286,
            "nodeType": "InheritanceSpecifier",
            "src": "1044:26:6"
          },
          {
            "baseName": {
              "id": 5287,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "1076:8:6"
            },
            "id": 5288,
            "nodeType": "InheritanceSpecifier",
            "src": "1076:8:6"
          },
          {
            "baseName": {
              "id": 5289,
              "name": "StrategyManagerStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6373,
              "src": "1090:22:6"
            },
            "id": 5290,
            "nodeType": "InheritanceSpecifier",
            "src": "1090:22:6"
          }
        ],
        "canonicalName": "StrategyManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5280,
          "nodeType": "StructuredDocumentation",
          "src": "530:438:6",
          "text": " @title The primary entry- and exit-point for funds into and out of EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice This contract is for managing deposits in different strategies. The main\n functionalities are:\n - adding and removing strategies that any delegator can deposit into\n - enabling deposit of assets into specified strategy(s)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6256,
          6373,
          8383,
          10782,
          7748,
          57357,
          57147,
          57642,
          57298
        ],
        "name": "StrategyManager",
        "nameLocation": "978:15:6",
        "scope": 6257,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 6
}