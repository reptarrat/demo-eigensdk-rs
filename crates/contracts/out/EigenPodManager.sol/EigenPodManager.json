{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IETHPOSDeposit",
          "name": "_ethPOS",
          "type": "address"
        },
        {
          "internalType": "contract IBeacon",
          "name": "_eigenPodBeacon",
          "type": "address"
        },
        {
          "internalType": "contract IStrategyManager",
          "name": "_strategyManager",
          "type": "address"
        },
        {
          "internalType": "contract ISlasher",
          "name": "_slasher",
          "type": "address"
        },
        {
          "internalType": "contract IDelegationManager",
          "name": "_delegationManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BeaconChainETHDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delegatedAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "BeaconChainETHWithdrawalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "BeaconOracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newValue",
          "type": "uint64"
        }
      ],
      "name": "DenebForkTimestampUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MaxPodsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "eigenPod",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "PodDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "sharesDelta",
          "type": "int256"
        }
      ],
      "name": "PodSharesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "addShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainETHStrategy",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainOracle",
      "outputs": [
        {
          "internalType": "contract IBeaconChainOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createPod",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegationManager",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denebForkTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodBeacon",
      "outputs": [
        {
          "internalType": "contract IBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPOS",
      "outputs": [
        {
          "internalType": "contract IETHPOSDeposit",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "getBlockRootAtTimestamp",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "getPod",
      "outputs": [
        {
          "internalType": "contract IEigenPod",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "hasPod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPods",
          "type": "uint256"
        },
        {
          "internalType": "contract IBeaconChainOracle",
          "name": "_beaconChainOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToPod",
      "outputs": [
        {
          "internalType": "contract IEigenPod",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "podOwnerShares",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "sharesDelta",
          "type": "int256"
        }
      ],
      "name": "recordBeaconChainETHBalanceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "removeShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newDenebForkTimestamp",
          "type": "uint64"
        }
      ],
      "name": "setDenebForkTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxPods",
          "type": "uint256"
        }
      ],
      "name": "setMaxPods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "depositDataRoot",
          "type": "bytes32"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyManager",
      "outputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBeaconChainOracle",
          "name": "newBeaconChainOracle",
          "type": "address"
        }
      ],
      "name": "updateBeaconChainOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdrawSharesAsTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b50604051620036c6380380620036c683398101604081905262000035916200014b565b6001600160a01b0380861660805280851660a05280841660c05280831660e0528116610100526200006562000070565b5050505050620001cb565b600054610100900460ff1615620000dd5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000130576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200014857600080fd5b50565b600080600080600060a086880312156200016457600080fd5b8551620001718162000132565b6020870151909550620001848162000132565b6040870151909450620001978162000132565b6060870151909350620001aa8162000132565b6080870151909250620001bd8162000132565b809150509295509295909350565b60805160a05160c05160e051610100516134856200024160003960008181610682015281816107e801528181610c0a015281816114e3015281816119780152611a68015260006105780152600061031c0152600081816102b00152818161146201526121f70152600061044a01526134856000f3fe6080604052600436106102045760003560e01c80638da5cb5b11610118578063c0ccbf10116100a0578063daf12cd41161006f578063daf12cd414610650578063ea4d3c9b14610670578063f2fde38b146106a4578063f6848d24146106c4578063fabc1cbc146106ff57600080fd5b8063c0ccbf10146105da578063c1de3aef146105f0578063c2c51c4014610610578063d1c64cc91461063057600080fd5b8063a38406a3116100e7578063a38406a314610530578063a6a509be14610550578063b134427114610566578063beffbb891461059a578063c052bd61146105ba57600080fd5b80638da5cb5b146104a15780639104c319146104bf5780639b4e4634146104e75780639ba06275146104fa57600080fd5b8063463db0381161019b57806360f4062b1161016a57806360f4062b146103f6578063715018a61461042357806374cdd7981461043857806384d810621461046c578063886f11951461048157600080fd5b8063463db0381461036c578063595c6a671461038c5780635ac86ab7146103a15780635c975abb146103e157600080fd5b8063292b7b2b116101d7578063292b7b2b1461029e578063387b1300146102ea57806339b70e381461030a57806344e71c801461033e57600080fd5b80630cf2686d146102095780630e81073c1461022b57806310d67a2f1461025e578063136439dd1461027e575b600080fd5b34801561021557600080fd5b506102296102243660046125ae565b61071f565b005b34801561023757600080fd5b5061024b6102463660046125dc565b6107db565b6040519081526020015b60405180910390f35b34801561026a57600080fd5b50610229610279366004612608565b610a10565b34801561028a57600080fd5b506102296102993660046125ae565b610ac0565b3480156102aa57600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610255565b3480156102f657600080fd5b50610229610305366004612625565b610bff565b34801561031657600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b50610353610f9d565b60405167ffffffffffffffff9091168152602001610255565b34801561037857600080fd5b50610229610387366004612666565b610fc6565b34801561039857600080fd5b50610229611152565b3480156103ad57600080fd5b506103d16103bc366004612690565b606654600160ff9092169190911b9081161490565b6040519015158152602001610255565b3480156103ed57600080fd5b5060665461024b565b34801561040257600080fd5b5061024b610411366004612608565b609b6020526000908152604090205481565b34801561042f57600080fd5b50610229611219565b34801561044457600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561047857600080fd5b506102d261122d565b34801561048d57600080fd5b506065546102d2906001600160a01b031681565b3480156104ad57600080fd5b506033546001600160a01b03166102d2565b3480156104cb57600080fd5b506102d273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6102296104f53660046126fc565b611317565b34801561050657600080fd5b506102d2610515366004612608565b6098602052600090815260409020546001600160a01b031681565b34801561053c57600080fd5b506102d261054b366004612608565b611406565b34801561055c57600080fd5b5061024b60995481565b34801561057257600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105a657600080fd5b506102296105b53660046125dc565b6114d8565b3480156105c657600080fd5b506097546102d2906001600160a01b031681565b3480156105e657600080fd5b5061024b609a5481565b3480156105fc57600080fd5b5061022961060b366004612608565b6116ef565b34801561061c57600080fd5b5061022961062b3660046125dc565b611700565b34801561063c57600080fd5b5061024b61064b366004612666565b611b03565b34801561065c57600080fd5b5061022961066b366004612770565b611c0e565b34801561067c57600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156106b057600080fd5b506102296106bf366004612608565b611d41565b3480156106d057600080fd5b506103d16106df366004612608565b6001600160a01b0390811660009081526098602052604090205416151590565b34801561070b57600080fd5b5061022961071a3660046125ae565b611db7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079691906127cb565b6001600160a01b0316336001600160a01b0316146107cf5760405162461bcd60e51b81526004016107c6906127e8565b60405180910390fd5b6107d881611f13565b50565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108255760405162461bcd60e51b81526004016107c690612832565b6001600160a01b0383166108a15760405162461bcd60e51b815260206004820152603a60248201527f456967656e506f644d616e616765722e6164645368617265733a20706f644f7760448201527f6e65722063616e6e6f74206265207a65726f206164647265737300000000000060648201526084016107c6565b600082121561090f5760405162461bcd60e51b815260206004820152603460248201527f456967656e506f644d616e616765722e6164645368617265733a207368617265604482015273732063616e6e6f74206265206e6567617469766560601b60648201526084016107c6565b61091d633b9aca00836128a6565b156109905760405162461bcd60e51b815260206004820152603d60248201527f456967656e506f644d616e616765722e6164645368617265733a20736861726560448201527f73206d75737420626520612077686f6c65204777656920616d6f756e7400000060648201526084016107c6565b6001600160a01b0383166000908152609b6020526040812054906109b484836128d0565b6001600160a01b0386166000818152609b6020526040908190208390555191925090600080516020613410833981519152906109f39087815260200190565b60405180910390a2610a058282611f54565b925050505b92915050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8791906127cb565b6001600160a01b0316336001600160a01b031614610ab75760405162461bcd60e51b81526004016107c6906127e8565b6107d881611f96565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190612911565b610b485760405162461bcd60e51b81526004016107c690612933565b60665481811614610bc15760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016107c6565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c475760405162461bcd60e51b81526004016107c690612832565b6001600160a01b038316610cc15760405162461bcd60e51b8152602060048201526047602482015260008051602061343083398151915260448201527f546f6b656e733a20706f644f776e65722063616e6e6f74206265207a65726f206064820152666164647265737360c81b608482015260a4016107c6565b6001600160a01b038216610d3e5760405162461bcd60e51b815260206004820152604a602482015260008051602061343083398151915260448201527f546f6b656e733a2064657374696e6174696f6e2063616e6e6f74206265207a65606482015269726f206164647265737360b01b608482015260a4016107c6565b6000811215610dad5760405162461bcd60e51b8152602060048201526041602482015260008051602061343083398151915260448201527f546f6b656e733a207368617265732063616e6e6f74206265206e6567617469766064820152606560f81b608482015260a4016107c6565b610dbb633b9aca00826128a6565b15610e2f5760405162461bcd60e51b815260206004820152604a602482015260008051602061343083398151915260448201527f546f6b656e733a20736861726573206d75737420626520612077686f6c6520476064820152691dd95a48185b5bdd5b9d60b21b608482015260a4016107c6565b6001600160a01b0383166000908152609b602052604081205490811215610f22576000610e5b8261297b565b905080831115610ec0576001600160a01b0385166000908152609b6020526040812055610e888184612998565b9250846001600160a01b031660008051602061341083398151915282604051610eb391815260200190565b60405180910390a2610f20565b6001600160a01b0385166000908152609b602052604081208054859290610ee89084906128d0565b90915550506040518381526001600160a01b038616906000805160206134108339815191529060200160405180910390a25050505050565b505b6001600160a01b03848116600090815260986020526040908190205490516362483a2160e11b815285831660048201526024810185905291169063c490744290604401600060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b5050505050505050565b609c5460009067ffffffffffffffff1680610fc15767ffffffffffffffff91505090565b919050565b610fce61208d565b67ffffffffffffffff81166110605760405162461bcd60e51b815260206004820152604c60248201527f456967656e506f644d616e616765722e73657444656e6562466f726b54696d6560448201527f7374616d703a2063616e6e6f7420736574206e657744656e6562466f726b546960648201526b06d657374616d7020746f20360a41b608482015260a4016107c6565b609c5467ffffffffffffffff16156110fc5760405162461bcd60e51b815260206004820152605360248201527f456967656e506f644d616e616765722e73657444656e6562466f726b54696d6560448201527f7374616d703a2063616e6e6f74207365742064656e6562466f726b54696d657360648201527274616d70206d6f7265207468616e206f6e636560681b608482015260a4016107c6565b609c805467ffffffffffffffff191667ffffffffffffffff83169081179091556040519081527f19200b6fdad58f91b2f496b0c444fc4be3eff74a7e24b07770e04a7137bfd9db9060200160405180910390a150565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be9190612911565b6111da5760405162461bcd60e51b81526004016107c690612933565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b61122161208d565b61122b60006120e7565b565b6066546000908190600190811614156112845760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016107c6565b336000908152609860205260409020546001600160a01b0316156113065760405162461bcd60e51b815260206004820152603360248201527f456967656e506f644d616e616765722e637265617465506f643a2053656e64656044820152721c88185b1c9958591e481a185cc818481c1bd9606a1b60648201526084016107c6565b6000611310612139565b9250505090565b6066546000906001908116141561136c5760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016107c6565b336000908152609860205260409020546001600160a01b03168061139557611392612139565b90505b6040516326d3918d60e21b81526001600160a01b03821690639b4e46349034906113cb908b908b908b908b908b906004016129d8565b6000604051808303818588803b1580156113e457600080fd5b505af11580156113f8573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b0380821660009081526098602052604081205490911680610a0a576114d1836001600160a01b031660001b60405180610940016040528061090e8152602001612b0261090e9139604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152808201919091526000606082015260800160408051601f19818403018152908290526114b69291602001612a4d565b60405160208183030381529060405280519060200120612314565b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115205760405162461bcd60e51b81526004016107c690612832565b60008112156115975760405162461bcd60e51b815260206004820152603760248201527f456967656e506f644d616e616765722e72656d6f76655368617265733a20736860448201527f617265732063616e6e6f74206265206e6567617469766500000000000000000060648201526084016107c6565b6115a5633b9aca00826128a6565b1561161a576040805162461bcd60e51b81526020600482015260248101919091527f456967656e506f644d616e616765722e72656d6f76655368617265733a20736860448201527f61726573206d75737420626520612077686f6c65204777656920616d6f756e7460648201526084016107c6565b6001600160a01b0382166000908152609b602052604081205461163e908390612a62565b905060008112156116cf5760405162461bcd60e51b815260206004820152604f60248201527f456967656e506f644d616e616765722e72656d6f76655368617265733a20636160448201527f6e6e6f7420726573756c7420696e20706f64206f776e657220686176696e672060648201526e6e656761746976652073686172657360881b608482015260a4016107c6565b6001600160a01b039092166000908152609b602052604090209190915550565b6116f761208d565b6107d881612370565b6001600160a01b03808316600090815260986020526040902054839116331461177b5760405162461bcd60e51b815260206004820152602760248201527f456967656e506f644d616e616765722e6f6e6c79456967656e506f643a206e6f6044820152661d0818481c1bd960ca1b60648201526084016107c6565b600260c95414156117ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107c6565b600260c9556001600160a01b03831661186a5760405162461bcd60e51b815260206004820152605260248201527f456967656e506f644d616e616765722e7265636f7264426561636f6e4368616960448201527f6e45544842616c616e63655570646174653a20706f644f776e65722063616e6e6064820152716f74206265207a65726f206164647265737360701b608482015260a4016107c6565b611878633b9aca0083612aa1565b156119115760405162461bcd60e51b815260206004820152605a60248201527f456967656e506f644d616e616765722e7265636f7264426561636f6e4368616960448201527f6e45544842616c616e63655570646174653a2073686172657344656c7461206d60648201527f75737420626520612077686f6c65204777656920616d6f756e74000000000000608482015260a4016107c6565b6001600160a01b0383166000908152609b60205260408120549061193584836128d0565b6001600160a01b0386166000908152609b6020526040812082905590915061195d8383611f54565b90508015611ac5576000811215611a28576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663132d49678773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06119bc8561297b565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611a0b57600080fd5b505af1158015611a1f573d6000803e3d6000fd5b50505050611ac5565b604051631452b9d760e11b81526001600160a01b03878116600483015273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906328a573ae90606401600060405180830381600087803b158015611aac57600080fd5b505af1158015611ac0573d6000803e3d6000fd5b505050505b856001600160a01b031660008051602061341083398151915286604051611aee91815260200190565b60405180910390a25050600160c95550505050565b60975460405163321accf960e11b815267ffffffffffffffff8316600482015260009182916001600160a01b039091169063643599f290602401602060405180830381865afa158015611b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7e9190612ab5565b905080610a0a5760405162461bcd60e51b815260206004820152605260248201527f456967656e506f644d616e616765722e676574426c6f636b526f6f744174546960448201527f6d657374616d703a20737461746520726f6f742061742074696d657374616d70606482015271081b9bdd081e595d08199a5b985b1a5e995960721b608482015260a4016107c6565b600054610100900460ff1615808015611c2e5750600054600160ff909116105b80611c485750303b158015611c48575060005460ff166001145b611cab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107c6565b6000805460ff191660011790558015611cce576000805461ff0019166101001790555b611cd786611f13565b611ce085612370565b611ce9846120e7565b611cf383836123ba565b8015611d39576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b611d4961208d565b6001600160a01b038116611dae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107c6565b6107d8816120e7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2e91906127cb565b6001600160a01b0316336001600160a01b031614611e5e5760405162461bcd60e51b81526004016107c6906127e8565b606654198119606654191614611edc5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016107c6565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610bf4565b609a5460408051918252602082018390527f4e65c41a3597bda732ca64980235cf51494171d5853998763fb05db45afaacb3910160405180910390a1609a55565b6000808313611f745760008213611f6d57506000610a0a565b5080610a0a565b60008213611f8c57611f858361297b565b9050610a0a565b611f858383612a62565b6001600160a01b0381166120245760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016107c6565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461122b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107c6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000609a54609954600161214d9190612ace565b11156121b15760405162461bcd60e51b815260206004820152602d60248201527f456967656e506f644d616e616765722e5f6465706c6f79506f643a20706f642060448201526c1b1a5b5a5d081c995858da1959609a1b60648201526084016107c6565b6099600081546121c090612ae6565b9091555060408051610940810190915261090e80825260009161225f9183913391612b026020830139604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152808201919091526000606082015260800160408051601f198184030181529082905261224b9291602001612a4d565b6040516020818303038152906040526124a4565b60405163189acdbd60e31b81523360048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156122a357600080fd5b505af11580156122b7573d6000803e3d6000fd5b50503360008181526098602052604080822080546001600160a01b0319166001600160a01b038816908117909155905192945092507f21c99d0db02213c32fff5b05cf0a718ab5f858802b91498f80d82270289d856a91a3919050565b604080516001600160f81b03196020808301919091526bffffffffffffffffffffffff193060601b16602183015260358201859052605580830185905283518084039091018152607590920190925280519101206000906114d1565b609780546001600160a01b0319166001600160a01b0383169081179091556040517f08f0470754946ccfbb446ff7fd2d6ae6af1bbdae19f85794c0cc5ed5e8ceb4f690600090a250565b6065546001600160a01b03161580156123db57506001600160a01b03821615155b61245d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016107c6565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a26124a082611f96565b5050565b600080844710156124f75760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016107c6565b82516125455760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016107c6565b8383516020850187f590506001600160a01b0381166125a65760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016107c6565b949350505050565b6000602082840312156125c057600080fd5b5035919050565b6001600160a01b03811681146107d857600080fd5b600080604083850312156125ef57600080fd5b82356125fa816125c7565b946020939093013593505050565b60006020828403121561261a57600080fd5b81356114d1816125c7565b60008060006060848603121561263a57600080fd5b8335612645816125c7565b92506020840135612655816125c7565b929592945050506040919091013590565b60006020828403121561267857600080fd5b813567ffffffffffffffff811681146114d157600080fd5b6000602082840312156126a257600080fd5b813560ff811681146114d157600080fd5b60008083601f8401126126c557600080fd5b50813567ffffffffffffffff8111156126dd57600080fd5b6020830191508360208285010111156126f557600080fd5b9250929050565b60008060008060006060868803121561271457600080fd5b853567ffffffffffffffff8082111561272c57600080fd5b61273889838a016126b3565b9097509550602088013591508082111561275157600080fd5b5061275e888289016126b3565b96999598509660400135949350505050565b600080600080600060a0868803121561278857600080fd5b85359450602086013561279a816125c7565b935060408601356127aa816125c7565b925060608601356127ba816125c7565b949793965091946080013592915050565b6000602082840312156127dd57600080fd5b81516114d1816125c7565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b602080825260409082018190527f456967656e506f644d616e616765722e6f6e6c7944656c65676174696f6e4d61908201527f6e616765723a206e6f74207468652044656c65676174696f6e4d616e61676572606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826128b5576128b5612890565b500690565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b03849003851316156128f2576128f26128ba565b600160ff1b839003841281161561290b5761290b6128ba565b50500190565b60006020828403121561292357600080fd5b815180151581146114d157600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000600160ff1b821415612991576129916128ba565b5060000390565b6000828210156129aa576129aa6128ba565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006129ec6060830187896129af565b82810360208401526129ff8186886129af565b9150508260408301529695505050505050565b6000815160005b81811015612a335760208185018101518683015201612a19565b81811115612a42576000828601525b509290920192915050565b60006125a6612a5c8386612a12565b84612a12565b60008083128015600160ff1b850184121615612a8057612a806128ba565b6001600160ff1b0384018313811615612a9b57612a9b6128ba565b50500390565b600082612ab057612ab0612890565b500790565b600060208284031215612ac757600080fd5b5051919050565b60008219821115612ae157612ae16128ba565b500190565b6000600019821415612afa57612afa6128ba565b506001019056fe608060405260405161090e38038061090e83398101604081905261002291610460565b61002e82826000610035565b505061058a565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610520565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610520565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108e7602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053b565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c65782516103bf576001600160a01b0385163b6103bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d0565b6103d083836103d8565b949350505050565b8151156103e85781518083602001fd5b8060405162461bcd60e51b81526004016101699190610557565b80516001600160a01b038116811461041957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561044f578181015183820152602001610437565b838111156100f95750506000910152565b6000806040838503121561047357600080fd5b61047c83610402565b60208401519092506001600160401b038082111561049957600080fd5b818501915085601f8301126104ad57600080fd5b8151818111156104bf576104bf61041e565b604051601f8201601f19908116603f011681019083821181831017156104e7576104e761041e565b8160405282815288602084870101111561050057600080fd5b610511836020830160208801610434565b80955050505050509250929050565b60006020828403121561053257600080fd5b6102c882610402565b6000825161054d818460208701610434565b9190910192915050565b6020815260008251806020840152610576816040850160208701610434565b601f01601f19169190910160400192915050565b61034e806105996000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f260279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610249565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a2565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b6060831561020d578251610206576001600160a01b0385163b6102065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610217565b610217838361021f565b949350505050565b81511561022f5781518083602001fd5b8060405162461bcd60e51b81526004016101fd91906102be565b60006020828403121561025b57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028d578181015183820152602001610275565b8381111561029c576000848401525b50505050565b600082516102b4818460208701610272565b9190910192915050565b60208152600082518060208401526102dd816040850160208701610272565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d51e81d3bc5ed20a26aeb05dce7e825c503b2061aa78628027300c8d65b9d89a64736f6c634300080c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65644e2b791dedccd9fb30141b088cabf5c14a8912b52f59375c95c010700b8c6193456967656e506f644d616e616765722e77697468647261775368617265734173a2646970667358221220494d597fc832e8d8f0a7bddc1ce2f409c01847617e705ffdf24e6aae312b9db164736f6c634300080c0033",
    "sourceMap": "923:15656:31:-:0;;;1495:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7957:16:32;;;;;7983:32;;;;;8025:34;;;;;8069:18;;;;;8097:38;;;;1802:22:31::1;:20;:22::i;:::-;1495:336:::0;;;;;923:15656;;5388:279:60;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:60;;1351:2:156;5447:66:60;;;1333:21:156;1390:2;1370:18;;;1363:30;1429:34;1409:18;;;1402:62;-1:-1:-1;;;1480:18:156;;;1473:37;1527:19;;5447:66:60;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:60;5588:15;5573:30;;;;;;5622:28;;1699:36:156;;;5622:28:60;;1687:2:156;1672:18;5622:28:60;;;;;;;5523:138;5388:279::o;14:147:156:-;-1:-1:-1;;;;;105:31:156;;95:42;;85:70;;151:1;148;141:12;85:70;14:147;:::o;166:978::-;381:6;389;397;405;413;466:3;454:9;445:7;441:23;437:33;434:53;;;483:1;480;473:12;434:53;515:9;509:16;534:47;575:5;534:47;:::i;:::-;650:2;635:18;;629:25;600:5;;-1:-1:-1;663:49:156;629:25;663:49;:::i;:::-;783:2;768:18;;762:25;731:7;;-1:-1:-1;796:49:156;762:25;796:49;:::i;:::-;916:2;901:18;;895:25;864:7;;-1:-1:-1;929:49:156;895:25;929:49;:::i;:::-;1049:3;1034:19;;1028:26;997:7;;-1:-1:-1;1063:49:156;1028:26;1063:49;:::i;:::-;1131:7;1121:17;;;166:978;;;;;;;;:::o;1557:184::-;923:15656:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102045760003560e01c80638da5cb5b11610118578063c0ccbf10116100a0578063daf12cd41161006f578063daf12cd414610650578063ea4d3c9b14610670578063f2fde38b146106a4578063f6848d24146106c4578063fabc1cbc146106ff57600080fd5b8063c0ccbf10146105da578063c1de3aef146105f0578063c2c51c4014610610578063d1c64cc91461063057600080fd5b8063a38406a3116100e7578063a38406a314610530578063a6a509be14610550578063b134427114610566578063beffbb891461059a578063c052bd61146105ba57600080fd5b80638da5cb5b146104a15780639104c319146104bf5780639b4e4634146104e75780639ba06275146104fa57600080fd5b8063463db0381161019b57806360f4062b1161016a57806360f4062b146103f6578063715018a61461042357806374cdd7981461043857806384d810621461046c578063886f11951461048157600080fd5b8063463db0381461036c578063595c6a671461038c5780635ac86ab7146103a15780635c975abb146103e157600080fd5b8063292b7b2b116101d7578063292b7b2b1461029e578063387b1300146102ea57806339b70e381461030a57806344e71c801461033e57600080fd5b80630cf2686d146102095780630e81073c1461022b57806310d67a2f1461025e578063136439dd1461027e575b600080fd5b34801561021557600080fd5b506102296102243660046125ae565b61071f565b005b34801561023757600080fd5b5061024b6102463660046125dc565b6107db565b6040519081526020015b60405180910390f35b34801561026a57600080fd5b50610229610279366004612608565b610a10565b34801561028a57600080fd5b506102296102993660046125ae565b610ac0565b3480156102aa57600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610255565b3480156102f657600080fd5b50610229610305366004612625565b610bff565b34801561031657600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b50610353610f9d565b60405167ffffffffffffffff9091168152602001610255565b34801561037857600080fd5b50610229610387366004612666565b610fc6565b34801561039857600080fd5b50610229611152565b3480156103ad57600080fd5b506103d16103bc366004612690565b606654600160ff9092169190911b9081161490565b6040519015158152602001610255565b3480156103ed57600080fd5b5060665461024b565b34801561040257600080fd5b5061024b610411366004612608565b609b6020526000908152604090205481565b34801561042f57600080fd5b50610229611219565b34801561044457600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561047857600080fd5b506102d261122d565b34801561048d57600080fd5b506065546102d2906001600160a01b031681565b3480156104ad57600080fd5b506033546001600160a01b03166102d2565b3480156104cb57600080fd5b506102d273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6102296104f53660046126fc565b611317565b34801561050657600080fd5b506102d2610515366004612608565b6098602052600090815260409020546001600160a01b031681565b34801561053c57600080fd5b506102d261054b366004612608565b611406565b34801561055c57600080fd5b5061024b60995481565b34801561057257600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105a657600080fd5b506102296105b53660046125dc565b6114d8565b3480156105c657600080fd5b506097546102d2906001600160a01b031681565b3480156105e657600080fd5b5061024b609a5481565b3480156105fc57600080fd5b5061022961060b366004612608565b6116ef565b34801561061c57600080fd5b5061022961062b3660046125dc565b611700565b34801561063c57600080fd5b5061024b61064b366004612666565b611b03565b34801561065c57600080fd5b5061022961066b366004612770565b611c0e565b34801561067c57600080fd5b506102d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156106b057600080fd5b506102296106bf366004612608565b611d41565b3480156106d057600080fd5b506103d16106df366004612608565b6001600160a01b0390811660009081526098602052604090205416151590565b34801561070b57600080fd5b5061022961071a3660046125ae565b611db7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079691906127cb565b6001600160a01b0316336001600160a01b0316146107cf5760405162461bcd60e51b81526004016107c6906127e8565b60405180910390fd5b6107d881611f13565b50565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108255760405162461bcd60e51b81526004016107c690612832565b6001600160a01b0383166108a15760405162461bcd60e51b815260206004820152603a60248201527f456967656e506f644d616e616765722e6164645368617265733a20706f644f7760448201527f6e65722063616e6e6f74206265207a65726f206164647265737300000000000060648201526084016107c6565b600082121561090f5760405162461bcd60e51b815260206004820152603460248201527f456967656e506f644d616e616765722e6164645368617265733a207368617265604482015273732063616e6e6f74206265206e6567617469766560601b60648201526084016107c6565b61091d633b9aca00836128a6565b156109905760405162461bcd60e51b815260206004820152603d60248201527f456967656e506f644d616e616765722e6164645368617265733a20736861726560448201527f73206d75737420626520612077686f6c65204777656920616d6f756e7400000060648201526084016107c6565b6001600160a01b0383166000908152609b6020526040812054906109b484836128d0565b6001600160a01b0386166000818152609b6020526040908190208390555191925090600080516020613410833981519152906109f39087815260200190565b60405180910390a2610a058282611f54565b925050505b92915050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8791906127cb565b6001600160a01b0316336001600160a01b031614610ab75760405162461bcd60e51b81526004016107c6906127e8565b6107d881611f96565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190612911565b610b485760405162461bcd60e51b81526004016107c690612933565b60665481811614610bc15760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016107c6565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c475760405162461bcd60e51b81526004016107c690612832565b6001600160a01b038316610cc15760405162461bcd60e51b8152602060048201526047602482015260008051602061343083398151915260448201527f546f6b656e733a20706f644f776e65722063616e6e6f74206265207a65726f206064820152666164647265737360c81b608482015260a4016107c6565b6001600160a01b038216610d3e5760405162461bcd60e51b815260206004820152604a602482015260008051602061343083398151915260448201527f546f6b656e733a2064657374696e6174696f6e2063616e6e6f74206265207a65606482015269726f206164647265737360b01b608482015260a4016107c6565b6000811215610dad5760405162461bcd60e51b8152602060048201526041602482015260008051602061343083398151915260448201527f546f6b656e733a207368617265732063616e6e6f74206265206e6567617469766064820152606560f81b608482015260a4016107c6565b610dbb633b9aca00826128a6565b15610e2f5760405162461bcd60e51b815260206004820152604a602482015260008051602061343083398151915260448201527f546f6b656e733a20736861726573206d75737420626520612077686f6c6520476064820152691dd95a48185b5bdd5b9d60b21b608482015260a4016107c6565b6001600160a01b0383166000908152609b602052604081205490811215610f22576000610e5b8261297b565b905080831115610ec0576001600160a01b0385166000908152609b6020526040812055610e888184612998565b9250846001600160a01b031660008051602061341083398151915282604051610eb391815260200190565b60405180910390a2610f20565b6001600160a01b0385166000908152609b602052604081208054859290610ee89084906128d0565b90915550506040518381526001600160a01b038616906000805160206134108339815191529060200160405180910390a25050505050565b505b6001600160a01b03848116600090815260986020526040908190205490516362483a2160e11b815285831660048201526024810185905291169063c490744290604401600060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b5050505050505050565b609c5460009067ffffffffffffffff1680610fc15767ffffffffffffffff91505090565b919050565b610fce61208d565b67ffffffffffffffff81166110605760405162461bcd60e51b815260206004820152604c60248201527f456967656e506f644d616e616765722e73657444656e6562466f726b54696d6560448201527f7374616d703a2063616e6e6f7420736574206e657744656e6562466f726b546960648201526b06d657374616d7020746f20360a41b608482015260a4016107c6565b609c5467ffffffffffffffff16156110fc5760405162461bcd60e51b815260206004820152605360248201527f456967656e506f644d616e616765722e73657444656e6562466f726b54696d6560448201527f7374616d703a2063616e6e6f74207365742064656e6562466f726b54696d657360648201527274616d70206d6f7265207468616e206f6e636560681b608482015260a4016107c6565b609c805467ffffffffffffffff191667ffffffffffffffff83169081179091556040519081527f19200b6fdad58f91b2f496b0c444fc4be3eff74a7e24b07770e04a7137bfd9db9060200160405180910390a150565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be9190612911565b6111da5760405162461bcd60e51b81526004016107c690612933565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b61122161208d565b61122b60006120e7565b565b6066546000908190600190811614156112845760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016107c6565b336000908152609860205260409020546001600160a01b0316156113065760405162461bcd60e51b815260206004820152603360248201527f456967656e506f644d616e616765722e637265617465506f643a2053656e64656044820152721c88185b1c9958591e481a185cc818481c1bd9606a1b60648201526084016107c6565b6000611310612139565b9250505090565b6066546000906001908116141561136c5760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016107c6565b336000908152609860205260409020546001600160a01b03168061139557611392612139565b90505b6040516326d3918d60e21b81526001600160a01b03821690639b4e46349034906113cb908b908b908b908b908b906004016129d8565b6000604051808303818588803b1580156113e457600080fd5b505af11580156113f8573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b0380821660009081526098602052604081205490911680610a0a576114d1836001600160a01b031660001b60405180610940016040528061090e8152602001612b0261090e9139604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152808201919091526000606082015260800160408051601f19818403018152908290526114b69291602001612a4d565b60405160208183030381529060405280519060200120612314565b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115205760405162461bcd60e51b81526004016107c690612832565b60008112156115975760405162461bcd60e51b815260206004820152603760248201527f456967656e506f644d616e616765722e72656d6f76655368617265733a20736860448201527f617265732063616e6e6f74206265206e6567617469766500000000000000000060648201526084016107c6565b6115a5633b9aca00826128a6565b1561161a576040805162461bcd60e51b81526020600482015260248101919091527f456967656e506f644d616e616765722e72656d6f76655368617265733a20736860448201527f61726573206d75737420626520612077686f6c65204777656920616d6f756e7460648201526084016107c6565b6001600160a01b0382166000908152609b602052604081205461163e908390612a62565b905060008112156116cf5760405162461bcd60e51b815260206004820152604f60248201527f456967656e506f644d616e616765722e72656d6f76655368617265733a20636160448201527f6e6e6f7420726573756c7420696e20706f64206f776e657220686176696e672060648201526e6e656761746976652073686172657360881b608482015260a4016107c6565b6001600160a01b039092166000908152609b602052604090209190915550565b6116f761208d565b6107d881612370565b6001600160a01b03808316600090815260986020526040902054839116331461177b5760405162461bcd60e51b815260206004820152602760248201527f456967656e506f644d616e616765722e6f6e6c79456967656e506f643a206e6f6044820152661d0818481c1bd960ca1b60648201526084016107c6565b600260c95414156117ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107c6565b600260c9556001600160a01b03831661186a5760405162461bcd60e51b815260206004820152605260248201527f456967656e506f644d616e616765722e7265636f7264426561636f6e4368616960448201527f6e45544842616c616e63655570646174653a20706f644f776e65722063616e6e6064820152716f74206265207a65726f206164647265737360701b608482015260a4016107c6565b611878633b9aca0083612aa1565b156119115760405162461bcd60e51b815260206004820152605a60248201527f456967656e506f644d616e616765722e7265636f7264426561636f6e4368616960448201527f6e45544842616c616e63655570646174653a2073686172657344656c7461206d60648201527f75737420626520612077686f6c65204777656920616d6f756e74000000000000608482015260a4016107c6565b6001600160a01b0383166000908152609b60205260408120549061193584836128d0565b6001600160a01b0386166000908152609b6020526040812082905590915061195d8383611f54565b90508015611ac5576000811215611a28576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663132d49678773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06119bc8561297b565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611a0b57600080fd5b505af1158015611a1f573d6000803e3d6000fd5b50505050611ac5565b604051631452b9d760e11b81526001600160a01b03878116600483015273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906328a573ae90606401600060405180830381600087803b158015611aac57600080fd5b505af1158015611ac0573d6000803e3d6000fd5b505050505b856001600160a01b031660008051602061341083398151915286604051611aee91815260200190565b60405180910390a25050600160c95550505050565b60975460405163321accf960e11b815267ffffffffffffffff8316600482015260009182916001600160a01b039091169063643599f290602401602060405180830381865afa158015611b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7e9190612ab5565b905080610a0a5760405162461bcd60e51b815260206004820152605260248201527f456967656e506f644d616e616765722e676574426c6f636b526f6f744174546960448201527f6d657374616d703a20737461746520726f6f742061742074696d657374616d70606482015271081b9bdd081e595d08199a5b985b1a5e995960721b608482015260a4016107c6565b600054610100900460ff1615808015611c2e5750600054600160ff909116105b80611c485750303b158015611c48575060005460ff166001145b611cab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107c6565b6000805460ff191660011790558015611cce576000805461ff0019166101001790555b611cd786611f13565b611ce085612370565b611ce9846120e7565b611cf383836123ba565b8015611d39576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b611d4961208d565b6001600160a01b038116611dae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107c6565b6107d8816120e7565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2e91906127cb565b6001600160a01b0316336001600160a01b031614611e5e5760405162461bcd60e51b81526004016107c6906127e8565b606654198119606654191614611edc5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016107c6565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610bf4565b609a5460408051918252602082018390527f4e65c41a3597bda732ca64980235cf51494171d5853998763fb05db45afaacb3910160405180910390a1609a55565b6000808313611f745760008213611f6d57506000610a0a565b5080610a0a565b60008213611f8c57611f858361297b565b9050610a0a565b611f858383612a62565b6001600160a01b0381166120245760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016107c6565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461122b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107c6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000609a54609954600161214d9190612ace565b11156121b15760405162461bcd60e51b815260206004820152602d60248201527f456967656e506f644d616e616765722e5f6465706c6f79506f643a20706f642060448201526c1b1a5b5a5d081c995858da1959609a1b60648201526084016107c6565b6099600081546121c090612ae6565b9091555060408051610940810190915261090e80825260009161225f9183913391612b026020830139604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152808201919091526000606082015260800160408051601f198184030181529082905261224b9291602001612a4d565b6040516020818303038152906040526124a4565b60405163189acdbd60e31b81523360048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156122a357600080fd5b505af11580156122b7573d6000803e3d6000fd5b50503360008181526098602052604080822080546001600160a01b0319166001600160a01b038816908117909155905192945092507f21c99d0db02213c32fff5b05cf0a718ab5f858802b91498f80d82270289d856a91a3919050565b604080516001600160f81b03196020808301919091526bffffffffffffffffffffffff193060601b16602183015260358201859052605580830185905283518084039091018152607590920190925280519101206000906114d1565b609780546001600160a01b0319166001600160a01b0383169081179091556040517f08f0470754946ccfbb446ff7fd2d6ae6af1bbdae19f85794c0cc5ed5e8ceb4f690600090a250565b6065546001600160a01b03161580156123db57506001600160a01b03821615155b61245d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016107c6565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a26124a082611f96565b5050565b600080844710156124f75760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016107c6565b82516125455760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016107c6565b8383516020850187f590506001600160a01b0381166125a65760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016107c6565b949350505050565b6000602082840312156125c057600080fd5b5035919050565b6001600160a01b03811681146107d857600080fd5b600080604083850312156125ef57600080fd5b82356125fa816125c7565b946020939093013593505050565b60006020828403121561261a57600080fd5b81356114d1816125c7565b60008060006060848603121561263a57600080fd5b8335612645816125c7565b92506020840135612655816125c7565b929592945050506040919091013590565b60006020828403121561267857600080fd5b813567ffffffffffffffff811681146114d157600080fd5b6000602082840312156126a257600080fd5b813560ff811681146114d157600080fd5b60008083601f8401126126c557600080fd5b50813567ffffffffffffffff8111156126dd57600080fd5b6020830191508360208285010111156126f557600080fd5b9250929050565b60008060008060006060868803121561271457600080fd5b853567ffffffffffffffff8082111561272c57600080fd5b61273889838a016126b3565b9097509550602088013591508082111561275157600080fd5b5061275e888289016126b3565b96999598509660400135949350505050565b600080600080600060a0868803121561278857600080fd5b85359450602086013561279a816125c7565b935060408601356127aa816125c7565b925060608601356127ba816125c7565b949793965091946080013592915050565b6000602082840312156127dd57600080fd5b81516114d1816125c7565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b602080825260409082018190527f456967656e506f644d616e616765722e6f6e6c7944656c65676174696f6e4d61908201527f6e616765723a206e6f74207468652044656c65676174696f6e4d616e61676572606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826128b5576128b5612890565b500690565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b03849003851316156128f2576128f26128ba565b600160ff1b839003841281161561290b5761290b6128ba565b50500190565b60006020828403121561292357600080fd5b815180151581146114d157600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000600160ff1b821415612991576129916128ba565b5060000390565b6000828210156129aa576129aa6128ba565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006129ec6060830187896129af565b82810360208401526129ff8186886129af565b9150508260408301529695505050505050565b6000815160005b81811015612a335760208185018101518683015201612a19565b81811115612a42576000828601525b509290920192915050565b60006125a6612a5c8386612a12565b84612a12565b60008083128015600160ff1b850184121615612a8057612a806128ba565b6001600160ff1b0384018313811615612a9b57612a9b6128ba565b50500390565b600082612ab057612ab0612890565b500790565b600060208284031215612ac757600080fd5b5051919050565b60008219821115612ae157612ae16128ba565b500190565b6000600019821415612afa57612afa6128ba565b506001019056fe608060405260405161090e38038061090e83398101604081905261002291610460565b61002e82826000610035565b505061058a565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610520565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610520565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108e7602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053b565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c65782516103bf576001600160a01b0385163b6103bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d0565b6103d083836103d8565b949350505050565b8151156103e85781518083602001fd5b8060405162461bcd60e51b81526004016101699190610557565b80516001600160a01b038116811461041957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561044f578181015183820152602001610437565b838111156100f95750506000910152565b6000806040838503121561047357600080fd5b61047c83610402565b60208401519092506001600160401b038082111561049957600080fd5b818501915085601f8301126104ad57600080fd5b8151818111156104bf576104bf61041e565b604051601f8201601f19908116603f011681019083821181831017156104e7576104e761041e565b8160405282815288602084870101111561050057600080fd5b610511836020830160208801610434565b80955050505050509250929050565b60006020828403121561053257600080fd5b6102c882610402565b6000825161054d818460208701610434565b9190910192915050565b6020815260008251806020840152610576816040850160208701610434565b601f01601f19169190910160400192915050565b61034e806105996000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f260279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610249565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a2565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b6060831561020d578251610206576001600160a01b0385163b6102065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610217565b610217838361021f565b949350505050565b81511561022f5781518083602001fd5b8060405162461bcd60e51b81526004016101fd91906102be565b60006020828403121561025b57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028d578181015183820152602001610275565b8381111561029c576000848401525b50505050565b600082516102b4818460208701610272565b9190910192915050565b60208152600082518060208401526102dd816040850160208701610272565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d51e81d3bc5ed20a26aeb05dce7e825c503b2061aa78628027300c8d65b9d89a64736f6c634300080c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65644e2b791dedccd9fb30141b088cabf5c14a8912b52f59375c95c010700b8c6193456967656e506f644d616e616765722e77697468647261775368617265734173a2646970667358221220494d597fc832e8d8f0a7bddc1ce2f409c01847617e705ffdf24e6aae312b9db164736f6c634300080c0033",
    "sourceMap": "923:15656:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10859:102;;;;;;;;;;-1:-1:-1;10859:102:31;;;;;:::i;:::-;;:::i;:::-;;7652:834;;;;;;;;;;-1:-1:-1;7652:834:31;;;;;:::i;:::-;;:::i;:::-;;;801:25:156;;;789:2;774:18;7652:834:31;;;;;;;;5826:138:27;;;;;;;;;;-1:-1:-1;5826:138:27;;;;;:::i;:::-;;:::i;3832:392::-;;;;;;;;;;-1:-1:-1;3832:392:27;;;;;:::i;:::-;;:::i;592:39:32:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1294:32:156;;;1276:51;;1264:2;1249:18;592:39:32;1113:220:156;8972:1674:31;;;;;;;;;;-1:-1:-1;8972:1674:31;;;;;:::i;:::-;;:::i;692:49:32:-;;;;;;;;;;;;;;;16339:238:31;;;;;;;;;;;;;:::i;:::-;;;2206:18:156;2194:31;;;2176:50;;2164:2;2149:18;16339:238:31;2032:200:156;11527:467:31;;;;;;;;;;-1:-1:-1;11527:467:31;;;;;:::i;:::-;;:::i;4299:136:27:-;;;;;;;;;;;;;:::i;5606:149::-;;;;;;;;;;-1:-1:-1;5606:149:27;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;;;;2965:14:156;;2958:22;2940:41;;2928:2;2913:18;5606:149:27;2800:187:156;5418:87:27;;;;;;;;;;-1:-1:-1;5491:7:27;;5418:87;;7650:48:32;;;;;;;;;;-1:-1:-1;7650:48:32;;;;;:::i;:::-;;;;;;;;;;;;;;2071:101:59;;;;;;;;;;;;;:::i;489:38:32:-;;;;;;;;;;;;;;;2449:319:31;;;;;;;;;;;;;:::i;1825:37:27:-;;;;;;;;;;-1:-1:-1;1825:37:27;;;;-1:-1:-1;;;;;1825:37:27;;;1441:85:59;;;;;;;;;;-1:-1:-1;1513:6:59;;-1:-1:-1;;;;;1513:6:59;1441:85;;6222:104:32;;;;;;;;;;;;6283:42;6222:104;;3190:456:31;;;;;;:::i;:::-;;:::i;6520:47:32:-;;;;;;;;;;-1:-1:-1;6520:47:32;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6520:47:32;;;14793:568:31;;;;;;;;;;-1:-1:-1;14793:568:31;;;;;:::i;:::-;;:::i;6757:22:32:-;;;;;;;;;;;;;;;;794:33;;;;;;;;;;;;;;;6533:594:31;;;;;;;;;;-1:-1:-1;6533:594:31;;;;;:::i;:::-;;:::i;6415:43:32:-;;;;;;;;;;-1:-1:-1;6415:43:32;;;;-1:-1:-1;;;;;6415:43:32;;;6855:22;;;;;;;;;;;;;;;;11221:156:31;;;;;;;;;;-1:-1:-1;11221:156:31;;;;;:::i;:::-;;:::i;4126:1676::-;;;;;;;;;;-1:-1:-1;4126:1676:31;;;;;:::i;:::-;;:::i;15736:357::-;;;;;;;;;;-1:-1:-1;15736:357:31;;;;;:::i;:::-;;:::i;1837:423::-;;;;;;;;;;-1:-1:-1;1837:423:31;;;;;:::i;:::-;;:::i;890:53:32:-;;;;;;;;;;;;;;;2321:198:59;;;;;;;;;;-1:-1:-1;2321:198:59;;;;;:::i;:::-;;:::i;15464:128:31:-;;;;;;;;;;-1:-1:-1;15464:128:31;;;;;:::i;:::-;-1:-1:-1;;;;;15550:20:31;;;15519:4;15550:20;;;:10;:20;;;;;;;15542:43;;;15464:128;4911:437:27;;;;;;;;;;-1:-1:-1;4911:437:27;;;;;:::i;:::-;;:::i;10859:102:31:-;2285:14:27;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;;;;;;;;;10931:23:31::1;10943:10;10931:11;:23::i;:::-;10859:102:::0;:::o;7652:834::-;7767:7;1341:10;-1:-1:-1;;;;;1363:17:31;1341:40;;1320:151;;;;-1:-1:-1;;;1320:151:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;7794:22:31;::::1;7786:93;;;::::0;-1:-1:-1;;;7786:93:31;;9189:2:156;7786:93:31::1;::::0;::::1;9171:21:156::0;9228:2;9208:18;;;9201:30;9267:34;9247:18;;;9240:62;9338:28;9318:18;;;9311:56;9384:19;;7786:93:31::1;8987:422:156::0;7786:93:31::1;7915:1;7904:6;7897:19;;7889:84;;;::::0;-1:-1:-1;;;7889:84:31;;9616:2:156;7889:84:31::1;::::0;::::1;9598:21:156::0;9655:2;9635:18;;;9628:30;9694:34;9674:18;;;9667:62;-1:-1:-1;;;9745:18:156;;;9738:50;9805:19;;7889:84:31::1;9414:416:156::0;7889:84:31::1;7991:20;6151:3:32;7991:6:31::0;:20:::1;:::i;:::-;:25:::0;7983:99:::1;;;::::0;-1:-1:-1;;;7983:99:31;;10286:2:156;7983:99:31::1;::::0;::::1;10268:21:156::0;10325:2;10305:18;;;10298:30;10364:34;10344:18;;;10337:62;10435:31;10415:18;;;10408:59;10484:19;;7983:99:31::1;10084:425:156::0;7983:99:31::1;-1:-1:-1::0;;;;;8123:24:31;::::1;8092:28;8123:24:::0;;;:14:::1;:24;::::0;;;;;;8188:38:::1;8219:6:::0;8123:24;8188:38:::1;:::i;:::-;-1:-1:-1::0;;;;;8236:24:31;::::1;;::::0;;;:14:::1;:24;::::0;;;;;;:48;;;8300:42;8157:69;;-1:-1:-1;8236:24:31;-1:-1:-1;;;;;;;;;;;8300:42:31;::::1;::::0;8334:6;801:25:156;;789:2;774:18;;655:177;8300:42:31::1;;;;;;;;8368:110;8419:21;8455;8368:35;:110::i;:::-;8353:126;;;;1481:1;7652:834:::0;;;;:::o;5826:138:27:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5920:37:::1;5939:17;5920:18;:37::i;3832:392::-:0;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;1276:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;1249:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:27;;11809:2:156;4025:107:27::1;::::0;::::1;11791:21:156::0;11848:2;11828:18;;;11821:30;11887:34;11867:18;;;11860:62;11958:26;11938:18;;;11931:54;12002:19;;4025:107:27::1;11607:420:156::0;4025:107:27::1;4142:7;:25:::0;;;4182:35:::1;::::0;801:25:156;;;4189:10:27::1;::::0;4182:35:::1;::::0;789:2:156;774:18;4182:35:27::1;;;;;;;;3832:392:::0;:::o;8972:1674:31:-;1341:10;-1:-1:-1;;;;;1363:17:31;1341:40;;1320:151;;;;-1:-1:-1;;;1320:151:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;9140:22:31;::::1;9132:106;;;::::0;-1:-1:-1;;;9132:106:31;;12234:2:156;9132:106:31::1;::::0;::::1;12216:21:156::0;12273:2;12253:18;;;12246:30;-1:-1:-1;;;;;;;;;;;12292:18:156;;;12285:62;12383:34;12363:18;;;12356:62;-1:-1:-1;;;12434:19:156;;;12427:38;12482:19;;9132:106:31::1;12032:475:156::0;9132:106:31::1;-1:-1:-1::0;;;;;9256:25:31;::::1;9248:112;;;::::0;-1:-1:-1;;;9248:112:31;;12714:2:156;9248:112:31::1;::::0;::::1;12696:21:156::0;12753:2;12733:18;;;12726:30;-1:-1:-1;;;;;;;;;;;12772:18:156;;;12765:62;12863:34;12843:18;;;12836:62;-1:-1:-1;;;12914:19:156;;;12907:41;12965:19;;9248:112:31::1;12512:478:156::0;9248:112:31::1;9396:1;9385:6;9378:19;;9370:97;;;::::0;-1:-1:-1;;;9370:97:31;;13197:2:156;9370:97:31::1;::::0;::::1;13179:21:156::0;13236:2;13216:18;;;13209:30;-1:-1:-1;;;;;;;;;;;13255:18:156;;;13248:62;13346:34;13326:18;;;13319:62;-1:-1:-1;;;13397:19:156;;;13390:32;13439:19;;9370:97:31::1;12995:469:156::0;9370:97:31::1;9485:20;6151:3:32;9485:6:31::0;:20:::1;:::i;:::-;:25:::0;9477:112:::1;;;::::0;-1:-1:-1;;;9477:112:31;;13671:2:156;9477:112:31::1;::::0;::::1;13653:21:156::0;13710:2;13690:18;;;13683:30;-1:-1:-1;;;;;;;;;;;13729:18:156;;;13722:62;13820:34;13800:18;;;13793:62;-1:-1:-1;;;13871:19:156;;;13864:41;13922:19;;9477:112:31::1;13469:478:156::0;9477:112:31::1;-1:-1:-1::0;;;;;9630:24:31;::::1;9599:28;9630:24:::0;;;:14:::1;:24;::::0;;;;;;9760:25;::::1;9756:754;;;9801:27;9839:22;9840:21:::0;9839:22:::1;:::i;:::-;9801:61;;9993:19;9984:6;:28;9980:520;;;-1:-1:-1::0;;;;;10032:24:31;::::1;10059:1;10032:24:::0;;;:14:::1;:24;::::0;;;;:28;10078:29:::1;10088:19:::0;10078:29;::::1;:::i;:::-;;;10147:8;-1:-1:-1::0;;;;;10130:55:31::1;-1:-1:-1::0;;;;;;;;;;;10164:19:31::1;10130:55;;;;801:25:156::0;;789:2;774:18;;655:177;10130:55:31::1;;;;;;;;9980:520;;;-1:-1:-1::0;;;;;10354:24:31;::::1;;::::0;;;:14:::1;:24;::::0;;;;:42;;10389:6;;10354:24;:42:::1;::::0;10389:6;;10354:42:::1;:::i;:::-;::::0;;;-1:-1:-1;;10419:42:31::1;::::0;801:25:156;;;-1:-1:-1;;;;;10419:42:31;::::1;::::0;-1:-1:-1;;;;;;;;;;;10419:42:31;789:2:156;774:18;10419:42:31::1;;;;;;;10479:7;;8972:1674:::0;;;:::o;9980:520::-:1;9787:723;9756:754;-1:-1:-1::0;;;;;10567:20:31;;::::1;;::::0;;;:10:::1;:20;::::0;;;;;;;:72;;-1:-1:-1;;;10567:72:31;;14415:32:156;;;10567:72:31::1;::::0;::::1;14397:51:156::0;14464:18;;;14457:34;;;10567:20:31;::::1;::::0;:51:::1;::::0;14370:18:156;;10567:72:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9122:1524;8972:1674:::0;;;:::o;16339:238::-;16427:19;;16390:6;;16427:19;;16460:14;16456:115;;16497:16;16490:23;;;16339:238;:::o;16456:115::-;16551:9;16339:238;-1:-1:-1;16339:238:31:o;11527:467::-;1334:13:59;:11;:13::i;:::-;11625:26:31::1;::::0;::::1;11617:115;;;::::0;-1:-1:-1;;;11617:115:31;;14704:2:156;11617:115:31::1;::::0;::::1;14686:21:156::0;14743:2;14723:18;;;14716:30;14782:34;14762:18;;;14755:62;14853:34;14833:18;;;14826:62;-1:-1:-1;;;14904:19:156;;;14897:43;14957:19;;11617:115:31::1;14502:480:156::0;11617:115:31::1;11750:19;::::0;::::1;;:24:::0;11742:120:::1;;;::::0;-1:-1:-1;;;11742:120:31;;15189:2:156;11742:120:31::1;::::0;::::1;15171:21:156::0;15228:2;15208:18;;;15201:30;15267:34;15247:18;;;15240:62;15338:34;15318:18;;;15311:62;-1:-1:-1;;;15389:19:156;;;15382:50;15449:19;;11742:120:31::1;14987:487:156::0;11742:120:31::1;11881:19;:43:::0;;-1:-1:-1;;11881:43:31::1;;::::0;::::1;::::0;;::::1;::::0;;;11939:48:::1;::::0;2176:50:156;;;11939:48:31::1;::::0;2164:2:156;2149:18;11939:48:31::1;;;;;;;11527:467:::0;:::o;4299:136:27:-;2125:14;;:35;;-1:-1:-1;;;2125:35:27;;2149:10;2125:35;;;1276:51:156;-1:-1:-1;;;;;2125:14:27;;;;:23;;1249:18:156;;2125:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:27;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:27::1;:27:::0;;;4391:37:::1;::::0;801:25:156;;;4398:10:27::1;::::0;4391:37:::1;::::0;789:2:156;774:18;4391:37:27::1;;;;;;;4299:136::o:0;2071:101:59:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2449:319:31:-;5724:7:27;;2528::31;;;;5695:1:27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;15681:2:156;2759:52:27;;;15663:21:156;15720:2;15700:18;;;15693:30;-1:-1:-1;;;15739:18:156;;;15732:55;15804:18;;2759:52:27;15479:349:156;2759:52:27;2563:10:31::1;15519:4:::0;15550:20;;;:10;:20;;;;;;-1:-1:-1;;;;;15550:20:31;15542:43;2547:83:::1;;;::::0;-1:-1:-1;;;2547:83:31;;16035:2:156;2547:83:31::1;::::0;::::1;16017:21:156::0;16074:2;16054:18;;;16047:30;16113:34;16093:18;;;16086:62;-1:-1:-1;;;16164:18:156;;;16157:49;16223:19;;2547:83:31::1;15833:415:156::0;2547:83:31::1;2703:13;2719:12;:10;:12::i;:::-;2703:28:::0;-1:-1:-1;;2449:319:31;;:::o;3190:456::-;5724:7:27;;473:1:33;;5695::27;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:27;;15681:2:156;2759:52:27;;;15663:21:156;15720:2;15700:18;;;15693:30;-1:-1:-1;;;15739:18:156;;;15732:55;15804:18;;2759:52:27;15479:349:156;2759:52:27;3405:10:31::1;3378:13;3394:22:::0;;;:10:::1;:22;::::0;;;;;-1:-1:-1;;;;;3394:22:31::1;3430:26:::0;3426:141:::1;;3544:12;:10;:12::i;:::-;3538:18;;3426:141;3576:63;::::0;-1:-1:-1;;;3576:63:31;;-1:-1:-1;;;;;3576:9:31;::::1;::::0;::::1;::::0;3593::::1;::::0;3576:63:::1;::::0;3604:6;;;;3612:9;;;;3623:15;;3576:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3368:278;3190:456:::0;;;;;;:::o;14793:568::-;-1:-1:-1;;;;;14885:20:31;;;14848:9;14885:20;;;:10;:20;;;;;;14848:9;;14885:20;15018:26;15014:321;;15093:217;15161:8;-1:-1:-1;;;;;15145:26:31;15137:35;;15228:19;;;;;;;;;;;;;;;;;15249:30;;;-1:-1:-1;;;;;15260:14:31;17278:32:156;15249:30:31;;;17260:51:156;17327:18;;;17320:30;;;;-1:-1:-1;17366:18:156;;;17359:29;17405:18;;15249:30:31;;;-1:-1:-1;;15249:30:31;;;;;;;;;;15211:69;;;15249:30;15211:69;;:::i;:::-;;;;;;;;;;;;;15201:80;;;;;;15093:22;:217::i;:::-;15060:264;15351:3;-1:-1:-1;;;14793:568:31:o;6533:594::-;1341:10;-1:-1:-1;;;;;1363:17:31;1341:40;;1320:151;;;;-1:-1:-1;;;1320:151:31;;;;;;;:::i;:::-;6679:1:::1;6668:6;6661:19;;6653:87;;;::::0;-1:-1:-1;;;6653:87:31;;18243:2:156;6653:87:31::1;::::0;::::1;18225:21:156::0;18282:2;18262:18;;;18255:30;18321:34;18301:18;;;18294:62;18392:25;18372:18;;;18365:53;18435:19;;6653:87:31::1;18041:419:156::0;6653:87:31::1;6758:20;6151:3:32;6758:6:31::0;:20:::1;:::i;:::-;:25:::0;6750:102:::1;;;::::0;;-1:-1:-1;;;6750:102:31;;18667:2:156;6750:102:31::1;::::0;::::1;18649:21:156::0;18686:18;;;18679:30;;;;18745:34;18725:18;;;18718:62;18816:34;18796:18;;;18789:62;18868:19;;6750:102:31::1;18465:428:156::0;6750:102:31::1;-1:-1:-1::0;;;;;6893:24:31;::::1;6862:28;6893:24:::0;;;:14:::1;:24;::::0;;;;;:41:::1;::::0;6927:6;;6893:41:::1;:::i;:::-;6862:72;;6977:1;6952:21;:26;;6944:118;;;::::0;-1:-1:-1;;;6944:118:31;;19372:2:156;6944:118:31::1;::::0;::::1;19354:21:156::0;19411:2;19391:18;;;19384:30;19450:34;19430:18;;;19423:62;19521:34;19501:18;;;19494:62;-1:-1:-1;;;19572:19:156;;;19565:46;19628:19;;6944:118:31::1;19170:483:156::0;6944:118:31::1;-1:-1:-1::0;;;;;7072:24:31;;::::1;;::::0;;;:14:::1;:24;::::0;;;;:48;;;;-1:-1:-1;6533:594:31:o;11221:156::-;1334:13:59;:11;:13::i;:::-;11324:46:31::1;11349:20;11324:24;:46::i;4126:1676::-:0;-1:-1:-1;;;;;1174:20:31;;;;;;;:10;:20;;;;;;4251:8;;1174:20;1199:10;1166:43;1158:95;;;;-1:-1:-1;;;1158:95:31;;19860:2:156;1158:95:31;;;19842:21:156;19899:2;19879:18;;;19872:30;19938:34;19918:18;;;19911:62;-1:-1:-1;;;19989:18:156;;;19982:37;20036:19;;1158:95:31;19658:403:156;1158:95:31;1815:1:61::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:61;;20268:2:156;2561:63:61::1;::::0;::::1;20250:21:156::0;20307:2;20287:18;;;20280:30;20346:33;20326:18;;;20319:61;20397:18;;2561:63:61::1;20066:355:156::0;2561:63:61::1;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;4292:22:31;::::2;4284:117;;;::::0;-1:-1:-1;;;4284:117:31;;20628:2:156;4284:117:31::2;::::0;::::2;20610:21:156::0;20667:2;20647:18;;;20640:30;20706:34;20686:18;;;20679:62;20777:34;20757:18;;;20750:62;-1:-1:-1;;;20828:19:156;;;20821:49;20887:19;;4284:117:31::2;20426:486:156::0;4284:117:31::2;4419:33;6151:3:32;4419:11:31::0;:33:::2;:::i;:::-;:38:::0;4411:153:::2;;;::::0;-1:-1:-1;;;4411:153:31;;21236:2:156;4411:153:31::2;::::0;::::2;21218:21:156::0;21275:2;21255:18;;;21248:30;21314:34;21294:18;;;21287:62;21385:34;21365:18;;;21358:62;21457:28;21436:19;;;21429:57;21503:19;;4411:153:31::2;21034:494:156::0;4411:153:31::2;-1:-1:-1::0;;;;;4605:24:31;::::2;4574:28;4605:24:::0;;;:14:::2;:24;::::0;;;;;;4670:35:::2;4694:11:::0;4605:24;4670:35:::2;:::i;:::-;-1:-1:-1::0;;;;;4715:24:31;::::2;;::::0;;;:14:::2;:24;::::0;;;;:48;;;4639:66;;-1:-1:-1;4886:144:31::2;4950:21:::0;4639:66;4886:35:::2;:144::i;:::-;4851:179:::0;-1:-1:-1;5144:30:31;;5140:602:::2;;5222:1;5194:25;:29;5190:542;;;-1:-1:-1::0;;;;;5243:17:31::2;:41;;5315:8:::0;6283:42:32::2;5415:26:31;5416:25:::0;5415:26:::2;:::i;:::-;5243:218;::::0;-1:-1:-1;;;;;;5243:218:31::2;::::0;;;;;;-1:-1:-1;;;;;21809:15:156;;;5243:218:31::2;::::0;::::2;21791:34:156::0;21861:15;;;;21841:18;;;21834:43;21893:18;;;21886:34;21726:18;;5243:218:31::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5190:542;;;5500:217;::::0;-1:-1:-1;;;5500:217:31;;-1:-1:-1;;;;;21809:15:156;;;5500:217:31::2;::::0;::::2;21791:34:156::0;6283:42:32::2;21841:18:156::0;;;21834:43;21893:18;;;21886:34;;;5500:17:31::2;:41;::::0;::::2;::::0;21726:18:156;;5500:217:31::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5190:542;5773:8;-1:-1:-1::0;;;;;5756:39:31::2;-1:-1:-1::0;;;;;;;;;;;5783:11:31::2;5756:39;;;;801:25:156::0;;789:2;774:18;;655:177;5756:39:31::2;;;;;;;;-1:-1:-1::0;;1772:1:61::1;2872:7;:22:::0;-1:-1:-1;;;;4126:1676:31:o;15736:357::-;15849:17;;:49;;-1:-1:-1;;;15849:49:31;;2206:18:156;2194:31;;15849:49:31;;;2176:50:156;15810:7:31;;;;-1:-1:-1;;;;;15849:17:31;;;;:38;;2149:18:156;;15849:49:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15829:69;-1:-1:-1;15929:23:31;15908:152;;;;-1:-1:-1;;;15908:152:31;;22528:2:156;15908:152:31;;;22510:21:156;22567:2;22547:18;;;22540:30;22606:34;22586:18;;;22579:62;22677:34;22657:18;;;22650:62;-1:-1:-1;;;22728:19:156;;;22721:49;22787:19;;15908:152:31;22326:486:156;1837:423:31;3111:19:60;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:60;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:60;1476:19:62;:23;;;3219:66:60;;-1:-1:-1;3268:12:60;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:60;;23019:2:156;3157:201:60;;;23001:21:156;23058:2;23038:18;;;23031:30;23097:34;23077:18;;;23070:62;-1:-1:-1;;;23148:18:156;;;23141:44;23202:19;;3157:201:60;22817:410:156;3157:201:60;3368:12;:16;;-1:-1:-1;;3368:16:60;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:60;;;;;3394:65;2073:21:31::1;2085:8;2073:11;:21::i;:::-;2104:44;2129:18;2104:24;:44::i;:::-;2158:32;2177:12;2158:18;:32::i;:::-;2200:53;2218:15;2235:17;2200;:53::i;:::-;3483:14:60::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:60;;;3553:14;;-1:-1:-1;23384:36:156;;3553:14:60;;23372:2:156;23357:18;3553:14:60;;;;;;;3479:99;3101:483;1837:423:31;;;;;:::o;2321:198:59:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:59;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:59;;23633:2:156;2401:73:59::1;::::0;::::1;23615:21:156::0;23672:2;23652:18;;;23645:30;23711:34;23691:18;;;23684:62;-1:-1:-1;;;23762:18:156;;;23755:36;23808:19;;2401:73:59::1;23431:402:156::0;2401:73:59::1;2484:28;2503:8;2484:18;:28::i;4911:437:27:-:0;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:27;-1:-1:-1;;;;;2285:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:27;:10;-1:-1:-1;;;;;2271:39:27;;2263:94;;;;-1:-1:-1;;;2263:94:27;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:27;;24040:2:156;5104:150:27::1;::::0;::::1;24022:21:156::0;24079:2;24059:18;;;24052:30;24118:34;24098:18;;;24091:62;24189:26;24169:18;;;24162:54;24233:19;;5104:150:27::1;23838:420:156::0;5104:150:27::1;5264:7;:25:::0;;;5304:37:::1;::::0;801:25:156;;;5313:10:27::1;::::0;5304:37:::1;::::0;789:2:156;774:18;5304:37:27::1;655:177:156::0;13202:131:31;13280:7;;13265:33;;;24437:25:156;;;24493:2;24478:18;;24471:34;;;13265:33:31;;24410:18:156;13265:33:31;;;;;;;13308:7;:18;13202:131::o;13605:1058::-;13714:6;13752:1;13736:12;:17;13732:925;;13918:1;13903:11;:16;13899:255;;-1:-1:-1;13946:1:31;13939:8;;13899:255;-1:-1:-1;14128:11:31;14121:18;;13732:925;14340:1;14325:11;:16;14321:326;;14369:13;14370:12;14369:13;:::i;:::-;14361:22;;;;14321:326;14605:26;14619:12;14605:11;:26;:::i;6024:360:27:-;-1:-1:-1;;;;;6127:40:27;;6106:160;;;;-1:-1:-1;;;6106:160:27;;24718:2:156;6106:160:27;;;24700:21:156;24757:2;24737:18;;;24730:30;24796:34;24776:18;;;24769:62;24867:34;24847:18;;;24840:62;-1:-1:-1;;;24918:19:156;;;24911:40;24968:19;;6106:160:27;24516:477:156;6106:160:27;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:27;;;25258:34:156;;25328:15;;;25323:2;25308:18;;25301:43;6281:52:27;;25193:18:156;6281:52:27;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:27;-1:-1:-1;;;;;6343:34:27;;;;;;;;;;6024:360::o;1599:130:59:-;1513:6;;-1:-1:-1;;;;;1513:6:59;929:10:63;1662:23:59;1654:68;;;;-1:-1:-1;;;1654:68:59;;25557:2:156;1654:68:59;;;25539:21:156;;;25576:18;;;25569:30;25635:34;25615:18;;;25608:62;25687:18;;1654:68:59;25355:356:156;2673:187:59;2765:6;;;-1:-1:-1;;;;;2781:17:59;;;-1:-1:-1;;;;;;2781:17:59;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;12027:805:31:-;12067:9;12207:7;;12192;;12202:1;12192:11;;;;:::i;:::-;:22;;12184:80;;;;-1:-1:-1;;;12184:80:31;;26051:2:156;12184:80:31;;;26033:21:156;26090:2;26070:18;;;26063:30;26129:34;26109:18;;;26102:62;-1:-1:-1;;;26180:18:156;;;26173:43;26233:19;;12184:80:31;25849:409:156;12184:80:31;12276:7;;12274:9;;;;;:::i;:::-;;;;-1:-1:-1;12563:19:31;;;;;;;;;;;;;12319:13;;12358:271;;12319:13;;12433:10;;12563:19;;;;;12584:30;;;-1:-1:-1;;;;;12595:14:31;17278:32:156;12584:30:31;;;17260:51:156;17327:18;;;17320:30;;;;-1:-1:-1;17366:18:156;;;17359:29;17405:18;;12584:30:31;;;-1:-1:-1;;12584:30:31;;;;;;;;;;12546:69;;;12584:30;12546:69;;:::i;:::-;;;;;;;;;;;;;12358:14;:271::i;:::-;12649:26;;-1:-1:-1;;;12649:26:31;;12664:10;12649:26;;;1276:51:156;12319:320:31;;-1:-1:-1;;;;;;12649:14:31;;;;;1249:18:156;;12649:26:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12736:10:31;12725:22;;;;:10;:22;;;;;;:28;;-1:-1:-1;;;;;;12725:28:31;-1:-1:-1;;;;;12725:28:31;;;;;;;;12768:37;;12736:10;;-1:-1:-1;12725:28:31;-1:-1:-1;12768:37:31;;;12822:3;12027:805;-1:-1:-1;12027:805:31:o;1837:165:85:-;2421:60;;;-1:-1:-1;;;;;;2421:60:85;;;;28167:39:156;;;;-1:-1:-1;;1989:4:85;28243:2:156;28239:15;28235:53;28222:11;;;28215:74;28305:12;;;28298:28;;;28342:12;;;;28335:28;;;2421:60:85;;;;;;;;;;28379:12:156;;;;2421:60:85;;;2411:71;;;;;1920:7;;1946:49;2245:293;12919:206:31;13013:17;:40;;-1:-1:-1;;;;;;13013:40:31;-1:-1:-1;;;;;13013:40:31;;;;;;;;13068:50;;;;-1:-1:-1;;13068:50:31;12919:206;:::o;2943:441:27:-;3077:14;;-1:-1:-1;;;;;3077:14:27;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:27;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:27;;26605:2:156;3048:197:27;;;26587:21:156;26644:2;26624:18;;;26617:30;26683:34;26663:18;;;26656:62;26754:34;26734:18;;;26727:62;-1:-1:-1;;;26805:19:156;;;26798:38;26853:19;;3048:197:27;26403:475:156;3048:197:27;3255:7;:26;;;3296:36;;801:25:156;;;3303:10:27;;3296:36;;789:2:156;774:18;3296:36:27;;;;;;;3342:35;3361:15;3342:18;:35::i;:::-;2943:441;;:::o;1081:552:85:-;1198:7;1217:12;1272:6;1247:21;:31;;1239:73;;;;-1:-1:-1;;;1239:73:85;;27085:2:156;1239:73:85;;;27067:21:156;27124:2;27104:18;;;27097:30;27163:31;27143:18;;;27136:59;27212:18;;1239:73:85;26883:353:156;1239:73:85;1330:15;;1322:65;;;;-1:-1:-1;;;1322:65:85;;27443:2:156;1322:65:85;;;27425:21:156;;;27462:18;;;27455:30;27521:34;27501:18;;;27494:62;27573:18;;1322:65:85;27241:356:156;1322:65:85;1525:4;1514:8;1508:15;1501:4;1491:8;1487:19;1479:6;1471:59;1463:67;-1:-1:-1;;;;;;1557:18:85;;1549:56;;;;-1:-1:-1;;;1549:56:85;;27804:2:156;1549:56:85;;;27786:21:156;27843:2;27823:18;;;27816:30;27882:27;27862:18;;;27855:55;27927:18;;1549:56:85;27602:349:156;1549:56:85;1622:4;1081:552;-1:-1:-1;;;;1081:552:85:o;14:180:156:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:156;;14:180;-1:-1:-1;14:180:156:o;199:131::-;-1:-1:-1;;;;;274:31:156;;264:42;;254:70;;320:1;317;310:12;335:315;403:6;411;464:2;452:9;443:7;439:23;435:32;432:52;;;480:1;477;470:12;432:52;519:9;506:23;538:31;563:5;538:31;:::i;:::-;588:5;640:2;625:18;;;;612:32;;-1:-1:-1;;;335:315:156:o;837:271::-;920:6;973:2;961:9;952:7;948:23;944:32;941:52;;;989:1;986;979:12;941:52;1028:9;1015:23;1047:31;1072:5;1047:31;:::i;1338:456::-;1415:6;1423;1431;1484:2;1472:9;1463:7;1459:23;1455:32;1452:52;;;1500:1;1497;1490:12;1452:52;1539:9;1526:23;1558:31;1583:5;1558:31;:::i;:::-;1608:5;-1:-1:-1;1665:2:156;1650:18;;1637:32;1678:33;1637:32;1678:33;:::i;:::-;1338:456;;1730:7;;-1:-1:-1;;;1784:2:156;1769:18;;;;1756:32;;1338:456::o;2237:284::-;2295:6;2348:2;2336:9;2327:7;2323:23;2319:32;2316:52;;;2364:1;2361;2354:12;2316:52;2403:9;2390:23;2453:18;2446:5;2442:30;2435:5;2432:41;2422:69;;2487:1;2484;2477:12;2526:269;2583:6;2636:2;2624:9;2615:7;2611:23;2607:32;2604:52;;;2652:1;2649;2642:12;2604:52;2691:9;2678:23;2741:4;2734:5;2730:16;2723:5;2720:27;2710:55;;2761:1;2758;2751:12;4321:347;4372:8;4382:6;4436:3;4429:4;4421:6;4417:17;4413:27;4403:55;;4454:1;4451;4444:12;4403:55;-1:-1:-1;4477:20:156;;4520:18;4509:30;;4506:50;;;4552:1;4549;4542:12;4506:50;4589:4;4581:6;4577:17;4565:29;;4641:3;4634:4;4625:6;4617;4613:19;4609:30;4606:39;4603:59;;;4658:1;4655;4648:12;4603:59;4321:347;;;;;:::o;4673:785::-;4772:6;4780;4788;4796;4804;4857:2;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4913:9;4900:23;4942:18;4983:2;4975:6;4972:14;4969:34;;;4999:1;4996;4989:12;4969:34;5038:58;5088:7;5079:6;5068:9;5064:22;5038:58;:::i;:::-;5115:8;;-1:-1:-1;5012:84:156;-1:-1:-1;5203:2:156;5188:18;;5175:32;;-1:-1:-1;5219:16:156;;;5216:36;;;5248:1;5245;5238:12;5216:36;;5287:60;5339:7;5328:8;5317:9;5313:24;5287:60;:::i;:::-;4673:785;;;;-1:-1:-1;5366:8:156;5448:2;5433:18;5420:32;;4673:785;-1:-1:-1;;;;4673:785:156:o;6929:718::-;7075:6;7083;7091;7099;7107;7160:3;7148:9;7139:7;7135:23;7131:33;7128:53;;;7177:1;7174;7167:12;7128:53;7213:9;7200:23;7190:33;;7273:2;7262:9;7258:18;7245:32;7286:31;7311:5;7286:31;:::i;:::-;7336:5;-1:-1:-1;7393:2:156;7378:18;;7365:32;7406:33;7365:32;7406:33;:::i;:::-;7458:7;-1:-1:-1;7517:2:156;7502:18;;7489:32;7530:33;7489:32;7530:33;:::i;:::-;6929:718;;;;-1:-1:-1;6929:718:156;;7636:3;7621:19;7608:33;;6929:718;-1:-1:-1;;6929:718:156:o;7887:251::-;7957:6;8010:2;7998:9;7989:7;7985:23;7981:32;7978:52;;;8026:1;8023;8016:12;7978:52;8058:9;8052:16;8077:31;8102:5;8077:31;:::i;8143:406::-;8345:2;8327:21;;;8384:2;8364:18;;;8357:30;8423:34;8418:2;8403:18;;8396:62;-1:-1:-1;;;8489:2:156;8474:18;;8467:40;8539:3;8524:19;;8143:406::o;8554:428::-;8756:2;8738:21;;;8795:2;8775:18;;;8768:30;;;8834:34;8814:18;;;8807:62;8905:34;8900:2;8885:18;;8878:62;8972:3;8957:19;;8554:428::o;9835:127::-;9896:10;9891:3;9887:20;9884:1;9877:31;9927:4;9924:1;9917:15;9951:4;9948:1;9941:15;9967:112;9999:1;10025;10015:35;;10030:18;;:::i;:::-;-1:-1:-1;10064:9:156;;9967:112::o;10514:127::-;10575:10;10570:3;10566:20;10563:1;10556:31;10606:4;10603:1;10596:15;10630:4;10627:1;10620:15;10646:265;10685:3;10713:9;;;10738:10;;-1:-1:-1;;;;;10757:27:156;;;10750:35;;10734:52;10731:78;;;10789:18;;:::i;:::-;-1:-1:-1;;;10836:19:156;;;10829:27;;10821:36;;10818:62;;;10860:18;;:::i;:::-;-1:-1:-1;;10896:9:156;;10646:265::o;10916:277::-;10983:6;11036:2;11024:9;11015:7;11011:23;11007:32;11004:52;;;11052:1;11049;11042:12;11004:52;11084:9;11078:16;11137:5;11130:13;11123:21;11116:5;11113:32;11103:60;;11159:1;11156;11149:12;11198:404;11400:2;11382:21;;;11439:2;11419:18;;;11412:30;11478:34;11473:2;11458:18;;11451:62;-1:-1:-1;;;11544:2:156;11529:18;;11522:38;11592:3;11577:19;;11198:404::o;13952:136::-;13987:3;-1:-1:-1;;;14008:22:156;;14005:48;;;14033:18;;:::i;:::-;-1:-1:-1;14073:1:156;14069:13;;13952:136::o;14093:125::-;14133:4;14161:1;14158;14155:8;14152:34;;;14166:18;;:::i;:::-;-1:-1:-1;14203:9:156;;14093:125::o;16253:266::-;16341:6;16336:3;16329:19;16393:6;16386:5;16379:4;16374:3;16370:14;16357:43;-1:-1:-1;16445:1:156;16420:16;;;16438:4;16416:27;;;16409:38;;;;16501:2;16480:15;;;-1:-1:-1;;16476:29:156;16467:39;;;16463:50;;16253:266::o;16524:502::-;16765:2;16754:9;16747:21;16728:4;16791:61;16848:2;16837:9;16833:18;16825:6;16817;16791:61;:::i;:::-;16900:9;16892:6;16888:22;16883:2;16872:9;16868:18;16861:50;16928:49;16970:6;16962;16954;16928:49;:::i;:::-;16920:57;;;17013:6;17008:2;16997:9;16993:18;16986:34;16524:502;;;;;;;;:::o;17434:336::-;17475:3;17513:5;17507:12;17537:1;17547:128;17561:6;17558:1;17555:13;17547:128;;;17658:4;17643:13;;;17639:24;;17633:31;17620:11;;;17613:52;17576:12;17547:128;;;17693:6;17690:1;17687:13;17684:48;;;17728:1;17719:6;17714:3;17710:16;17703:27;17684:48;-1:-1:-1;17748:16:156;;;;;17434:336;-1:-1:-1;;17434:336:156:o;17775:261::-;17950:3;17975:55;18000:29;18025:3;18017:6;18000:29;:::i;:::-;17992:6;17975:55;:::i;18898:267::-;18937:4;18966:9;;;18991:10;;-1:-1:-1;;;19010:19:156;;19003:27;;18987:44;18984:70;;;19034:18;;:::i;:::-;-1:-1:-1;;;;;19081:27:156;;19074:35;;19066:44;;19063:70;;;19113:18;;:::i;:::-;-1:-1:-1;;19150:9:156;;18898:267::o;20917:112::-;20948:1;20974;20964:35;;20979:18;;:::i;:::-;-1:-1:-1;21013:10:156;;20917:112::o;22137:184::-;22207:6;22260:2;22248:9;22239:7;22235:23;22231:32;22228:52;;;22276:1;22273;22266:12;22228:52;-1:-1:-1;22299:16:156;;22137:184;-1:-1:-1;22137:184:156:o;25716:128::-;25756:3;25787:1;25783:6;25780:1;25777:13;25774:39;;;25793:18;;:::i;:::-;-1:-1:-1;25829:9:156;;25716:128::o;26263:135::-;26302:3;-1:-1:-1;;26323:17:156;;26320:43;;;26343:18;;:::i;:::-;-1:-1:-1;26390:1:156;26379:13;;26263:135::o",
    "linkReferences": {},
    "immutableReferences": {
      "14074": [
        {
          "start": 1098,
          "length": 32
        }
      ],
      "14078": [
        {
          "start": 688,
          "length": 32
        },
        {
          "start": 5218,
          "length": 32
        },
        {
          "start": 8695,
          "length": 32
        }
      ],
      "14082": [
        {
          "start": 796,
          "length": 32
        }
      ],
      "14086": [
        {
          "start": 1400,
          "length": 32
        }
      ],
      "14090": [
        {
          "start": 1666,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 3082,
          "length": 32
        },
        {
          "start": 5347,
          "length": 32
        },
        {
          "start": 6520,
          "length": 32
        },
        {
          "start": 6760,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addShares(address,uint256)": "0e81073c",
    "beaconChainETHStrategy()": "9104c319",
    "beaconChainOracle()": "c052bd61",
    "createPod()": "84d81062",
    "delegationManager()": "ea4d3c9b",
    "denebForkTimestamp()": "44e71c80",
    "eigenPodBeacon()": "292b7b2b",
    "ethPOS()": "74cdd798",
    "getBlockRootAtTimestamp(uint64)": "d1c64cc9",
    "getPod(address)": "a38406a3",
    "hasPod(address)": "f6848d24",
    "initialize(uint256,address,address,address,uint256)": "daf12cd4",
    "maxPods()": "c0ccbf10",
    "numPods()": "a6a509be",
    "owner()": "8da5cb5b",
    "ownerToPod(address)": "9ba06275",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "podOwnerShares(address)": "60f4062b",
    "recordBeaconChainETHBalanceUpdate(address,int256)": "c2c51c40",
    "removeShares(address,uint256)": "beffbb89",
    "renounceOwnership()": "715018a6",
    "setDenebForkTimestamp(uint64)": "463db038",
    "setMaxPods(uint256)": "0cf2686d",
    "setPauserRegistry(address)": "10d67a2f",
    "slasher()": "b1344271",
    "stake(bytes,bytes,bytes32)": "9b4e4634",
    "strategyManager()": "39b70e38",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateBeaconChainOracle(address)": "c1de3aef",
    "withdrawSharesAsTokens(address,address,uint256)": "387b1300"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IETHPOSDeposit\",\"name\":\"_ethPOS\",\"type\":\"address\"},{\"internalType\":\"contract IBeacon\",\"name\":\"_eigenPodBeacon\",\"type\":\"address\"},{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BeaconChainETHDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"BeaconChainETHWithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"BeaconOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newValue\",\"type\":\"uint64\"}],\"name\":\"DenebForkTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MaxPodsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eigenPod\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"PodDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"PodSharesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainOracle\",\"outputs\":[{\"internalType\":\"contract IBeaconChainOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPod\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationManager\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denebForkTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodBeacon\",\"outputs\":[{\"internalType\":\"contract IBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPOS\",\"outputs\":[{\"internalType\":\"contract IETHPOSDeposit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"getBlockRootAtTimestamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"getPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"hasPod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPods\",\"type\":\"uint256\"},{\"internalType\":\"contract IBeaconChainOracle\",\"name\":\"_beaconChainOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"podOwnerShares\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"recordBeaconChainETHBalanceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newDenebForkTimestamp\",\"type\":\"uint64\"}],\"name\":\"setDenebForkTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxPods\",\"type\":\"uint256\"}],\"name\":\"setMaxPods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBeaconChainOracle\",\"name\":\"newBeaconChainOracle\",\"type\":\"address\"}],\"name\":\"updateBeaconChainOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"addShares(address,uint256)\":{\"details\":\"Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)Reverts if `shares` is not a whole Gwei amount\"},\"createPod()\":{\"details\":\"Function will revert if the `msg.sender` already has an EigenPod.Returns EigenPod address \"},\"denebForkTimestamp()\":{\"details\":\"This allows restricting the storage variable to be set once and only once.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"details\":\"Callable only by the podOwner's EigenPod contract.Reverts if `sharesDelta` is not a whole Gwei amount\",\"params\":{\"podOwner\":\"is the pod owner whose balance is being updated.\",\"sharesDelta\":\"is the change in podOwner's beaconChainETHStrategy shares\"}},\"removeShares(address,uint256)\":{\"details\":\"This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to result in the `podOwner` incurring a \\\"share deficit\\\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive shares from the operator to whom the staker is delegated.Reverts if `shares` is not a whole Gwei amountThe delegation manager validates that the podOwner is not address(0)\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDenebForkTimestamp(uint64)\":{\"params\":{\"newDenebForkTimestamp\":\"is the new timestamp of the Deneb fork\"}},\"setMaxPods(uint256)\":{\"details\":\"Callable by the unpauser of this contract\",\"params\":{\"newMaxPods\":\"The new maximum number of pods that can be deployed\"}},\"stake(bytes,bytes,bytes32)\":{\"params\":{\"depositDataRoot\":\"The root/hash of the deposit data for the validator's deposit.\",\"pubkey\":\"The 48 bytes public key of the beacon chain validator.\",\"signature\":\"The validator's signature of the deposit data.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateBeaconChainOracle(address)\":{\"details\":\"Callable only by the owner of this contract (i.e. governance)\",\"params\":{\"newBeaconChainOracle\":\"is the new oracle contract being pointed to\"}},\"withdrawSharesAsTokens(address,address,uint256)\":{\"details\":\"Prioritizes decreasing the podOwner's share deficit, if they have oneReverts if `shares` is not a whole Gwei amountThis function assumes that `removeShares` has already been called by the delegationManager, hence why      we do not need to update the podOwnerShares if `currentPodOwnerShares` is positive\"}},\"title\":\"The contract used for creating and managing EigenPods\",\"version\":1},\"userdoc\":{\"events\":{\"BeaconChainETHDeposited(address,uint256)\":{\"notice\":\"Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager\"},\"BeaconChainETHWithdrawalCompleted(address,uint256,uint96,address,address,bytes32)\":{\"notice\":\"Emitted when a withdrawal of beacon chain ETH is completed\"},\"BeaconOracleUpdated(address)\":{\"notice\":\"Emitted to notify the update of the beaconChainOracle address\"},\"MaxPodsUpdated(uint256,uint256)\":{\"notice\":\"Emitted when `maxPods` value is updated from `previousValue` to `newValue`\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"PodDeployed(address,address)\":{\"notice\":\"Emitted to notify the deployment of an EigenPod\"},\"PodSharesUpdated(address,int256)\":{\"notice\":\"Emitted when the balance of an EigenPod is updated\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,uint256)\":{\"notice\":\"Increases the `podOwner`'s shares by `shares`, paying off deficit if possible. Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"beaconChainOracle()\":{\"notice\":\"Oracle contract that provides updates to the beacon chain's state\"},\"createPod()\":{\"notice\":\"Creates an EigenPod for the sender.\"},\"delegationManager()\":{\"notice\":\"EigenLayer's DelegationManager contract\"},\"denebForkTimestamp()\":{\"notice\":\"Wrapper around the `_denebForkTimestamp` storage variable that returns type(uint64).max if the storage variable is unset.\"},\"eigenPodBeacon()\":{\"notice\":\"Beacon proxy to which the EigenPods point\"},\"ethPOS()\":{\"notice\":\"The ETH2 Deposit Contract\"},\"getBlockRootAtTimestamp(uint64)\":{\"notice\":\"Returns the Beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized.\"},\"getPod(address)\":{\"notice\":\"Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not).\"},\"hasPod(address)\":{\"notice\":\"Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise.\"},\"maxPods()\":{\"notice\":\"The maximum number of EigenPods that can be deployed\"},\"numPods()\":{\"notice\":\"The number of EigenPods that have been deployed\"},\"ownerToPod(address)\":{\"notice\":\"Pod owner to deployed EigenPod address\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"podOwnerShares(address)\":{\"notice\":\"Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\"},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"notice\":\"Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager to ensure that delegated shares are also tracked correctly\"},\"removeShares(address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue. Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\"},\"setDenebForkTimestamp(uint64)\":{\"notice\":\"Sets the timestamp of the Deneb fork.\"},\"setMaxPods(uint256)\":{\"notice\":\"Sets the maximum number of pods that can be deployed\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"slasher()\":{\"notice\":\"EigenLayer's Slasher contract\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Stakes for a new beacon chain validator on the sender's EigenPod. Also creates an EigenPod for the sender if they don't have one already.\"},\"strategyManager()\":{\"notice\":\"EigenLayer's StrategyManager contract\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateBeaconChainOracle(address)\":{\"notice\":\"Updates the oracle contract that provides the beacon chain state root\"},\"withdrawSharesAsTokens(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThe main functionalities are: - creating EigenPods - staking for new validators on EigenPods - keeping track of the restaked balances of all EigenPod owners - withdrawing eth when withdrawals are completed\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/pods/EigenPodManager.sol\":\"EigenPodManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff\",\"dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt\"]},\"lib/eigenlayer-contracts/src/contracts/pods/EigenPodManager.sol\":{\"keccak256\":\"0xd8180c8e338a07b6203e18b9376e80751556935ce0b75fa2a8c40cb2fa9bd376\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6c0bce93a050282a67e5c9b6265e3949cf0aacaec34dc88ca1ef924c13f18b9e\",\"dweb:/ipfs/QmQhqR4SetS4YS6AqeWqx8WBHjB2KVJHxR3D1RUz6oVDm2\"]},\"lib/eigenlayer-contracts/src/contracts/pods/EigenPodManagerStorage.sol\":{\"keccak256\":\"0x295dda6bf8a47824bc90c92fd9b42ea108283364f6b7e23acce7f8037385b2bc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a9ea5be65d1c5101eb092b73c23ad83a9998db4e78e4024bf54b96495a68790\",\"dweb:/ipfs/QmU6VrqJg6jmkThF8Y1etcy5tWAR8aTHq49iB412tUmzvs\"]},\"lib/eigenlayer-contracts/src/contracts/pods/EigenPodPausingConstants.sol\":{\"keccak256\":\"0x6f0520e59145fb727d3ab5d02e4bda102d880092611d78cb992ad579ffb47a5e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5933839384ac86f70a1c78ecc670ef59ba23ea1bc0181e00037b0867cf94c649\",\"dweb:/ipfs/Qmf7zT2VmHL4hLWgCojsVoejhR3r2wN5cEb8Fssv934wVV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0x62237e1773cbf99739b7019f3772a2ff5360d56edb69751b513237f5fcd78571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39caaa49151a341d9c258a5b7308856d11c8cf349062314eea1e2251f0d1918\",\"dweb:/ipfs/QmcJqGdrHEdiBfB5zuA3ykY1wc2LDNtz8Y88HPEscJe71G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IETHPOSDeposit",
              "name": "_ethPOS",
              "type": "address"
            },
            {
              "internalType": "contract IBeacon",
              "name": "_eigenPodBeacon",
              "type": "address"
            },
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract ISlasher",
              "name": "_slasher",
              "type": "address"
            },
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegationManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BeaconChainETHDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "nonce",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BeaconChainETHWithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOracleAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconOracleUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "newValue",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DenebForkTimestampUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxPodsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "eigenPod",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PodDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "sharesDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PodSharesUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainOracle",
          "outputs": [
            {
              "internalType": "contract IBeaconChainOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPod",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationManager",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "denebForkTimestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodBeacon",
          "outputs": [
            {
              "internalType": "contract IBeacon",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethPOS",
          "outputs": [
            {
              "internalType": "contract IETHPOSDeposit",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBlockRootAtTimestamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPod",
          "outputs": [
            {
              "internalType": "contract IEigenPod",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPod",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxPods",
              "type": "uint256"
            },
            {
              "internalType": "contract IBeaconChainOracle",
              "name": "_beaconChainOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_initPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPods",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numPods",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerToPod",
          "outputs": [
            {
              "internalType": "contract IEigenPod",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "podOwnerShares",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "sharesDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordBeaconChainETHBalanceUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeShares"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "newDenebForkTimestamp",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDenebForkTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMaxPods",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxPods"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubkey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "contract IBeaconChainOracle",
              "name": "newBeaconChainOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBeaconChainOracle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawSharesAsTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addShares(address,uint256)": {
            "details": "Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)Reverts if `shares` is not a whole Gwei amount"
          },
          "createPod()": {
            "details": "Function will revert if the `msg.sender` already has an EigenPod.Returns EigenPod address "
          },
          "denebForkTimestamp()": {
            "details": "This allows restricting the storage variable to be set once and only once."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "recordBeaconChainETHBalanceUpdate(address,int256)": {
            "details": "Callable only by the podOwner's EigenPod contract.Reverts if `sharesDelta` is not a whole Gwei amount",
            "params": {
              "podOwner": "is the pod owner whose balance is being updated.",
              "sharesDelta": "is the change in podOwner's beaconChainETHStrategy shares"
            }
          },
          "removeShares(address,uint256)": {
            "details": "This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive shares from the operator to whom the staker is delegated.Reverts if `shares` is not a whole Gwei amountThe delegation manager validates that the podOwner is not address(0)"
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setDenebForkTimestamp(uint64)": {
            "params": {
              "newDenebForkTimestamp": "is the new timestamp of the Deneb fork"
            }
          },
          "setMaxPods(uint256)": {
            "details": "Callable by the unpauser of this contract",
            "params": {
              "newMaxPods": "The new maximum number of pods that can be deployed"
            }
          },
          "stake(bytes,bytes,bytes32)": {
            "params": {
              "depositDataRoot": "The root/hash of the deposit data for the validator's deposit.",
              "pubkey": "The 48 bytes public key of the beacon chain validator.",
              "signature": "The validator's signature of the deposit data."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateBeaconChainOracle(address)": {
            "details": "Callable only by the owner of this contract (i.e. governance)",
            "params": {
              "newBeaconChainOracle": "is the new oracle contract being pointed to"
            }
          },
          "withdrawSharesAsTokens(address,address,uint256)": {
            "details": "Prioritizes decreasing the podOwner's share deficit, if they have oneReverts if `shares` is not a whole Gwei amountThis function assumes that `removeShares` has already been called by the delegationManager, hence why      we do not need to update the podOwnerShares if `currentPodOwnerShares` is positive"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addShares(address,uint256)": {
            "notice": "Increases the `podOwner`'s shares by `shares`, paying off deficit if possible. Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "beaconChainOracle()": {
            "notice": "Oracle contract that provides updates to the beacon chain's state"
          },
          "createPod()": {
            "notice": "Creates an EigenPod for the sender."
          },
          "delegationManager()": {
            "notice": "EigenLayer's DelegationManager contract"
          },
          "denebForkTimestamp()": {
            "notice": "Wrapper around the `_denebForkTimestamp` storage variable that returns type(uint64).max if the storage variable is unset."
          },
          "eigenPodBeacon()": {
            "notice": "Beacon proxy to which the EigenPods point"
          },
          "ethPOS()": {
            "notice": "The ETH2 Deposit Contract"
          },
          "getBlockRootAtTimestamp(uint64)": {
            "notice": "Returns the Beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized."
          },
          "getPod(address)": {
            "notice": "Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not)."
          },
          "hasPod(address)": {
            "notice": "Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise."
          },
          "maxPods()": {
            "notice": "The maximum number of EigenPods that can be deployed"
          },
          "numPods()": {
            "notice": "The number of EigenPods that have been deployed"
          },
          "ownerToPod(address)": {
            "notice": "Pod owner to deployed EigenPod address"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "podOwnerShares(address)": {
            "notice": "Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy."
          },
          "recordBeaconChainETHBalanceUpdate(address,int256)": {
            "notice": "Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager to ensure that delegated shares are also tracked correctly"
          },
          "removeShares(address,uint256)": {
            "notice": "Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue. Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero."
          },
          "setDenebForkTimestamp(uint64)": {
            "notice": "Sets the timestamp of the Deneb fork."
          },
          "setMaxPods(uint256)": {
            "notice": "Sets the maximum number of pods that can be deployed"
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "slasher()": {
            "notice": "EigenLayer's Slasher contract"
          },
          "stake(bytes,bytes,bytes32)": {
            "notice": "Stakes for a new beacon chain validator on the sender's EigenPod. Also creates an EigenPod for the sender if they don't have one already."
          },
          "strategyManager()": {
            "notice": "EigenLayer's StrategyManager contract"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateBeaconChainOracle(address)": {
            "notice": "Updates the oracle contract that provides the beacon chain state root"
          },
          "withdrawSharesAsTokens(address,address,uint256)": {
            "notice": "Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/pods/EigenPodManager.sol": "EigenPodManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xc543d34b3e0fd116227fc5218286de6b30a9141f47df2e8cc17d857d2c0cb338",
        "urls": [
          "bzz-raw://e78ca3c3c9f14ccde852ea41bc411726ea7770a1cf2ef18851e67bcdf7522cff",
          "dweb:/ipfs/QmWagcWsaNZqBZhdEHhZ4PcU9fx5wQnrbjoaaFvjEwgGHt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/pods/EigenPodManager.sol": {
        "keccak256": "0xd8180c8e338a07b6203e18b9376e80751556935ce0b75fa2a8c40cb2fa9bd376",
        "urls": [
          "bzz-raw://6c0bce93a050282a67e5c9b6265e3949cf0aacaec34dc88ca1ef924c13f18b9e",
          "dweb:/ipfs/QmQhqR4SetS4YS6AqeWqx8WBHjB2KVJHxR3D1RUz6oVDm2"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/pods/EigenPodManagerStorage.sol": {
        "keccak256": "0x295dda6bf8a47824bc90c92fd9b42ea108283364f6b7e23acce7f8037385b2bc",
        "urls": [
          "bzz-raw://6a9ea5be65d1c5101eb092b73c23ad83a9998db4e78e4024bf54b96495a68790",
          "dweb:/ipfs/QmU6VrqJg6jmkThF8Y1etcy5tWAR8aTHq49iB412tUmzvs"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/pods/EigenPodPausingConstants.sol": {
        "keccak256": "0x6f0520e59145fb727d3ab5d02e4bda102d880092611d78cb992ad579ffb47a5e",
        "urls": [
          "bzz-raw://5933839384ac86f70a1c78ecc670ef59ba23ea1bc0181e00037b0867cf94c649",
          "dweb:/ipfs/Qmf7zT2VmHL4hLWgCojsVoejhR3r2wN5cEb8Fssv934wVV"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0x62237e1773cbf99739b7019f3772a2ff5360d56edb69751b513237f5fcd78571",
        "urls": [
          "bzz-raw://f39caaa49151a341d9c258a5b7308856d11c8cf349062314eea1e2251f0d1918",
          "dweb:/ipfs/QmcJqGdrHEdiBfB5zuA3ykY1wc2LDNtz8Y88HPEscJe71G"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/pods/EigenPodManager.sol",
    "id": 14060,
    "exportedSymbols": {
      "AddressUpgradeable": [
        57600
      ],
      "BeaconChainProofs": [
        9143
      ],
      "ContextUpgradeable": [
        57642
      ],
      "Create2": [
        60569
      ],
      "EigenPodManager": [
        14059
      ],
      "EigenPodManagerStorage": [
        14172
      ],
      "EigenPodPausingConstants": [
        14200
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Initializable": [
        57298
      ],
      "Merkle": [
        9899
      ],
      "OwnableUpgradeable": [
        57147
      ],
      "Pausable": [
        10782
      ],
      "ReentrancyGuardUpgradeable": [
        57357
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:16542:31",
    "nodes": [
      {
        "id": 13164,
        "nodeType": "PragmaDirective",
        "src": "37:24:31",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 13165,
        "nodeType": "ImportDirective",
        "src": "63:51:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 60570,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13166,
        "nodeType": "ImportDirective",
        "src": "115:72:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 57299,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13167,
        "nodeType": "ImportDirective",
        "src": "188:72:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 57148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13168,
        "nodeType": "ImportDirective",
        "src": "261:82:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 57358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13169,
        "nodeType": "ImportDirective",
        "src": "345:46:31",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol",
        "file": "../interfaces/IBeaconChainOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 6463,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13170,
        "nodeType": "ImportDirective",
        "src": "393:37:31",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 10783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13171,
        "nodeType": "ImportDirective",
        "src": "431:40:31",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/pods/EigenPodPausingConstants.sol",
        "file": "./EigenPodPausingConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 14201,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13172,
        "nodeType": "ImportDirective",
        "src": "472:38:31",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/pods/EigenPodManagerStorage.sol",
        "file": "./EigenPodManagerStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14060,
        "sourceUnit": 14173,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14059,
        "nodeType": "ContractDefinition",
        "src": "923:15656:31",
        "nodes": [
          {
            "id": 13204,
            "nodeType": "ModifierDefinition",
            "src": "1108:163:31",
            "nodes": [],
            "body": {
              "id": 13203,
              "nodeType": "Block",
              "src": "1148:123:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 13192,
                                "name": "ownerToPod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14114,
                                "src": "1174:10:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                                  "typeString": "mapping(address => contract IEigenPod)"
                                }
                              },
                              "id": 13194,
                              "indexExpression": {
                                "id": 13193,
                                "name": "podOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13187,
                                "src": "1185:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1174:20:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEigenPod_$7443",
                                "typeString": "contract IEigenPod"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEigenPod_$7443",
                                "typeString": "contract IEigenPod"
                              }
                            ],
                            "id": 13191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1166:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1166:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:29:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 13196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1199:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1199:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1166:43:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e6f6e6c79456967656e506f643a206e6f74206120706f64",
                        "id": 13199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:41:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c758ca09ebf1102f6deea0e21bd420c68333df6b22b9bbb957c057bc72239d96",
                          "typeString": "literal_string \"EigenPodManager.onlyEigenPod: not a pod\""
                        },
                        "value": "EigenPodManager.onlyEigenPod: not a pod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c758ca09ebf1102f6deea0e21bd420c68333df6b22b9bbb957c057bc72239d96",
                          "typeString": "literal_string \"EigenPodManager.onlyEigenPod: not a pod\""
                        }
                      ],
                      "id": 13189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1158:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:95:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13201,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:95:31"
                },
                {
                  "id": 13202,
                  "nodeType": "PlaceholderStatement",
                  "src": "1263:1:31"
                }
              ]
            },
            "name": "onlyEigenPod",
            "nameLocation": "1117:12:31",
            "parameters": {
              "id": 13188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13187,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "1138:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13204,
                  "src": "1130:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1129:18:31"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13219,
            "nodeType": "ModifierDefinition",
            "src": "1277:212:31",
            "nodes": [],
            "body": {
              "id": 13218,
              "nodeType": "Block",
              "src": "1310:179:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1341:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1341:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 13211,
                              "name": "delegationManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14090,
                              "src": "1363:17:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                "typeString": "contract IDelegationManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                "typeString": "contract IDelegationManager"
                              }
                            ],
                            "id": 13210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1355:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13209,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1355:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1355:26:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1341:40:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e6f6e6c7944656c65676174696f6e4d616e616765723a206e6f74207468652044656c65676174696f6e4d616e61676572",
                        "id": 13214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1395:66:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1bd427f997a6024842ab8b176c888846b13d4cce514b5dd08686a1a18d0ced52",
                          "typeString": "literal_string \"EigenPodManager.onlyDelegationManager: not the DelegationManager\""
                        },
                        "value": "EigenPodManager.onlyDelegationManager: not the DelegationManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1bd427f997a6024842ab8b176c888846b13d4cce514b5dd08686a1a18d0ced52",
                          "typeString": "literal_string \"EigenPodManager.onlyDelegationManager: not the DelegationManager\""
                        }
                      ],
                      "id": 13206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1320:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:151:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13216,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:151:31"
                },
                {
                  "id": 13217,
                  "nodeType": "PlaceholderStatement",
                  "src": "1481:1:31"
                }
              ]
            },
            "name": "onlyDelegationManager",
            "nameLocation": "1286:21:31",
            "parameters": {
              "id": 13205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1307:2:31"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13248,
            "nodeType": "FunctionDefinition",
            "src": "1495:336:31",
            "nodes": [],
            "body": {
              "id": 13247,
              "nodeType": "Block",
              "src": "1792:39:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13244,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57297,
                      "src": "1802:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13246,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:22:31"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13237,
                    "name": "_ethPOS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13222,
                    "src": "1718:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IETHPOSDeposit_$7143",
                      "typeString": "contract IETHPOSDeposit"
                    }
                  },
                  {
                    "id": 13238,
                    "name": "_eigenPodBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13225,
                    "src": "1727:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeacon_$58703",
                      "typeString": "contract IBeacon"
                    }
                  },
                  {
                    "id": 13239,
                    "name": "_strategyManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13228,
                    "src": "1744:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  {
                    "id": 13240,
                    "name": "_slasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13231,
                    "src": "1762:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  {
                    "id": 13241,
                    "name": "_delegationManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13234,
                    "src": "1772:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  }
                ],
                "id": 13242,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13236,
                  "name": "EigenPodManagerStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14172,
                  "src": "1695:22:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1695:96:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13222,
                  "mutability": "mutable",
                  "name": "_ethPOS",
                  "nameLocation": "1531:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13248,
                  "src": "1516:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IETHPOSDeposit_$7143",
                    "typeString": "contract IETHPOSDeposit"
                  },
                  "typeName": {
                    "id": 13221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13220,
                      "name": "IETHPOSDeposit",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7143,
                      "src": "1516:14:31"
                    },
                    "referencedDeclaration": 7143,
                    "src": "1516:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IETHPOSDeposit_$7143",
                      "typeString": "contract IETHPOSDeposit"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13225,
                  "mutability": "mutable",
                  "name": "_eigenPodBeacon",
                  "nameLocation": "1556:15:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13248,
                  "src": "1548:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeacon_$58703",
                    "typeString": "contract IBeacon"
                  },
                  "typeName": {
                    "id": 13224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13223,
                      "name": "IBeacon",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58703,
                      "src": "1548:7:31"
                    },
                    "referencedDeclaration": 58703,
                    "src": "1548:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeacon_$58703",
                      "typeString": "contract IBeacon"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13228,
                  "mutability": "mutable",
                  "name": "_strategyManager",
                  "nameLocation": "1598:16:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13248,
                  "src": "1581:33:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                    "typeString": "contract IStrategyManager"
                  },
                  "typeName": {
                    "id": 13227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13226,
                      "name": "IStrategyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8383,
                      "src": "1581:16:31"
                    },
                    "referencedDeclaration": 8383,
                    "src": "1581:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13231,
                  "mutability": "mutable",
                  "name": "_slasher",
                  "nameLocation": "1633:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13248,
                  "src": "1624:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$8033",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 13230,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13229,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8033,
                      "src": "1624:8:31"
                    },
                    "referencedDeclaration": 8033,
                    "src": "1624:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13234,
                  "mutability": "mutable",
                  "name": "_delegationManager",
                  "nameLocation": "1670:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13248,
                  "src": "1651:37:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 13233,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13232,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "1651:18:31"
                    },
                    "referencedDeclaration": 7102,
                    "src": "1651:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:188:31"
            },
            "returnParameters": {
              "id": 13243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13283,
            "nodeType": "FunctionDefinition",
            "src": "1837:423:31",
            "nodes": [],
            "body": {
              "id": 13282,
              "nodeType": "Block",
              "src": "2063:197:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13266,
                        "name": "_maxPods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13250,
                        "src": "2085:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13265,
                      "name": "_setMaxPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13883,
                      "src": "2073:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:21:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13268,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13270,
                        "name": "_beaconChainOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13253,
                        "src": "2129:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                          "typeString": "contract IBeaconChainOracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                          "typeString": "contract IBeaconChainOracle"
                        }
                      ],
                      "id": 13269,
                      "name": "_updateBeaconChainOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13867,
                      "src": "2104:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBeaconChainOracle_$6462_$returns$__$",
                        "typeString": "function (contract IBeaconChainOracle)"
                      }
                    },
                    "id": 13271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:44:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13272,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:44:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13274,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13255,
                        "src": "2177:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13273,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57141,
                      "src": "2158:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:32:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13276,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:32:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13278,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13258,
                        "src": "2218:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 13279,
                        "name": "_initPausedStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "2235:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13277,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10611,
                      "src": "2200:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7778_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 13280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:53:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13281,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:53:31"
                }
              ]
            },
            "functionSelector": "daf12cd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13262,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57218,
                  "src": "2051:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2051:11:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "1846:10:31",
            "parameters": {
              "id": 13261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13250,
                  "mutability": "mutable",
                  "name": "_maxPods",
                  "nameLocation": "1874:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13283,
                  "src": "1866:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13253,
                  "mutability": "mutable",
                  "name": "_beaconChainOracle",
                  "nameLocation": "1911:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13283,
                  "src": "1892:37:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                    "typeString": "contract IBeaconChainOracle"
                  },
                  "typeName": {
                    "id": 13252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13251,
                      "name": "IBeaconChainOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6462,
                      "src": "1892:18:31"
                    },
                    "referencedDeclaration": 6462,
                    "src": "1892:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13255,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1947:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13283,
                  "src": "1939:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13258,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "1985:15:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13283,
                  "src": "1969:31:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 13257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13256,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7778,
                      "src": "1969:15:31"
                    },
                    "referencedDeclaration": 7778,
                    "src": "1969:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7778",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13260,
                  "mutability": "mutable",
                  "name": "_initPausedStatus",
                  "nameLocation": "2018:17:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13283,
                  "src": "2010:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1856:185:31"
            },
            "returnParameters": {
              "id": 13264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2063:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13313,
            "nodeType": "FunctionDefinition",
            "src": "2449:319:31",
            "nodes": [],
            "body": {
              "id": 13312,
              "nodeType": "Block",
              "src": "2537:231:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2555:19:31",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13294,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2563:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 13295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2563:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13293,
                            "name": "hasPod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14005,
                            "src": "2556:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 13296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2556:18:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e637265617465506f643a2053656e64657220616c726561647920686173206120706f64",
                        "id": 13298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2576:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9010320d4384b6f1f3c57983ceb76763fbb008315cb8725f7e92135466130558",
                          "typeString": "literal_string \"EigenPodManager.createPod: Sender already has a pod\""
                        },
                        "value": "EigenPodManager.createPod: Sender already has a pod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9010320d4384b6f1f3c57983ceb76763fbb008315cb8725f7e92135466130558",
                          "typeString": "literal_string \"EigenPodManager.createPod: Sender already has a pod\""
                        }
                      ],
                      "id": 13292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2547:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:83:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13300,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:83:31"
                },
                {
                  "assignments": [
                    13303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13303,
                      "mutability": "mutable",
                      "name": "pod",
                      "nameLocation": "2713:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13312,
                      "src": "2703:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      },
                      "typeName": {
                        "id": 13302,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13301,
                          "name": "IEigenPod",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7443,
                          "src": "2703:9:31"
                        },
                        "referencedDeclaration": 7443,
                        "src": "2703:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13306,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13304,
                      "name": "_deployPod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13848,
                      "src": "2719:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_IEigenPod_$7443_$",
                        "typeString": "function () returns (contract IEigenPod)"
                      }
                    },
                    "id": 13305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2719:12:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2703:28:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13309,
                        "name": "pod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13303,
                        "src": "2757:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      ],
                      "id": 13308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2749:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 13307,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2749:7:31",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 13310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:12:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13291,
                  "id": 13311,
                  "nodeType": "Return",
                  "src": "2742:19:31"
                }
              ]
            },
            "baseFunctions": [
              7514
            ],
            "documentation": {
              "id": 13284,
              "nodeType": "StructuredDocumentation",
              "src": "2266:178:31",
              "text": " @notice Creates an EigenPod for the sender.\n @dev Function will revert if the `msg.sender` already has an EigenPod.\n @dev Returns EigenPod address "
            },
            "functionSelector": "84d81062",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13287,
                    "name": "PAUSED_NEW_EIGENPODS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14179,
                    "src": "2497:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 13288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13286,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "2479:17:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2479:39:31"
              }
            ],
            "name": "createPod",
            "nameLocation": "2458:9:31",
            "parameters": {
              "id": 13285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2467:2:31"
            },
            "returnParameters": {
              "id": 13291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13313,
                  "src": "2528:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:9:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13362,
            "nodeType": "FunctionDefinition",
            "src": "3190:456:31",
            "nodes": [],
            "body": {
              "id": 13361,
              "nodeType": "Block",
              "src": "3368:278:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13328,
                      "mutability": "mutable",
                      "name": "pod",
                      "nameLocation": "3388:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13361,
                      "src": "3378:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      },
                      "typeName": {
                        "id": 13327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13326,
                          "name": "IEigenPod",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7443,
                          "src": "3378:9:31"
                        },
                        "referencedDeclaration": 7443,
                        "src": "3378:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13333,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13329,
                      "name": "ownerToPod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14114,
                      "src": "3394:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                        "typeString": "mapping(address => contract IEigenPod)"
                      }
                    },
                    "id": 13332,
                    "indexExpression": {
                      "expression": {
                        "id": 13330,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3405:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3405:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3394:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3378:38:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 13336,
                          "name": "pod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13328,
                          "src": "3438:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        ],
                        "id": 13335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3430:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3430:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3430:12:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 13340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3454:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3446:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3446:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3446:10:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3430:26:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13349,
                  "nodeType": "IfStatement",
                  "src": "3426:141:31",
                  "trueBody": {
                    "id": 13348,
                    "nodeType": "Block",
                    "src": "3458:109:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 13346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13343,
                            "name": "pod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13328,
                            "src": "3538:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13344,
                              "name": "_deployPod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13848,
                              "src": "3544:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_IEigenPod_$7443_$",
                                "typeString": "function () returns (contract IEigenPod)"
                              }
                            },
                            "id": 13345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3544:12:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          },
                          "src": "3538:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        },
                        "id": 13347,
                        "nodeType": "ExpressionStatement",
                        "src": "3538:18:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13356,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13316,
                        "src": "3604:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 13357,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13318,
                        "src": "3612:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 13358,
                        "name": "depositDataRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13320,
                        "src": "3623:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 13350,
                          "name": "pod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13328,
                          "src": "3576:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        },
                        "id": 13352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7272,
                        "src": "3576:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes memory,bytes memory,bytes32) payable external"
                        }
                      },
                      "id": 13355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 13353,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3593:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3593:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3576:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$value",
                        "typeString": "function (bytes memory,bytes memory,bytes32) payable external"
                      }
                    },
                    "id": 13359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:63:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13360,
                  "nodeType": "ExpressionStatement",
                  "src": "3576:63:31"
                }
              ]
            },
            "baseFunctions": [
              7524
            ],
            "documentation": {
              "id": 13314,
              "nodeType": "StructuredDocumentation",
              "src": "2774:411:31",
              "text": " @notice Stakes for a new beacon chain validator on the sender's EigenPod.\n Also creates an EigenPod for the sender if they don't have one already.\n @param pubkey The 48 bytes public key of the beacon chain validator.\n @param signature The validator's signature of the deposit data.\n @param depositDataRoot The root/hash of the deposit data for the validator's deposit."
            },
            "functionSelector": "9b4e4634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13323,
                    "name": "PAUSED_NEW_EIGENPODS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14179,
                    "src": "3346:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 13324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13322,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10564,
                  "src": "3328:17:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "3328:39:31"
              }
            ],
            "name": "stake",
            "nameLocation": "3199:5:31",
            "parameters": {
              "id": 13321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13316,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "3229:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13362,
                  "src": "3214:21:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13315,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13318,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "3261:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13362,
                  "src": "3246:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13320,
                  "mutability": "mutable",
                  "name": "depositDataRoot",
                  "nameLocation": "3289:15:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13362,
                  "src": "3281:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:106:31"
            },
            "returnParameters": {
              "id": 13325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3368:0:31"
            },
            "scope": 14059,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13462,
            "nodeType": "FunctionDefinition",
            "src": "4126:1676:31",
            "nodes": [],
            "body": {
              "id": 13461,
              "nodeType": "Block",
              "src": "4274:1528:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13376,
                          "name": "podOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13365,
                          "src": "4292:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4312:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4304:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13377,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4304:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4304:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4292:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e7265636f7264426561636f6e436861696e45544842616c616e63655570646174653a20706f644f776e65722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 13382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4316:84:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8cb9398e6cc0c8f94814c5401b81bbde13321031ab6a3a1831fd1f2053be56e",
                          "typeString": "literal_string \"EigenPodManager.recordBeaconChainETHBalanceUpdate: podOwner cannot be zero address\""
                        },
                        "value": "EigenPodManager.recordBeaconChainETHBalanceUpdate: podOwner cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8cb9398e6cc0c8f94814c5401b81bbde13321031ab6a3a1831fd1f2053be56e",
                          "typeString": "literal_string \"EigenPodManager.recordBeaconChainETHBalanceUpdate: podOwner cannot be zero address\""
                        }
                      ],
                      "id": 13375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4284:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4284:117:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13384,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:117:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13386,
                            "name": "sharesDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13367,
                            "src": "4419:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 13389,
                                "name": "GWEI_TO_WEI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14097,
                                "src": "4440:11:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 13388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4433:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 13387,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4433:6:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4433:19:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "4419:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4456:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4419:38:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e7265636f7264426561636f6e436861696e45544842616c616e63655570646174653a2073686172657344656c7461206d75737420626520612077686f6c65204777656920616d6f756e74",
                        "id": 13394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4471:92:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f6631c6e9ec441dff8b989df6d3b7b91e4f2fe6e64be258a2e86f4c5c0eb10e",
                          "typeString": "literal_string \"EigenPodManager.recordBeaconChainETHBalanceUpdate: sharesDelta must be a whole Gwei amount\""
                        },
                        "value": "EigenPodManager.recordBeaconChainETHBalanceUpdate: sharesDelta must be a whole Gwei amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f6631c6e9ec441dff8b989df6d3b7b91e4f2fe6e64be258a2e86f4c5c0eb10e",
                          "typeString": "literal_string \"EigenPodManager.recordBeaconChainETHBalanceUpdate: sharesDelta must be a whole Gwei amount\""
                        }
                      ],
                      "id": 13385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4411:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:153:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13396,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:153:31"
                },
                {
                  "assignments": [
                    13398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13398,
                      "mutability": "mutable",
                      "name": "currentPodOwnerShares",
                      "nameLocation": "4581:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13461,
                      "src": "4574:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13397,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4574:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13402,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13399,
                      "name": "podOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14125,
                      "src": "4605:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                        "typeString": "mapping(address => int256)"
                      }
                    },
                    "id": 13401,
                    "indexExpression": {
                      "id": 13400,
                      "name": "podOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13365,
                      "src": "4620:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4605:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4574:55:31"
                },
                {
                  "assignments": [
                    13404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13404,
                      "mutability": "mutable",
                      "name": "updatedPodOwnerShares",
                      "nameLocation": "4646:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13461,
                      "src": "4639:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13403,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4639:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13408,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13405,
                      "name": "currentPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13398,
                      "src": "4670:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 13406,
                      "name": "sharesDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13367,
                      "src": "4694:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4670:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4639:66:31"
                },
                {
                  "expression": {
                    "id": 13413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13409,
                        "name": "podOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14125,
                        "src": "4715:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 13411,
                      "indexExpression": {
                        "id": 13410,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13365,
                        "src": "4730:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4715:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13412,
                      "name": "updatedPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13404,
                      "src": "4742:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4715:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13414,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:48:31"
                },
                {
                  "assignments": [
                    13416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13416,
                      "mutability": "mutable",
                      "name": "changeInDelegatableShares",
                      "nameLocation": "4858:25:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13461,
                      "src": "4851:32:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13415,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4851:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13421,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13418,
                        "name": "currentPodOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13398,
                        "src": "4950:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 13419,
                        "name": "updatedPodOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13404,
                        "src": "4998:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 13417,
                      "name": "_calculateChangeInDelegatableShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13925,
                      "src": "4886:35:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 13420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "sharesBefore",
                      "sharesAfter"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4886:144:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:179:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13422,
                      "name": "changeInDelegatableShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13416,
                      "src": "5144:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5173:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5144:30:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13455,
                  "nodeType": "IfStatement",
                  "src": "5140:602:31",
                  "trueBody": {
                    "id": 13454,
                    "nodeType": "Block",
                    "src": "5176:566:31",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13425,
                            "name": "changeInDelegatableShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13416,
                            "src": "5194:25:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5222:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5194:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 13452,
                          "nodeType": "Block",
                          "src": "5482:250:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 13444,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13365,
                                    "src": "5572:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 13445,
                                    "name": "beaconChainETHStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14104,
                                    "src": "5612:22:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 13448,
                                        "name": "changeInDelegatableShares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13416,
                                        "src": "5672:25:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 13447,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5664:7:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 13446,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5664:7:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5664:34:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 13441,
                                    "name": "delegationManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14090,
                                    "src": "5500:17:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                      "typeString": "contract IDelegationManager"
                                    }
                                  },
                                  "id": 13443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "increaseDelegatedShares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6877,
                                  "src": "5500:41:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,contract IStrategy,uint256) external"
                                  }
                                },
                                "id": 13450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [
                                  "staker",
                                  "strategy",
                                  "shares"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5500:217:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 13451,
                              "nodeType": "ExpressionStatement",
                              "src": "5500:217:31"
                            }
                          ]
                        },
                        "id": 13453,
                        "nodeType": "IfStatement",
                        "src": "5190:542:31",
                        "trueBody": {
                          "id": 13440,
                          "nodeType": "Block",
                          "src": "5225:251:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 13431,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13365,
                                    "src": "5315:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 13432,
                                    "name": "beaconChainETHStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14104,
                                    "src": "5355:22:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 13436,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "-",
                                        "prefix": true,
                                        "src": "5415:26:31",
                                        "subExpression": {
                                          "id": 13435,
                                          "name": "changeInDelegatableShares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13416,
                                          "src": "5416:25:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 13434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5407:7:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 13433,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5407:7:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5407:35:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 13428,
                                    "name": "delegationManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14090,
                                    "src": "5243:17:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                                      "typeString": "contract IDelegationManager"
                                    }
                                  },
                                  "id": 13430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "decreaseDelegatedShares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6888,
                                  "src": "5243:41:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$8135_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,contract IStrategy,uint256) external"
                                  }
                                },
                                "id": 13438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [
                                  "staker",
                                  "strategy",
                                  "shares"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5243:218:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 13439,
                              "nodeType": "ExpressionStatement",
                              "src": "5243:218:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13457,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13365,
                        "src": "5773:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13458,
                        "name": "sharesDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13367,
                        "src": "5783:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 13456,
                      "name": "PodSharesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7489,
                      "src": "5756:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 13459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5756:39:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13460,
                  "nodeType": "EmitStatement",
                  "src": "5751:44:31"
                }
              ]
            },
            "baseFunctions": [
              7532
            ],
            "documentation": {
              "id": 13363,
              "nodeType": "StructuredDocumentation",
              "src": "3652:469:31",
              "text": " @notice Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager\n to ensure that delegated shares are also tracked correctly\n @param podOwner is the pod owner whose balance is being updated.\n @param sharesDelta is the change in podOwner's beaconChainETHStrategy shares\n @dev Callable only by the podOwner's EigenPod contract.\n @dev Reverts if `sharesDelta` is not a whole Gwei amount"
            },
            "functionSelector": "c2c51c40",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13370,
                    "name": "podOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13365,
                    "src": "4251:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13369,
                  "name": "onlyEigenPod",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13204,
                  "src": "4238:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "4238:22:31"
              },
              {
                "id": 13373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13372,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57351,
                  "src": "4261:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "4261:12:31"
              }
            ],
            "name": "recordBeaconChainETHBalanceUpdate",
            "nameLocation": "4135:33:31",
            "parameters": {
              "id": 13368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13365,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "4186:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13462,
                  "src": "4178:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13367,
                  "mutability": "mutable",
                  "name": "sharesDelta",
                  "nameLocation": "4211:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13462,
                  "src": "4204:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13366,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4168:60:31"
            },
            "returnParameters": {
              "id": 13374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4274:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13516,
            "nodeType": "FunctionDefinition",
            "src": "6533:594:31",
            "nodes": [],
            "body": {
              "id": 13515,
              "nodeType": "Block",
              "src": "6643:484:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 13475,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13467,
                              "src": "6668:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6661:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 13473,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6661:6:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6661:14:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6679:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6661:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e72656d6f76655368617265733a207368617265732063616e6e6f74206265206e65676174697665",
                        "id": 13479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6682:57:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_408bcb148b67accc99d1a2cb9cdab6f910174cf6e46406e37957b21cb0420be5",
                          "typeString": "literal_string \"EigenPodManager.removeShares: shares cannot be negative\""
                        },
                        "value": "EigenPodManager.removeShares: shares cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_408bcb148b67accc99d1a2cb9cdab6f910174cf6e46406e37957b21cb0420be5",
                          "typeString": "literal_string \"EigenPodManager.removeShares: shares cannot be negative\""
                        }
                      ],
                      "id": 13472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6653:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6653:87:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13481,
                  "nodeType": "ExpressionStatement",
                  "src": "6653:87:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13483,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13467,
                            "src": "6758:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 13484,
                            "name": "GWEI_TO_WEI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14097,
                            "src": "6767:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6758:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6782:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6758:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e72656d6f76655368617265733a20736861726573206d75737420626520612077686f6c65204777656920616d6f756e74",
                        "id": 13488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6785:66:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1510ff12dbbaed125f548db45956f8e1784ebd58dede2c13fa66c3c845772a38",
                          "typeString": "literal_string \"EigenPodManager.removeShares: shares must be a whole Gwei amount\""
                        },
                        "value": "EigenPodManager.removeShares: shares must be a whole Gwei amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1510ff12dbbaed125f548db45956f8e1784ebd58dede2c13fa66c3c845772a38",
                          "typeString": "literal_string \"EigenPodManager.removeShares: shares must be a whole Gwei amount\""
                        }
                      ],
                      "id": 13482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6750:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6750:102:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13490,
                  "nodeType": "ExpressionStatement",
                  "src": "6750:102:31"
                },
                {
                  "assignments": [
                    13492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13492,
                      "mutability": "mutable",
                      "name": "updatedPodOwnerShares",
                      "nameLocation": "6869:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13515,
                      "src": "6862:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13491,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6862:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 13493,
                        "name": "podOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14125,
                        "src": "6893:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 13495,
                      "indexExpression": {
                        "id": 13494,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13465,
                        "src": "6908:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6893:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 13498,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13467,
                          "src": "6927:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6920:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13496,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6920:6:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6920:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "6893:41:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6862:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13503,
                          "name": "updatedPodOwnerShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13492,
                          "src": "6952:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6977:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6952:26:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e72656d6f76655368617265733a2063616e6e6f7420726573756c7420696e20706f64206f776e657220686176696e67206e6567617469766520736861726573",
                        "id": 13506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6980:81:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f237f1e68b0e59b4693b585f1fb3d5574ce9866301c1ce29ad496120ff36ca8c",
                          "typeString": "literal_string \"EigenPodManager.removeShares: cannot result in pod owner having negative shares\""
                        },
                        "value": "EigenPodManager.removeShares: cannot result in pod owner having negative shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f237f1e68b0e59b4693b585f1fb3d5574ce9866301c1ce29ad496120ff36ca8c",
                          "typeString": "literal_string \"EigenPodManager.removeShares: cannot result in pod owner having negative shares\""
                        }
                      ],
                      "id": 13502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6944:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6944:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13508,
                  "nodeType": "ExpressionStatement",
                  "src": "6944:118:31"
                },
                {
                  "expression": {
                    "id": 13513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13509,
                        "name": "podOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14125,
                        "src": "7072:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 13511,
                      "indexExpression": {
                        "id": 13510,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13465,
                        "src": "7087:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7072:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13512,
                      "name": "updatedPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13492,
                      "src": "7099:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "7072:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13514,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:48:31"
                }
              ]
            },
            "baseFunctions": [
              7643
            ],
            "documentation": {
              "id": 13463,
              "nodeType": "StructuredDocumentation",
              "src": "5808:720:31",
              "text": " @notice Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue.\n Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\n @dev This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to\n result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive\n shares from the operator to whom the staker is delegated.\n @dev Reverts if `shares` is not a whole Gwei amount\n @dev The delegation manager validates that the podOwner is not address(0)"
            },
            "functionSelector": "beffbb89",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13469,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13219,
                  "src": "6621:21:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "6621:21:31"
              }
            ],
            "name": "removeShares",
            "nameLocation": "6542:12:31",
            "parameters": {
              "id": 13468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13465,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "6572:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13516,
                  "src": "6564:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13467,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6599:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13516,
                  "src": "6591:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6591:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6554:57:31"
            },
            "returnParameters": {
              "id": 13471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6643:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13595,
            "nodeType": "FunctionDefinition",
            "src": "7652:834:31",
            "nodes": [],
            "body": {
              "id": 13594,
              "nodeType": "Block",
              "src": "7776:710:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13529,
                          "name": "podOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13519,
                          "src": "7794:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7814:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7806:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13530,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7806:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7806:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7794:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e6164645368617265733a20706f644f776e65722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 13535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7818:60:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18abe5fe9ef8a9cbff69263694913980eee1e1274cbd595a54f41d2b92e18c87",
                          "typeString": "literal_string \"EigenPodManager.addShares: podOwner cannot be zero address\""
                        },
                        "value": "EigenPodManager.addShares: podOwner cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18abe5fe9ef8a9cbff69263694913980eee1e1274cbd595a54f41d2b92e18c87",
                          "typeString": "literal_string \"EigenPodManager.addShares: podOwner cannot be zero address\""
                        }
                      ],
                      "id": 13528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7786:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7786:93:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13537,
                  "nodeType": "ExpressionStatement",
                  "src": "7786:93:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 13541,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13521,
                              "src": "7904:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7897:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 13539,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7897:6:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7897:14:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7915:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7897:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e6164645368617265733a207368617265732063616e6e6f74206265206e65676174697665",
                        "id": 13545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7918:54:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b233965b67f1623eaba6e570bfe042588aeb510a0fe0eda294141388df2fa846",
                          "typeString": "literal_string \"EigenPodManager.addShares: shares cannot be negative\""
                        },
                        "value": "EigenPodManager.addShares: shares cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b233965b67f1623eaba6e570bfe042588aeb510a0fe0eda294141388df2fa846",
                          "typeString": "literal_string \"EigenPodManager.addShares: shares cannot be negative\""
                        }
                      ],
                      "id": 13538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7889:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7889:84:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13547,
                  "nodeType": "ExpressionStatement",
                  "src": "7889:84:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13549,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13521,
                            "src": "7991:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 13550,
                            "name": "GWEI_TO_WEI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14097,
                            "src": "8000:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7991:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8015:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7991:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e6164645368617265733a20736861726573206d75737420626520612077686f6c65204777656920616d6f756e74",
                        "id": 13554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8018:63:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19cb2fa8b52564d24c26e3f81329c53576dc3563803a4deb43ab83a9991d4bd8",
                          "typeString": "literal_string \"EigenPodManager.addShares: shares must be a whole Gwei amount\""
                        },
                        "value": "EigenPodManager.addShares: shares must be a whole Gwei amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19cb2fa8b52564d24c26e3f81329c53576dc3563803a4deb43ab83a9991d4bd8",
                          "typeString": "literal_string \"EigenPodManager.addShares: shares must be a whole Gwei amount\""
                        }
                      ],
                      "id": 13548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7983:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7983:99:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13556,
                  "nodeType": "ExpressionStatement",
                  "src": "7983:99:31"
                },
                {
                  "assignments": [
                    13558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13558,
                      "mutability": "mutable",
                      "name": "currentPodOwnerShares",
                      "nameLocation": "8099:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13594,
                      "src": "8092:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13557,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8092:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13562,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13559,
                      "name": "podOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14125,
                      "src": "8123:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                        "typeString": "mapping(address => int256)"
                      }
                    },
                    "id": 13561,
                    "indexExpression": {
                      "id": 13560,
                      "name": "podOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13519,
                      "src": "8138:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8123:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8092:55:31"
                },
                {
                  "assignments": [
                    13564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13564,
                      "mutability": "mutable",
                      "name": "updatedPodOwnerShares",
                      "nameLocation": "8164:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13594,
                      "src": "8157:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13563,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8157:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13571,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13565,
                      "name": "currentPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13558,
                      "src": "8188:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 13568,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13521,
                          "src": "8219:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8212:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13566,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8212:6:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8212:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "8188:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8157:69:31"
                },
                {
                  "expression": {
                    "id": 13576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13572,
                        "name": "podOwnerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14125,
                        "src": "8236:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 13574,
                      "indexExpression": {
                        "id": 13573,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13519,
                        "src": "8251:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8236:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13575,
                      "name": "updatedPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13564,
                      "src": "8263:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "8236:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13577,
                  "nodeType": "ExpressionStatement",
                  "src": "8236:48:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13579,
                        "name": "podOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13519,
                        "src": "8317:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13582,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13521,
                            "src": "8334:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8327:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 13580,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8327:6:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8327:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 13578,
                      "name": "PodSharesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7489,
                      "src": "8300:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 13584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8300:42:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13585,
                  "nodeType": "EmitStatement",
                  "src": "8295:47:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13589,
                            "name": "currentPodOwnerShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13558,
                            "src": "8419:21:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "id": 13590,
                            "name": "updatedPodOwnerShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13564,
                            "src": "8455:21:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 13588,
                          "name": "_calculateChangeInDelegatableShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13925,
                          "src": "8368:35:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 13591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [
                          "sharesBefore",
                          "sharesAfter"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8368:110:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 13587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8360:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 13586,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8360:7:31",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 13592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:119:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13527,
                  "id": 13593,
                  "nodeType": "Return",
                  "src": "8353:126:31"
                }
              ]
            },
            "baseFunctions": [
              7653
            ],
            "documentation": {
              "id": 13517,
              "nodeType": "StructuredDocumentation",
              "src": "7133:514:31",
              "text": " @notice Increases the `podOwner`'s shares by `shares`, paying off deficit if possible.\n Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\n @dev Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input\n in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)\n @dev Reverts if `shares` is not a whole Gwei amount"
            },
            "functionSelector": "0e81073c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13523,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13219,
                  "src": "7736:21:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "7736:21:31"
              }
            ],
            "name": "addShares",
            "nameLocation": "7661:9:31",
            "parameters": {
              "id": 13522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13519,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "7688:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13595,
                  "src": "7680:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7680:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13521,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "7714:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13595,
                  "src": "7706:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7706:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7670:56:31"
            },
            "returnParameters": {
              "id": 13527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13595,
                  "src": "7767:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7766:9:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13716,
            "nodeType": "FunctionDefinition",
            "src": "8972:1674:31",
            "nodes": [],
            "body": {
              "id": 13715,
              "nodeType": "Block",
              "src": "9122:1524:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13608,
                          "name": "podOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13598,
                          "src": "9140:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9160:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9152:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13609,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9152:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9152:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9140:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e77697468647261775368617265734173546f6b656e733a20706f644f776e65722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 13614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9164:73:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a16dff4a7d8061c1875b3bf72c7452fda569a0657fca92b2ed7413b62e0c0171",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: podOwner cannot be zero address\""
                        },
                        "value": "EigenPodManager.withdrawSharesAsTokens: podOwner cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a16dff4a7d8061c1875b3bf72c7452fda569a0657fca92b2ed7413b62e0c0171",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: podOwner cannot be zero address\""
                        }
                      ],
                      "id": 13607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9132:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9132:106:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13616,
                  "nodeType": "ExpressionStatement",
                  "src": "9132:106:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13618,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13600,
                          "src": "9256:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9279:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9271:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13619,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9271:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9271:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9256:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e77697468647261775368617265734173546f6b656e733a2064657374696e6174696f6e2063616e6e6f74206265207a65726f2061646472657373",
                        "id": 13624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9283:76:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_581ebe6ac31c81eb051da6c78376a5ccdb0899ff6906ec196fe255306af61263",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: destination cannot be zero address\""
                        },
                        "value": "EigenPodManager.withdrawSharesAsTokens: destination cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_581ebe6ac31c81eb051da6c78376a5ccdb0899ff6906ec196fe255306af61263",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: destination cannot be zero address\""
                        }
                      ],
                      "id": 13617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9248:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9248:112:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13626,
                  "nodeType": "ExpressionStatement",
                  "src": "9248:112:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 13630,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13602,
                              "src": "9385:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9378:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 13628,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9378:6:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9378:14:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9396:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9378:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e77697468647261775368617265734173546f6b656e733a207368617265732063616e6e6f74206265206e65676174697665",
                        "id": 13634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9399:67:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e05c9944d0fc1d5fbd0b3e96b2b2060051d6f861f83af5d56a6ce38a1d4e30a1",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: shares cannot be negative\""
                        },
                        "value": "EigenPodManager.withdrawSharesAsTokens: shares cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e05c9944d0fc1d5fbd0b3e96b2b2060051d6f861f83af5d56a6ce38a1d4e30a1",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: shares cannot be negative\""
                        }
                      ],
                      "id": 13627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9370:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9370:97:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13636,
                  "nodeType": "ExpressionStatement",
                  "src": "9370:97:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13638,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13602,
                            "src": "9485:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 13639,
                            "name": "GWEI_TO_WEI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14097,
                            "src": "9494:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9485:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9509:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9485:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e77697468647261775368617265734173546f6b656e733a20736861726573206d75737420626520612077686f6c65204777656920616d6f756e74",
                        "id": 13643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9512:76:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5096db3d2352b15ebdba9a366e50701a2c3037b91f24ea29cb4e8f188a05b9b3",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: shares must be a whole Gwei amount\""
                        },
                        "value": "EigenPodManager.withdrawSharesAsTokens: shares must be a whole Gwei amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5096db3d2352b15ebdba9a366e50701a2c3037b91f24ea29cb4e8f188a05b9b3",
                          "typeString": "literal_string \"EigenPodManager.withdrawSharesAsTokens: shares must be a whole Gwei amount\""
                        }
                      ],
                      "id": 13637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9477:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9477:112:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13645,
                  "nodeType": "ExpressionStatement",
                  "src": "9477:112:31"
                },
                {
                  "assignments": [
                    13647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13647,
                      "mutability": "mutable",
                      "name": "currentPodOwnerShares",
                      "nameLocation": "9606:21:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13715,
                      "src": "9599:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13646,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9599:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13651,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13648,
                      "name": "podOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14125,
                      "src": "9630:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                        "typeString": "mapping(address => int256)"
                      }
                    },
                    "id": 13650,
                    "indexExpression": {
                      "id": 13649,
                      "name": "podOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13598,
                      "src": "9645:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9630:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9599:55:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13652,
                      "name": "currentPodOwnerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13647,
                      "src": "9760:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9784:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9760:25:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13706,
                  "nodeType": "IfStatement",
                  "src": "9756:754:31",
                  "trueBody": {
                    "id": 13705,
                    "nodeType": "Block",
                    "src": "9787:723:31",
                    "statements": [
                      {
                        "assignments": [
                          13656
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13656,
                            "mutability": "mutable",
                            "name": "currentShareDeficit",
                            "nameLocation": "9809:19:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 13705,
                            "src": "9801:27:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 13655,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9801:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13662,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 13660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "9839:22:31",
                              "subExpression": {
                                "id": 13659,
                                "name": "currentPodOwnerShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13647,
                                "src": "9840:21:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 13658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9831:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 13657,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9831:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9831:31:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9801:61:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13663,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13602,
                            "src": "9984:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 13664,
                            "name": "currentShareDeficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13656,
                            "src": "9993:19:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9984:28:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 13703,
                          "nodeType": "Block",
                          "src": "10336:164:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 13692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 13685,
                                    "name": "podOwnerShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14125,
                                    "src": "10354:14:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                                      "typeString": "mapping(address => int256)"
                                    }
                                  },
                                  "id": 13687,
                                  "indexExpression": {
                                    "id": 13686,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13598,
                                    "src": "10369:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10354:24:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 13690,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13602,
                                      "src": "10389:6:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 13689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10382:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 13688,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10382:6:31",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 13691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10382:14:31",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "10354:42:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 13693,
                              "nodeType": "ExpressionStatement",
                              "src": "10354:42:31"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 13695,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13598,
                                    "src": "10436:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 13698,
                                        "name": "shares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13602,
                                        "src": "10453:6:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 13697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10446:6:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 13696,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10446:6:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13699,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10446:14:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 13694,
                                  "name": "PodSharesUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7489,
                                  "src": "10419:16:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                                    "typeString": "function (address,int256)"
                                  }
                                },
                                "id": 13700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10419:42:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 13701,
                              "nodeType": "EmitStatement",
                              "src": "10414:47:31"
                            },
                            {
                              "functionReturnParameters": 13606,
                              "id": 13702,
                              "nodeType": "Return",
                              "src": "10479:7:31"
                            }
                          ]
                        },
                        "id": 13704,
                        "nodeType": "IfStatement",
                        "src": "9980:520:31",
                        "trueBody": {
                          "id": 13684,
                          "nodeType": "Block",
                          "src": "10014:316:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 13670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 13666,
                                    "name": "podOwnerShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14125,
                                    "src": "10032:14:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                                      "typeString": "mapping(address => int256)"
                                    }
                                  },
                                  "id": 13668,
                                  "indexExpression": {
                                    "id": 13667,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13598,
                                    "src": "10047:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10032:24:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 13669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10059:1:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10032:28:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 13671,
                              "nodeType": "ExpressionStatement",
                              "src": "10032:28:31"
                            },
                            {
                              "expression": {
                                "id": 13674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 13672,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13602,
                                  "src": "10078:6:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 13673,
                                  "name": "currentShareDeficit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13656,
                                  "src": "10088:19:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10078:29:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 13675,
                              "nodeType": "ExpressionStatement",
                              "src": "10078:29:31"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 13677,
                                    "name": "podOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13598,
                                    "src": "10147:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 13680,
                                        "name": "currentShareDeficit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13656,
                                        "src": "10164:19:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 13679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10157:6:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 13678,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10157:6:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10157:27:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 13676,
                                  "name": "PodSharesUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7489,
                                  "src": "10130:16:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                                    "typeString": "function (address,int256)"
                                  }
                                },
                                "id": 13682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10130:55:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 13683,
                              "nodeType": "EmitStatement",
                              "src": "10125:60:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13711,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13600,
                        "src": "10619:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13712,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13602,
                        "src": "10632:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 13707,
                          "name": "ownerToPod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14114,
                          "src": "10567:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                            "typeString": "mapping(address => contract IEigenPod)"
                          }
                        },
                        "id": 13709,
                        "indexExpression": {
                          "id": 13708,
                          "name": "podOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13598,
                          "src": "10578:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10567:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "id": 13710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawRestakedBeaconChainETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7280,
                      "src": "10567:51:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10567:72:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13714,
                  "nodeType": "ExpressionStatement",
                  "src": "10567:72:31"
                }
              ]
            },
            "baseFunctions": [
              7663
            ],
            "documentation": {
              "id": 13596,
              "nodeType": "StructuredDocumentation",
              "src": "8492:475:31",
              "text": " @notice Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\n @dev Prioritizes decreasing the podOwner's share deficit, if they have one\n @dev Reverts if `shares` is not a whole Gwei amount\n @dev This function assumes that `removeShares` has already been called by the delegationManager, hence why\n      we do not need to update the podOwnerShares if `currentPodOwnerShares` is positive"
            },
            "functionSelector": "387b1300",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13605,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13604,
                  "name": "onlyDelegationManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13219,
                  "src": "9100:21:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "9100:21:31"
              }
            ],
            "name": "withdrawSharesAsTokens",
            "nameLocation": "8981:22:31",
            "parameters": {
              "id": 13603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13598,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "9021:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13716,
                  "src": "9013:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9013:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13600,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "9048:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13716,
                  "src": "9040:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9040:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13602,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "9078:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13716,
                  "src": "9070:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9070:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9003:87:31"
            },
            "returnParameters": {
              "id": 13606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9122:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13729,
            "nodeType": "FunctionDefinition",
            "src": "10859:102:31",
            "nodes": [],
            "body": {
              "id": 13728,
              "nodeType": "Block",
              "src": "10921:40:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13725,
                        "name": "newMaxPods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13719,
                        "src": "10943:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13724,
                      "name": "_setMaxPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13883,
                      "src": "10931:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10931:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13727,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:23:31"
                }
              ]
            },
            "documentation": {
              "id": 13717,
              "nodeType": "StructuredDocumentation",
              "src": "10652:202:31",
              "text": " Sets the maximum number of pods that can be deployed\n @param newMaxPods The new maximum number of pods that can be deployed\n @dev Callable by the unpauser of this contract"
            },
            "functionSelector": "0cf2686d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13722,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13721,
                  "name": "onlyUnpauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10537,
                  "src": "10908:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "10908:12:31"
              }
            ],
            "name": "setMaxPods",
            "nameLocation": "10868:10:31",
            "parameters": {
              "id": 13720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13719,
                  "mutability": "mutable",
                  "name": "newMaxPods",
                  "nameLocation": "10887:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13729,
                  "src": "10879:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10879:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10878:20:31"
            },
            "returnParameters": {
              "id": 13723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10921:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13743,
            "nodeType": "FunctionDefinition",
            "src": "11221:156:31",
            "nodes": [],
            "body": {
              "id": 13742,
              "nodeType": "Block",
              "src": "11314:63:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13739,
                        "name": "newBeaconChainOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13733,
                        "src": "11349:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                          "typeString": "contract IBeaconChainOracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                          "typeString": "contract IBeaconChainOracle"
                        }
                      ],
                      "id": 13738,
                      "name": "_updateBeaconChainOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13867,
                      "src": "11324:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBeaconChainOracle_$6462_$returns$__$",
                        "typeString": "function (contract IBeaconChainOracle)"
                      }
                    },
                    "id": 13740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11324:46:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13741,
                  "nodeType": "ExpressionStatement",
                  "src": "11324:46:31"
                }
              ]
            },
            "baseFunctions": [
              7539
            ],
            "documentation": {
              "id": 13730,
              "nodeType": "StructuredDocumentation",
              "src": "10967:249:31",
              "text": " @notice Updates the oracle contract that provides the beacon chain state root\n @param newBeaconChainOracle is the new oracle contract being pointed to\n @dev Callable only by the owner of this contract (i.e. governance)"
            },
            "functionSelector": "c1de3aef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13735,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57061,
                  "src": "11304:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "11304:9:31"
              }
            ],
            "name": "updateBeaconChainOracle",
            "nameLocation": "11230:23:31",
            "parameters": {
              "id": 13734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13733,
                  "mutability": "mutable",
                  "name": "newBeaconChainOracle",
                  "nameLocation": "11273:20:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13743,
                  "src": "11254:39:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                    "typeString": "contract IBeaconChainOracle"
                  },
                  "typeName": {
                    "id": 13732,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13731,
                      "name": "IBeaconChainOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6462,
                      "src": "11254:18:31"
                    },
                    "referencedDeclaration": 6462,
                    "src": "11254:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11253:41:31"
            },
            "returnParameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11314:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13774,
            "nodeType": "FunctionDefinition",
            "src": "11527:467:31",
            "nodes": [],
            "body": {
              "id": 13773,
              "nodeType": "Block",
              "src": "11607:387:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 13754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13752,
                          "name": "newDenebForkTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13746,
                          "src": "11625:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11650:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11625:26:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e73657444656e6562466f726b54696d657374616d703a2063616e6e6f7420736574206e657744656e6562466f726b54696d657374616d7020746f2030",
                        "id": 13755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11653:78:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c985036f0c32c1de53824b333cc9c219263d89ee261d4f20f28d1861b744df9",
                          "typeString": "literal_string \"EigenPodManager.setDenebForkTimestamp: cannot set newDenebForkTimestamp to 0\""
                        },
                        "value": "EigenPodManager.setDenebForkTimestamp: cannot set newDenebForkTimestamp to 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c985036f0c32c1de53824b333cc9c219263d89ee261d4f20f28d1861b744df9",
                          "typeString": "literal_string \"EigenPodManager.setDenebForkTimestamp: cannot set newDenebForkTimestamp to 0\""
                        }
                      ],
                      "id": 13751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11617:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11617:115:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13757,
                  "nodeType": "ExpressionStatement",
                  "src": "11617:115:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 13761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13759,
                          "name": "_denebForkTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14127,
                          "src": "11750:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11773:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11750:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e73657444656e6562466f726b54696d657374616d703a2063616e6e6f74207365742064656e6562466f726b54696d657374616d70206d6f7265207468616e206f6e6365",
                        "id": 13762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11776:85:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_601314617ef3e7cf556054ab7aa30d80bee37cc5f294dccf80cff43d230eecb3",
                          "typeString": "literal_string \"EigenPodManager.setDenebForkTimestamp: cannot set denebForkTimestamp more than once\""
                        },
                        "value": "EigenPodManager.setDenebForkTimestamp: cannot set denebForkTimestamp more than once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_601314617ef3e7cf556054ab7aa30d80bee37cc5f294dccf80cff43d230eecb3",
                          "typeString": "literal_string \"EigenPodManager.setDenebForkTimestamp: cannot set denebForkTimestamp more than once\""
                        }
                      ],
                      "id": 13758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11742:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11742:120:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13764,
                  "nodeType": "ExpressionStatement",
                  "src": "11742:120:31"
                },
                {
                  "expression": {
                    "id": 13767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13765,
                      "name": "_denebForkTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14127,
                      "src": "11881:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13766,
                      "name": "newDenebForkTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13746,
                      "src": "11903:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "11881:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13768,
                  "nodeType": "ExpressionStatement",
                  "src": "11881:43:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13770,
                        "name": "newDenebForkTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13746,
                        "src": "11965:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 13769,
                      "name": "DenebForkTimestampUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "11939:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 13771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11939:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13772,
                  "nodeType": "EmitStatement",
                  "src": "11934:53:31"
                }
              ]
            },
            "baseFunctions": [
              7675
            ],
            "documentation": {
              "id": 13744,
              "nodeType": "StructuredDocumentation",
              "src": "11383:139:31",
              "text": " @notice Sets the timestamp of the Deneb fork.\n @param newDenebForkTimestamp is the new timestamp of the Deneb fork"
            },
            "functionSelector": "463db038",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13748,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57061,
                  "src": "11597:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "11597:9:31"
              }
            ],
            "name": "setDenebForkTimestamp",
            "nameLocation": "11536:21:31",
            "parameters": {
              "id": 13747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13746,
                  "mutability": "mutable",
                  "name": "newDenebForkTimestamp",
                  "nameLocation": "11565:21:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13774,
                  "src": "11558:28:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13745,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11558:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11557:30:31"
            },
            "returnParameters": {
              "id": 13750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11607:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13848,
            "nodeType": "FunctionDefinition",
            "src": "12027:805:31",
            "nodes": [],
            "body": {
              "id": 13847,
              "nodeType": "Block",
              "src": "12078:754:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13781,
                            "name": "numPods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14117,
                            "src": "12192:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 13782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12202:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12192:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 13784,
                          "name": "maxPods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14120,
                          "src": "12207:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12192:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e5f6465706c6f79506f643a20706f64206c696d69742072656163686564",
                        "id": 13786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12216:47:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26c837b216ebf34dcf4a188688a0fb100c5c84581cd6240e61d808abd233d355",
                          "typeString": "literal_string \"EigenPodManager._deployPod: pod limit reached\""
                        },
                        "value": "EigenPodManager._deployPod: pod limit reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26c837b216ebf34dcf4a188688a0fb100c5c84581cd6240e61d808abd233d355",
                          "typeString": "literal_string \"EigenPodManager._deployPod: pod limit reached\""
                        }
                      ],
                      "id": 13780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12184:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12184:80:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13788,
                  "nodeType": "ExpressionStatement",
                  "src": "12184:80:31"
                },
                {
                  "expression": {
                    "id": 13790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "12274:9:31",
                    "subExpression": {
                      "id": 13789,
                      "name": "numPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14117,
                      "src": "12276:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13791,
                  "nodeType": "ExpressionStatement",
                  "src": "12274:9:31"
                },
                {
                  "assignments": [
                    13794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13794,
                      "mutability": "mutable",
                      "name": "pod",
                      "nameLocation": "12329:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13847,
                      "src": "12319:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      },
                      "typeName": {
                        "id": 13793,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13792,
                          "name": "IEigenPod",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7443,
                          "src": "12319:9:31"
                        },
                        "referencedDeclaration": 7443,
                        "src": "12319:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13821,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12390:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 13805,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "12433:3:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 13806,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "12433:10:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 13804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12425:7:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint160_$",
                                        "typeString": "type(uint160)"
                                      },
                                      "typeName": {
                                        "id": 13803,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12425:7:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13807,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12425:19:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
                                  "id": 13802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12417:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 13801,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12417:7:31",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12417:28:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 13800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12409:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 13799,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12409:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12409:37:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 13812,
                                "name": "beaconProxyBytecode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14094,
                                "src": "12563:19:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 13815,
                                    "name": "eigenPodBeacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14078,
                                    "src": "12595:14:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBeacon_$58703",
                                      "typeString": "contract IBeacon"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 13816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12611:2:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IBeacon_$58703",
                                      "typeString": "contract IBeacon"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 13813,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "12584:3:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 13814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "12584:10:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 13817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12584:30:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 13810,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12546:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 13811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "12546:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 13818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12546:69:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 13796,
                            "name": "Create2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60569,
                            "src": "12358:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Create2_$60569_$",
                              "typeString": "type(library Create2)"
                            }
                          },
                          "id": 13797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deploy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60509,
                          "src": "12358:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (uint256,bytes32,bytes memory) returns (address)"
                          }
                        },
                        "id": 13819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12358:271:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13795,
                      "name": "IEigenPod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7443,
                      "src": "12335:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IEigenPod_$7443_$",
                        "typeString": "type(contract IEigenPod)"
                      }
                    },
                    "id": 13820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12335:304:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12319:320:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13825,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12664:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12664:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13822,
                        "name": "pod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13794,
                        "src": "12649:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "id": 13824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7262,
                      "src": "12649:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12649:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13828,
                  "nodeType": "ExpressionStatement",
                  "src": "12649:26:31"
                },
                {
                  "expression": {
                    "id": 13834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13829,
                        "name": "ownerToPod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14114,
                        "src": "12725:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                          "typeString": "mapping(address => contract IEigenPod)"
                        }
                      },
                      "id": 13832,
                      "indexExpression": {
                        "expression": {
                          "id": 13830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12736:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12736:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12725:22:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13833,
                      "name": "pod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13794,
                      "src": "12750:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      }
                    },
                    "src": "12725:28:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "id": 13835,
                  "nodeType": "ExpressionStatement",
                  "src": "12725:28:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13839,
                            "name": "pod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13794,
                            "src": "12788:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          ],
                          "id": 13838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12780:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12780:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12780:12:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12794:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12794:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13836,
                      "name": "PodDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7468,
                      "src": "12768:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 13843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12768:37:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13844,
                  "nodeType": "EmitStatement",
                  "src": "12763:42:31"
                },
                {
                  "expression": {
                    "id": 13845,
                    "name": "pod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13794,
                    "src": "12822:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "functionReturnParameters": 13779,
                  "id": 13846,
                  "nodeType": "Return",
                  "src": "12815:10:31"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deployPod",
            "nameLocation": "12036:10:31",
            "parameters": {
              "id": 13775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12046:2:31"
            },
            "returnParameters": {
              "id": 13779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13848,
                  "src": "12067:9:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPod_$7443",
                    "typeString": "contract IEigenPod"
                  },
                  "typeName": {
                    "id": 13777,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13776,
                      "name": "IEigenPod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7443,
                      "src": "12067:9:31"
                    },
                    "referencedDeclaration": 7443,
                    "src": "12067:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12066:11:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13867,
            "nodeType": "FunctionDefinition",
            "src": "12919:206:31",
            "nodes": [],
            "body": {
              "id": 13866,
              "nodeType": "Block",
              "src": "13003:122:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13855,
                      "name": "beaconChainOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14108,
                      "src": "13013:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                        "typeString": "contract IBeaconChainOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13856,
                      "name": "newBeaconChainOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13852,
                      "src": "13033:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                        "typeString": "contract IBeaconChainOracle"
                      }
                    },
                    "src": "13013:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "id": 13858,
                  "nodeType": "ExpressionStatement",
                  "src": "13013:40:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13862,
                            "name": "newBeaconChainOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13852,
                            "src": "13096:20:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                              "typeString": "contract IBeaconChainOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                              "typeString": "contract IBeaconChainOracle"
                            }
                          ],
                          "id": 13861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13088:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13860,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13088:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13088:29:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13859,
                      "name": "BeaconOracleUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7461,
                      "src": "13068:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13068:50:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13865,
                  "nodeType": "EmitStatement",
                  "src": "13063:55:31"
                }
              ]
            },
            "documentation": {
              "id": 13849,
              "nodeType": "StructuredDocumentation",
              "src": "12838:76:31",
              "text": "@notice Internal setter for `beaconChainOracle` that also emits an event"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateBeaconChainOracle",
            "nameLocation": "12928:24:31",
            "parameters": {
              "id": 13853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13852,
                  "mutability": "mutable",
                  "name": "newBeaconChainOracle",
                  "nameLocation": "12972:20:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13867,
                  "src": "12953:39:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                    "typeString": "contract IBeaconChainOracle"
                  },
                  "typeName": {
                    "id": 13851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13850,
                      "name": "IBeaconChainOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6462,
                      "src": "12953:18:31"
                    },
                    "referencedDeclaration": 6462,
                    "src": "12953:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12952:41:31"
            },
            "returnParameters": {
              "id": 13854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13003:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13883,
            "nodeType": "FunctionDefinition",
            "src": "13202:131:31",
            "nodes": [],
            "body": {
              "id": 13882,
              "nodeType": "Block",
              "src": "13250:83:31",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13874,
                        "name": "maxPods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14120,
                        "src": "13280:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13875,
                        "name": "_maxPods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13870,
                        "src": "13289:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13873,
                      "name": "MaxPodsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7482,
                      "src": "13265:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13265:33:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13877,
                  "nodeType": "EmitStatement",
                  "src": "13260:38:31"
                },
                {
                  "expression": {
                    "id": 13880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13878,
                      "name": "maxPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14120,
                      "src": "13308:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13879,
                      "name": "_maxPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13870,
                      "src": "13318:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13308:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13881,
                  "nodeType": "ExpressionStatement",
                  "src": "13308:18:31"
                }
              ]
            },
            "documentation": {
              "id": 13868,
              "nodeType": "StructuredDocumentation",
              "src": "13131:66:31",
              "text": "@notice Internal setter for `maxPods` that also emits an event"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setMaxPods",
            "nameLocation": "13211:11:31",
            "parameters": {
              "id": 13871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13870,
                  "mutability": "mutable",
                  "name": "_maxPods",
                  "nameLocation": "13231:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13883,
                  "src": "13223:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13223:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13222:18:31"
            },
            "returnParameters": {
              "id": 13872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13250:0:31"
            },
            "scope": 14059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13925,
            "nodeType": "FunctionDefinition",
            "src": "13605:1058:31",
            "nodes": [],
            "body": {
              "id": 13924,
              "nodeType": "Block",
              "src": "13722:941:31",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13893,
                      "name": "sharesBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13886,
                      "src": "13736:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13752:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13736:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13922,
                    "nodeType": "Block",
                    "src": "14170:487:31",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13907,
                            "name": "sharesAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13888,
                            "src": "14325:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14340:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14325:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 13920,
                          "nodeType": "Block",
                          "src": "14579:68:31",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 13917,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 13915,
                                      "name": "sharesAfter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13888,
                                      "src": "14605:11:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 13916,
                                      "name": "sharesBefore",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13886,
                                      "src": "14619:12:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "14605:26:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "id": 13918,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14604:28:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "functionReturnParameters": 13892,
                              "id": 13919,
                              "nodeType": "Return",
                              "src": "14597:35:31"
                            }
                          ]
                        },
                        "id": 13921,
                        "nodeType": "IfStatement",
                        "src": "14321:326:31",
                        "trueBody": {
                          "id": 13914,
                          "nodeType": "Block",
                          "src": "14343:230:31",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "id": 13911,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "14369:13:31",
                                    "subExpression": {
                                      "id": 13910,
                                      "name": "sharesBefore",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13886,
                                      "src": "14370:12:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "id": 13912,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14368:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "functionReturnParameters": 13892,
                              "id": 13913,
                              "nodeType": "Return",
                              "src": "14361:22:31"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 13923,
                  "nodeType": "IfStatement",
                  "src": "13732:925:31",
                  "trueBody": {
                    "id": 13906,
                    "nodeType": "Block",
                    "src": "13755:409:31",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13896,
                            "name": "sharesAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13888,
                            "src": "13903:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13918:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13903:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 13904,
                          "nodeType": "Block",
                          "src": "14103:51:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 13902,
                                "name": "sharesAfter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13888,
                                "src": "14128:11:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "functionReturnParameters": 13892,
                              "id": 13903,
                              "nodeType": "Return",
                              "src": "14121:18:31"
                            }
                          ]
                        },
                        "id": 13905,
                        "nodeType": "IfStatement",
                        "src": "13899:255:31",
                        "trueBody": {
                          "id": 13901,
                          "nodeType": "Block",
                          "src": "13921:176:31",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 13899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13946:1:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 13892,
                              "id": 13900,
                              "nodeType": "Return",
                              "src": "13939:8:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13884,
              "nodeType": "StructuredDocumentation",
              "src": "13339:261:31",
              "text": " @notice Calculates the change in a pod owner's delegateable shares as a result of their beacon chain ETH shares changing\n from `sharesBefore` to `sharesAfter`. The key concept here is that negative/\"deficit\" shares are not delegateable."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateChangeInDelegatableShares",
            "nameLocation": "13614:35:31",
            "parameters": {
              "id": 13889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13886,
                  "mutability": "mutable",
                  "name": "sharesBefore",
                  "nameLocation": "13657:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13925,
                  "src": "13650:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13885,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13650:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13888,
                  "mutability": "mutable",
                  "name": "sharesAfter",
                  "nameLocation": "13678:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13925,
                  "src": "13671:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13887,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13671:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13649:41:31"
            },
            "returnParameters": {
              "id": 13892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13925,
                  "src": "13714:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13890,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13714:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13713:8:31"
            },
            "scope": 14059,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13984,
            "nodeType": "FunctionDefinition",
            "src": "14793:568:31",
            "nodes": [],
            "body": {
              "id": 13983,
              "nodeType": "Block",
              "src": "14859:502:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13936,
                      "mutability": "mutable",
                      "name": "pod",
                      "nameLocation": "14879:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 13983,
                      "src": "14869:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEigenPod_$7443",
                        "typeString": "contract IEigenPod"
                      },
                      "typeName": {
                        "id": 13935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13934,
                          "name": "IEigenPod",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7443,
                          "src": "14869:9:31"
                        },
                        "referencedDeclaration": 7443,
                        "src": "14869:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPod_$7443",
                          "typeString": "contract IEigenPod"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13940,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13937,
                      "name": "ownerToPod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14114,
                      "src": "14885:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                        "typeString": "mapping(address => contract IEigenPod)"
                      }
                    },
                    "id": 13939,
                    "indexExpression": {
                      "id": 13938,
                      "name": "podOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13928,
                      "src": "14896:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14885:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14869:36:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 13943,
                          "name": "pod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13936,
                          "src": "15026:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        ],
                        "id": 13942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15018:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15018:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15018:12:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 13947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15042:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15034:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15034:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15034:10:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15018:26:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13980,
                  "nodeType": "IfStatement",
                  "src": "15014:321:31",
                  "trueBody": {
                    "id": 13979,
                    "nodeType": "Block",
                    "src": "15046:289:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 13977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13950,
                            "name": "pod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13936,
                            "src": "15060:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 13960,
                                                "name": "podOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 13928,
                                                "src": "15161:8:31",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 13959,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "15153:7:31",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint160_$",
                                                "typeString": "type(uint160)"
                                              },
                                              "typeName": {
                                                "id": 13958,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "15153:7:31",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 13961,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15153:17:31",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          ],
                                          "id": 13957,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "15145:7:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 13956,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "15145:7:31",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 13962,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15145:26:31",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 13955,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15137:7:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 13954,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15137:7:31",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13963,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15137:35:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 13967,
                                            "name": "beaconProxyBytecode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14094,
                                            "src": "15228:19:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 13970,
                                                "name": "eigenPodBeacon",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 14078,
                                                "src": "15260:14:31",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IBeacon_$58703",
                                                  "typeString": "contract IBeacon"
                                                }
                                              },
                                              {
                                                "hexValue": "",
                                                "id": 13971,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15276:2:31",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                  "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IBeacon_$58703",
                                                  "typeString": "contract IBeacon"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                  "typeString": "literal_string \"\""
                                                }
                                              ],
                                              "expression": {
                                                "id": 13968,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "15249:3:31",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 13969,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encode",
                                              "nodeType": "MemberAccess",
                                              "src": "15249:10:31",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 13972,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15249:30:31",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "expression": {
                                            "id": 13965,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "15211:3:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 13966,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "src": "15211:16:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 13973,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15211:69:31",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 13964,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "15201:9:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 13974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15201:80:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 13952,
                                    "name": "Create2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60569,
                                    "src": "15093:7:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Create2_$60569_$",
                                      "typeString": "type(library Create2)"
                                    }
                                  },
                                  "id": 13953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "computeAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60529,
                                  "src": "15093:22:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                                    "typeString": "function (bytes32,bytes32) view returns (address)"
                                  }
                                },
                                "id": 13975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15093:217:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13951,
                              "name": "IEigenPod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7443,
                              "src": "15066:9:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IEigenPod_$7443_$",
                                "typeString": "type(contract IEigenPod)"
                              }
                            },
                            "id": 13976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15066:258:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEigenPod_$7443",
                              "typeString": "contract IEigenPod"
                            }
                          },
                          "src": "15060:264:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        },
                        "id": 13978,
                        "nodeType": "ExpressionStatement",
                        "src": "15060:264:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13981,
                    "name": "pod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13936,
                    "src": "15351:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "functionReturnParameters": 13933,
                  "id": 13982,
                  "nodeType": "Return",
                  "src": "15344:10:31"
                }
              ]
            },
            "baseFunctions": [
              7557
            ],
            "documentation": {
              "id": 13926,
              "nodeType": "StructuredDocumentation",
              "src": "14691:97:31",
              "text": "@notice Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not)."
            },
            "functionSelector": "a38406a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPod",
            "nameLocation": "14802:6:31",
            "parameters": {
              "id": 13929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13928,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "14817:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 13984,
                  "src": "14809:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14809:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14808:18:31"
            },
            "returnParameters": {
              "id": 13933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13984,
                  "src": "14848:9:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPod_$7443",
                    "typeString": "contract IEigenPod"
                  },
                  "typeName": {
                    "id": 13931,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13930,
                      "name": "IEigenPod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7443,
                      "src": "14848:9:31"
                    },
                    "referencedDeclaration": 7443,
                    "src": "14848:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14847:11:31"
            },
            "scope": 14059,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14005,
            "nodeType": "FunctionDefinition",
            "src": "15464:128:31",
            "nodes": [],
            "body": {
              "id": 14004,
              "nodeType": "Block",
              "src": "15525:67:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 13994,
                            "name": "ownerToPod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14114,
                            "src": "15550:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IEigenPod_$7443_$",
                              "typeString": "mapping(address => contract IEigenPod)"
                            }
                          },
                          "id": 13996,
                          "indexExpression": {
                            "id": 13995,
                            "name": "podOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13987,
                            "src": "15561:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15550:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEigenPod_$7443",
                            "typeString": "contract IEigenPod"
                          }
                        ],
                        "id": 13993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15542:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13992,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15542:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15542:29:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15583:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15575:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15575:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15575:10:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15542:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13991,
                  "id": 14003,
                  "nodeType": "Return",
                  "src": "15535:50:31"
                }
              ]
            },
            "baseFunctions": [
              7608
            ],
            "documentation": {
              "id": 13985,
              "nodeType": "StructuredDocumentation",
              "src": "15367:92:31",
              "text": "@notice Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise."
            },
            "functionSelector": "f6848d24",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPod",
            "nameLocation": "15473:6:31",
            "parameters": {
              "id": 13988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13987,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "15488:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 14005,
                  "src": "15480:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15480:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15479:18:31"
            },
            "returnParameters": {
              "id": 13991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14005,
                  "src": "15519:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15519:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15518:6:31"
            },
            "scope": 14059,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14033,
            "nodeType": "FunctionDefinition",
            "src": "15736:357:31",
            "nodes": [],
            "body": {
              "id": 14032,
              "nodeType": "Block",
              "src": "15819:274:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14014,
                      "mutability": "mutable",
                      "name": "stateRoot",
                      "nameLocation": "15837:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 14032,
                      "src": "15829:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14013,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15829:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14019,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14017,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14008,
                        "src": "15888:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 14015,
                        "name": "beaconChainOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14108,
                        "src": "15849:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                          "typeString": "contract IBeaconChainOracle"
                        }
                      },
                      "id": 14016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestampToBlockRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6461,
                      "src": "15849:38:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 14018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15849:49:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15829:69:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14021,
                          "name": "stateRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14014,
                          "src": "15929:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15950:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15942:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 14022,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "15942:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15942:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "15929:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e506f644d616e616765722e676574426c6f636b526f6f74417454696d657374616d703a20737461746520726f6f742061742074696d657374616d70206e6f74207965742066696e616c697a6564",
                        "id": 14027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15966:84:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cb9b4b068af8ae9f445159ecfa67746b2f6068a6228b4b4cf47f603d37dcccd",
                          "typeString": "literal_string \"EigenPodManager.getBlockRootAtTimestamp: state root at timestamp not yet finalized\""
                        },
                        "value": "EigenPodManager.getBlockRootAtTimestamp: state root at timestamp not yet finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cb9b4b068af8ae9f445159ecfa67746b2f6068a6228b4b4cf47f603d37dcccd",
                          "typeString": "literal_string \"EigenPodManager.getBlockRootAtTimestamp: state root at timestamp not yet finalized\""
                        }
                      ],
                      "id": 14020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15908:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15908:152:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14029,
                  "nodeType": "ExpressionStatement",
                  "src": "15908:152:31"
                },
                {
                  "expression": {
                    "id": 14030,
                    "name": "stateRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14014,
                    "src": "16077:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 14012,
                  "id": 14031,
                  "nodeType": "Return",
                  "src": "16070:16:31"
                }
              ]
            },
            "baseFunctions": [
              7586
            ],
            "documentation": {
              "id": 14006,
              "nodeType": "StructuredDocumentation",
              "src": "15598:133:31",
              "text": "@notice Returns the Beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized."
            },
            "functionSelector": "d1c64cc9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockRootAtTimestamp",
            "nameLocation": "15745:23:31",
            "parameters": {
              "id": 14009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14008,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "15776:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 14033,
                  "src": "15769:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 14007,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15769:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15768:18:31"
            },
            "returnParameters": {
              "id": 14012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14033,
                  "src": "15810:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15810:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15809:9:31"
            },
            "scope": 14059,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14058,
            "nodeType": "FunctionDefinition",
            "src": "16339:238:31",
            "nodes": [],
            "body": {
              "id": 14057,
              "nodeType": "Block",
              "src": "16398:179:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14040,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "16415:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 14057,
                      "src": "16408:16:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 14039,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "16408:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14042,
                  "initialValue": {
                    "id": 14041,
                    "name": "_denebForkTimestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14127,
                    "src": "16427:19:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16408:38:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 14045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14043,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14040,
                      "src": "16460:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 14044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16473:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16460:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 14055,
                    "nodeType": "Block",
                    "src": "16530:41:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 14053,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14040,
                          "src": "16551:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 14038,
                        "id": 14054,
                        "nodeType": "Return",
                        "src": "16544:16:31"
                      }
                    ]
                  },
                  "id": 14056,
                  "nodeType": "IfStatement",
                  "src": "16456:115:31",
                  "trueBody": {
                    "id": 14052,
                    "nodeType": "Block",
                    "src": "16476:48:31",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 14048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16502:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 14047,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16502:6:31",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                }
                              ],
                              "id": 14046,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "16497:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 14049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16497:12:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint64",
                              "typeString": "type(uint64)"
                            }
                          },
                          "id": 14050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "16497:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 14038,
                        "id": 14051,
                        "nodeType": "Return",
                        "src": "16490:23:31"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7669
            ],
            "documentation": {
              "id": 14034,
              "nodeType": "StructuredDocumentation",
              "src": "16099:235:31",
              "text": " @notice Wrapper around the `_denebForkTimestamp` storage variable that returns type(uint64).max if the storage variable is unset.\n @dev This allows restricting the storage variable to be set once and only once."
            },
            "functionSelector": "44e71c80",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "denebForkTimestamp",
            "nameLocation": "16348:18:31",
            "parameters": {
              "id": 14035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16366:2:31"
            },
            "returnParameters": {
              "id": 14038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14058,
                  "src": "16390:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 14036,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "16390:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16389:8:31"
            },
            "scope": 14059,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13174,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57298,
              "src": "955:13:31"
            },
            "id": 13175,
            "nodeType": "InheritanceSpecifier",
            "src": "955:13:31"
          },
          {
            "baseName": {
              "id": 13176,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57147,
              "src": "974:18:31"
            },
            "id": 13177,
            "nodeType": "InheritanceSpecifier",
            "src": "974:18:31"
          },
          {
            "baseName": {
              "id": 13178,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10782,
              "src": "998:8:31"
            },
            "id": 13179,
            "nodeType": "InheritanceSpecifier",
            "src": "998:8:31"
          },
          {
            "baseName": {
              "id": 13180,
              "name": "EigenPodPausingConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14200,
              "src": "1012:24:31"
            },
            "id": 13181,
            "nodeType": "InheritanceSpecifier",
            "src": "1012:24:31"
          },
          {
            "baseName": {
              "id": 13182,
              "name": "EigenPodManagerStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14172,
              "src": "1042:22:31"
            },
            "id": 13183,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:22:31"
          },
          {
            "baseName": {
              "id": 13184,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57357,
              "src": "1070:26:31"
            },
            "id": 13185,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:26:31"
          }
        ],
        "canonicalName": "EigenPodManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13173,
          "nodeType": "StructuredDocumentation",
          "src": "512:410:31",
          "text": " @title The contract used for creating and managing EigenPods\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice The main functionalities are:\n - creating EigenPods\n - staking for new validators on EigenPods\n - keeping track of the restaked balances of all EigenPod owners\n - withdrawing eth when withdrawals are completed"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14059,
          57357,
          14172,
          7676,
          14200,
          10782,
          7748,
          57147,
          57642,
          57298
        ],
        "name": "EigenPodManager",
        "nameLocation": "932:15:31",
        "scope": 14060,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 31
}