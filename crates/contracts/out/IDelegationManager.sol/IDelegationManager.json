{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MinWithdrawalDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "newOperatorDetails",
          "type": "tuple"
        }
      ],
      "name": "OperatorDetailsModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "OperatorMetadataURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "operatorDetails",
          "type": "tuple"
        }
      ],
      "name": "OperatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "OperatorSharesDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "OperatorSharesIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerForceUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "StakerUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "StrategyWithdrawalDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "oldWithdrawalRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newWithdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        }
      ],
      "name": "WithdrawalQueued",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_APPROVAL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKER_DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateCurrentStakerDelegationDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegationApprover",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateDelegationApprovalDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stakerNonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "calculateStakerDelegationDigestHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        }
      ],
      "name": "calculateWithdrawalRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal",
          "name": "withdrawal",
          "type": "tuple"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "middlewareTimesIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "receiveAsTokens",
          "type": "bool"
        }
      ],
      "name": "completeQueuedWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startBlock",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct IDelegationManager.Withdrawal[]",
          "name": "withdrawals",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[][]",
          "name": "tokens",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "middlewareTimesIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "receiveAsTokens",
          "type": "bool[]"
        }
      ],
      "name": "completeQueuedWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "cumulativeWithdrawalsQueued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "decreaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "approverSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        }
      ],
      "name": "delegateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "stakerSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "name": "approverSignatureAndExpiry",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "approverSalt",
          "type": "bytes32"
        }
      ],
      "name": "delegateToBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "delegatedTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "delegationApprover",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegationApprover",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "delegationApproverSaltIsSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "earningsReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "getOperatorShares",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "name": "getWithdrawalDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "increaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
          "name": "withdrawalsToQueue",
          "type": "tuple[]"
        }
      ],
      "name": "migrateQueuedWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minWithdrawalDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "newOperatorDetails",
          "type": "tuple"
        }
      ],
      "name": "modifyOperatorDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "operatorDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "operatorShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            }
          ],
          "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
          "name": "queuedWithdrawalParams",
          "type": "tuple[]"
        }
      ],
      "name": "queueWithdrawals",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "earningsReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegationApprover",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32"
            }
          ],
          "internalType": "struct IDelegationManager.OperatorDetails",
          "name": "registeringOperatorDetails",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "registerAsOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "stakerNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "stakerOptOutWindowBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "strategyWithdrawalDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "undelegate",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "withdrawalRoot",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "updateOperatorMetadataURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
    "DOMAIN_TYPEHASH()": "20606b70",
    "STAKER_DELEGATION_TYPEHASH()": "43377382",
    "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": "1bbce091",
    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
    "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": "c94b5111",
    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": "60d7faed",
    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": "33404396",
    "cumulativeWithdrawalsQueued(address)": "a1788484",
    "decreaseDelegatedShares(address,address,uint256)": "132d4967",
    "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
    "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": "7f548071",
    "delegatedTo(address)": "65da1264",
    "delegationApprover(address)": "3cdeb5e0",
    "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
    "domainSeparator()": "f698da25",
    "earningsReceiver(address)": "5f966f14",
    "getOperatorShares(address,address[])": "90041347",
    "getWithdrawalDelay(address[])": "0449ca39",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "isDelegated(address)": "3e28391d",
    "isOperator(address)": "6d70f7ae",
    "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": "5cfe8d2c",
    "minWithdrawalDelayBlocks()": "c448feb8",
    "modifyOperatorDetails((address,address,uint32))": "f16172b0",
    "operatorDetails(address)": "c5e480db",
    "operatorShares(address,address)": "778e55f3",
    "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
    "registerAsOperator((address,address,uint32),string)": "0f589e59",
    "stakerNonce(address)": "29c77d4f",
    "stakerOptOutWindowBlocks(address)": "16928365",
    "strategyWithdrawalDelayBlocks(address)": "c488375a",
    "undelegate(address)": "da8be864",
    "updateOperatorMetadataURI(string)": "99be81c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldWithdrawalRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newWithdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"earningsReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]\",\"name\":\"withdrawalsToQueue\",\"type\":\"tuple[]\"}],\"name\":\"migrateQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"params\":{\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"cumulativeWithdrawalsQueued(address)\":{\"details\":\"This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"delegatedTo(address)\":{\"details\":\"Note that returning address(0) indicates that the staker is not actively delegated to any operator.\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"details\":\"Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`.\"},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"operatorShares(address,address)\":{\"details\":\"By design, the following invariant should hold for each Strategy: (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator) = sum (delegateable shares of all stakers delegated to the operator)\"},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"undelegate(address)\":{\"details\":\"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \\\"delegationApprover\\\"Reverts if the `staker` is already undelegated.\",\"params\":{\"staker\":\"The account to be undelegated.\"},\"returns\":{\"withdrawalRoot\":\"The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\"}},\"updateOperatorMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalMigrated(bytes32,bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is *migrated* from the StrategyManager to the DelegationManager\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the DelegationApproval struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the StakerDelegation struct used by the contract\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"returns the address of the operator that `staker` is delegated to.Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced). Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Undelegates the staker from the operator who they are delegated to. Puts the staker into the \\\"undelegation limbo\\\" mode of the EigenPodManager and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":\"IDelegationManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDetailsModified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "operatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerForceUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "oldWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalMigrated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKER_DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateCurrentStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDelegationApprovalDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_stakerNonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "middlewareTimesIndex",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "uint256[]",
              "name": "middlewareTimesIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "stakerSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApproverSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earningsReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawalDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
              "name": "withdrawalsToQueue",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateQueuedWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOperatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorDetails",
          "outputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
              "name": "queuedWithdrawalParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "registeringOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerOptOutWindowBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoot",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "params": {
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "params": {
              "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
              "approverSalt": "A unique and single use value associated with the approver signature.",
              "expiry": "Time after which the approver's signature becomes invalid",
              "operator": "The account receiving delegated stake",
              "staker": "The account delegating their stake"
            }
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "params": {
              "_stakerNonce": "The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`",
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "details": "middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.",
            "params": {
              "middlewareTimesIndex": "is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array",
              "receiveAsTokens": "If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)",
              "withdrawal": "The Withdrawal to complete."
            }
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "details": "See `completeQueuedWithdrawal` for relevant dev tags",
            "params": {
              "middlewareTimesIndexes": "One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.",
              "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
              "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
              "withdrawals": "The Withdrawals to complete."
            }
          },
          "cumulativeWithdrawalsQueued(address)": {
            "details": "This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to decrease.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to decrease the delegated shares."
            }
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "details": "The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "A unique single use value tied to an individual signature.",
              "approverSignatureAndExpiry": "Verifies the operator approves of this delegation",
              "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
            }
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "details": "If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.",
              "approverSignatureAndExpiry": "is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:",
              "operator": "The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.",
              "staker": "The account delegating stake to an `operator` account",
              "stakerSignatureAndExpiry": "Signed data from the staker authorizing delegating stake to an operator"
            }
          },
          "delegatedTo(address)": {
            "details": "Note that returning address(0) indicates that the staker is not actively delegated to any operator."
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "details": "Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`."
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."
          },
          "getWithdrawalDelay(address[])": {
            "params": {
              "strategies": "The strategies to check withdrawal delays for"
            }
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to increase.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to increase the delegated shares."
            }
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "details": "The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).",
            "params": {
              "newOperatorDetails": "is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."
            }
          },
          "operatorShares(address,address)": {
            "details": "By design, the following invariant should hold for each Strategy: (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator) = sum (delegateable shares of all stakers delegated to the operator)"
          },
          "registerAsOperator((address,address,uint32),string)": {
            "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator.",
              "registeringOperatorDetails": "is the `OperatorDetails` for the operator."
            }
          },
          "undelegate(address)": {
            "details": "Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"Reverts if the `staker` is already undelegated.",
            "params": {
              "staker": "The account to be undelegated."
            },
            "returns": {
              "withdrawalRoot": "The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0)."
            }
          },
          "updateOperatorMetadataURI(string)": {
            "details": "Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "The URI for metadata associated with an operator"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the DelegationApproval struct used by the contract"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "STAKER_DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the StakerDelegation struct used by the contract"
          },
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "notice": "Calculates the digestHash for a `staker` to sign to delegate to an `operator`"
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "notice": "Calculates the digest hash to be signed and used in the `delegateToBySignature` function"
          },
          "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
            "notice": "Returns the keccak256 hash of `withdrawal`."
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "notice": "Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "notice": "Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"
          },
          "cumulativeWithdrawalsQueued(address)": {
            "notice": "Mapping: staker => cumulative number of queued withdrawals they have ever initiated."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "notice": "Decreases a staker's delegated share balance in a strategy."
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "notice": "Caller delegates their stake to an operator."
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "notice": "Caller delegates a staker's stake to an operator with valid signatures from both parties."
          },
          "delegatedTo(address)": {
            "notice": "returns the address of the operator that `staker` is delegated to.Mapping: staker => operator whom the staker is currently delegated to."
          },
          "delegationApprover(address)": {
            "notice": "Returns the delegationApprover account for an operator"
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "notice": "Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."
          },
          "domainSeparator()": {
            "notice": "Getter function for the current EIP-712 domain separator for this contract."
          },
          "getOperatorShares(address,address[])": {
            "notice": "Given array of strategies, returns array of shares for the operator"
          },
          "getWithdrawalDelay(address[])": {
            "notice": "Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases a staker's delegated share balance in a strategy."
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns true is an operator has previously registered for delegation."
          },
          "minWithdrawalDelayBlocks()": {
            "notice": "Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced). Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "notice": "Updates an operator's stored `OperatorDetails`."
          },
          "operatorDetails(address)": {
            "notice": "Returns the OperatorDetails struct associated with an `operator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "notice": "Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
          },
          "registerAsOperator((address,address,uint32),string)": {
            "notice": "Registers the caller as an operator in EigenLayer."
          },
          "stakerNonce(address)": {
            "notice": "Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked"
          },
          "stakerOptOutWindowBlocks(address)": {
            "notice": "Returns the stakerOptOutWindowBlocks for an operator"
          },
          "strategyWithdrawalDelayBlocks(address)": {
            "notice": "Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
          },
          "undelegate(address)": {
            "notice": "Undelegates the staker from the operator who they are delegated to. Puts the staker into the \"undelegation limbo\" mode of the EigenPodManager and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary."
          },
          "updateOperatorMetadataURI(string)": {
            "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": "IDelegationManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol",
    "id": 7103,
    "exportedSymbols": {
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "ISignatureUtils": [
        7794
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:26173:11",
    "nodes": [
      {
        "id": 6598,
        "nodeType": "PragmaDirective",
        "src": "37:24:11",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 6599,
        "nodeType": "ImportDirective",
        "src": "63:25:11",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol",
        "file": "./IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7103,
        "sourceUnit": 8136,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6600,
        "nodeType": "ImportDirective",
        "src": "89:31:11",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol",
        "file": "./ISignatureUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7103,
        "sourceUnit": 7795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6601,
        "nodeType": "ImportDirective",
        "src": "121:32:11",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol",
        "file": "./IStrategyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7103,
        "sourceUnit": 8384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7102,
        "nodeType": "ContractDefinition",
        "src": "871:25338:11",
        "nodes": [
          {
            "id": 6613,
            "nodeType": "StructDefinition",
            "src": "1035:1565:11",
            "nodes": [],
            "canonicalName": "IDelegationManager.OperatorDetails",
            "members": [
              {
                "constant": false,
                "id": 6606,
                "mutability": "mutable",
                "name": "earningsReceiver",
                "nameLocation": "1196:16:11",
                "nodeType": "VariableDeclaration",
                "scope": 6613,
                "src": "1188:24:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6605,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6609,
                "mutability": "mutable",
                "name": "delegationApprover",
                "nameLocation": "1934:18:11",
                "nodeType": "VariableDeclaration",
                "scope": 6613,
                "src": "1926:26:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6608,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1926:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6612,
                "mutability": "mutable",
                "name": "stakerOptOutWindowBlocks",
                "nameLocation": "2569:24:11",
                "nodeType": "VariableDeclaration",
                "scope": 6613,
                "src": "2562:31:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6611,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2562:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OperatorDetails",
            "nameLocation": "1042:15:11",
            "scope": 7102,
            "visibility": "public"
          },
          {
            "id": 6622,
            "nodeType": "StructDefinition",
            "src": "2950:300:11",
            "nodes": [],
            "canonicalName": "IDelegationManager.StakerDelegation",
            "members": [
              {
                "constant": false,
                "id": 6615,
                "mutability": "mutable",
                "name": "staker",
                "nameLocation": "3032:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6622,
                "src": "3024:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6614,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3024:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6617,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "3099:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 6622,
                "src": "3091:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6616,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3091:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6619,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "3155:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 6622,
                "src": "3147:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6618,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3147:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6621,
                "mutability": "mutable",
                "name": "expiry",
                "nameLocation": "3237:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6622,
                "src": "3229:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6620,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3229:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakerDelegation",
            "nameLocation": "2957:16:11",
            "scope": 7102,
            "visibility": "public"
          },
          {
            "id": 6631,
            "nodeType": "StructDefinition",
            "src": "3598:311:11",
            "nodes": [],
            "canonicalName": "IDelegationManager.DelegationApproval",
            "members": [
              {
                "constant": false,
                "id": 6624,
                "mutability": "mutable",
                "name": "staker",
                "nameLocation": "3682:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6631,
                "src": "3674:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6623,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3674:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6626,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "3749:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 6631,
                "src": "3741:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6625,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3741:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6628,
                "mutability": "mutable",
                "name": "salt",
                "nameLocation": "3815:4:11",
                "nodeType": "VariableDeclaration",
                "scope": 6631,
                "src": "3807:12:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6627,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3807:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6630,
                "mutability": "mutable",
                "name": "expiry",
                "nameLocation": "3896:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6631,
                "src": "3888:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6629,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3888:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelegationApproval",
            "nameLocation": "3605:18:11",
            "scope": 7102,
            "visibility": "public"
          },
          {
            "id": 6649,
            "nodeType": "StructDefinition",
            "src": "4358:775:11",
            "nodes": [],
            "canonicalName": "IDelegationManager.Withdrawal",
            "members": [
              {
                "constant": false,
                "id": 6633,
                "mutability": "mutable",
                "name": "staker",
                "nameLocation": "4448:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4440:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6632,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4440:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6635,
                "mutability": "mutable",
                "name": "delegatedTo",
                "nameLocation": "4572:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4564:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6634,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4564:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6637,
                "mutability": "mutable",
                "name": "withdrawer",
                "nameLocation": "4709:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4701:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6636,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4701:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6639,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "4828:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4820:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6638,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4820:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6641,
                "mutability": "mutable",
                "name": "startBlock",
                "nameLocation": "4906:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4899:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6640,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "4899:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6645,
                "mutability": "mutable",
                "name": "strategies",
                "nameLocation": "4998:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "4986:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                  "typeString": "contract IStrategy[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 6643,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6642,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "4986:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "4986:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 6644,
                  "nodeType": "ArrayTypeName",
                  "src": "4986:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                    "typeString": "contract IStrategy[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6648,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "5120:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6649,
                "src": "5110:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 6646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6647,
                  "nodeType": "ArrayTypeName",
                  "src": "5110:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Withdrawal",
            "nameLocation": "4365:10:11",
            "scope": 7102,
            "visibility": "public"
          },
          {
            "id": 6659,
            "nodeType": "StructDefinition",
            "src": "5139:322:11",
            "nodes": [],
            "canonicalName": "IDelegationManager.QueuedWithdrawalParams",
            "members": [
              {
                "constant": false,
                "id": 6653,
                "mutability": "mutable",
                "name": "strategies",
                "nameLocation": "5257:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 6659,
                "src": "5245:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                  "typeString": "contract IStrategy[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 6651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6650,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "5245:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "5245:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 6652,
                  "nodeType": "ArrayTypeName",
                  "src": "5245:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                    "typeString": "contract IStrategy[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6656,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "5379:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 6659,
                "src": "5369:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 6654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6655,
                  "nodeType": "ArrayTypeName",
                  "src": "5369:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6658,
                "mutability": "mutable",
                "name": "withdrawer",
                "nameLocation": "5444:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 6659,
                "src": "5436:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6657,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5436:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "QueuedWithdrawalParams",
            "nameLocation": "5146:22:11",
            "scope": 7102,
            "visibility": "public"
          },
          {
            "id": 6666,
            "nodeType": "EventDefinition",
            "src": "5570:84:11",
            "nodes": [],
            "anonymous": false,
            "name": "OperatorRegistered",
            "nameLocation": "5576:18:11",
            "parameters": {
              "id": 6665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6661,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5611:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "5595:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6664,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorDetails",
                  "nameLocation": "5637:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "5621:31:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_memory_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 6663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6662,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "5621:15:11"
                    },
                    "referencedDeclaration": 6613,
                    "src": "5621:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:59:11"
            }
          },
          {
            "id": 6674,
            "nodeType": "EventDefinition",
            "src": "5760:92:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6667,
              "nodeType": "StructuredDocumentation",
              "src": "5660:95:11",
              "text": "@notice Emitted when an operator updates their OperatorDetails to @param newOperatorDetails"
            },
            "name": "OperatorDetailsModified",
            "nameLocation": "5766:23:11",
            "parameters": {
              "id": 6673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6669,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5806:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6674,
                  "src": "5790:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5790:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOperatorDetails",
                  "nameLocation": "5832:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6674,
                  "src": "5816:34:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_memory_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 6671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6670,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "5816:15:11"
                    },
                    "referencedDeclaration": 6613,
                    "src": "5816:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5789:62:11"
            }
          },
          {
            "id": 6681,
            "nodeType": "EventDefinition",
            "src": "6106:79:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6675,
              "nodeType": "StructuredDocumentation",
              "src": "5858:243:11",
              "text": " @notice Emitted when @param operator indicates that they are updating their MetadataURI string\n @dev Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing"
            },
            "name": "OperatorMetadataURIUpdated",
            "nameLocation": "6112:26:11",
            "parameters": {
              "id": 6680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6155:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6681,
                  "src": "6139:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6679,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "6172:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6681,
                  "src": "6165:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6138:46:11"
            }
          },
          {
            "id": 6693,
            "nodeType": "EventDefinition",
            "src": "6337:108:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6682,
              "nodeType": "StructuredDocumentation",
              "src": "6191:141:11",
              "text": "@notice Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares."
            },
            "name": "OperatorSharesIncreased",
            "nameLocation": "6343:23:11",
            "parameters": {
              "id": 6692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6383:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6367:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6367:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6686,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6401:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6393:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "6419:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6409:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6688,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6687,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "6409:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "6409:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6691,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6437:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6429:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6429:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6366:78:11"
            }
          },
          {
            "id": 6705,
            "nodeType": "EventDefinition",
            "src": "6597:108:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6694,
              "nodeType": "StructuredDocumentation",
              "src": "6451:141:11",
              "text": "@notice Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares."
            },
            "name": "OperatorSharesDecreased",
            "nameLocation": "6603:23:11",
            "parameters": {
              "id": 6704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6696,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6643:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6705,
                  "src": "6627:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6627:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6698,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6661:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6705,
                  "src": "6653:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6653:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6701,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "6679:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6705,
                  "src": "6669:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6700,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6699,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "6669:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "6669:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6703,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6697:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6705,
                  "src": "6689:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6689:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6626:78:11"
            }
          },
          {
            "id": 6712,
            "nodeType": "EventDefinition",
            "src": "6784:72:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6706,
              "nodeType": "StructuredDocumentation",
              "src": "6711:68:11",
              "text": "@notice Emitted when @param staker delegates to @param operator."
            },
            "name": "StakerDelegated",
            "nameLocation": "6790:15:11",
            "parameters": {
              "id": 6711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6708,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6822:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6712,
                  "src": "6806:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6710,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6846:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6712,
                  "src": "6830:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6830:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6805:50:11"
            }
          },
          {
            "id": 6719,
            "nodeType": "EventDefinition",
            "src": "6939:74:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6713,
              "nodeType": "StructuredDocumentation",
              "src": "6862:72:11",
              "text": "@notice Emitted when @param staker undelegates from @param operator."
            },
            "name": "StakerUndelegated",
            "nameLocation": "6945:17:11",
            "parameters": {
              "id": 6718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6715,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6979:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6719,
                  "src": "6963:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6963:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6717,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7003:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6719,
                  "src": "6987:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6987:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6962:50:11"
            }
          },
          {
            "id": 6726,
            "nodeType": "EventDefinition",
            "src": "7129:79:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6720,
              "nodeType": "StructuredDocumentation",
              "src": "7019:105:11",
              "text": "@notice Emitted when @param staker is undelegated via a call not originating from the staker themself"
            },
            "name": "StakerForceUndelegated",
            "nameLocation": "7135:22:11",
            "parameters": {
              "id": 6725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6722,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7174:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6726,
                  "src": "7158:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7158:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6724,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7198:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6726,
                  "src": "7182:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7182:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7157:50:11"
            }
          },
          {
            "id": 6734,
            "nodeType": "EventDefinition",
            "src": "7399:70:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6727,
              "nodeType": "StructuredDocumentation",
              "src": "7214:180:11",
              "text": " @notice Emitted when a new withdrawal is queued.\n @param withdrawalRoot Is the hash of the `withdrawal`.\n @param withdrawal Is the withdrawal itself."
            },
            "name": "WithdrawalQueued",
            "nameLocation": "7405:16:11",
            "parameters": {
              "id": 6733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6729,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "7430:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6734,
                  "src": "7422:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "7457:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6734,
                  "src": "7446:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 6731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6730,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "7446:10:11"
                    },
                    "referencedDeclaration": 6649,
                    "src": "7446:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7421:47:11"
            }
          },
          {
            "id": 6739,
            "nodeType": "EventDefinition",
            "src": "7537:50:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6735,
              "nodeType": "StructuredDocumentation",
              "src": "7475:57:11",
              "text": "@notice Emitted when a queued withdrawal is completed"
            },
            "name": "WithdrawalCompleted",
            "nameLocation": "7543:19:11",
            "parameters": {
              "id": 6738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "7571:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6739,
                  "src": "7563:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7563:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7562:24:11"
            }
          },
          {
            "id": 6746,
            "nodeType": "EventDefinition",
            "src": "7706:79:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6740,
              "nodeType": "StructuredDocumentation",
              "src": "7593:108:11",
              "text": "@notice Emitted when a queued withdrawal is *migrated* from the StrategyManager to the DelegationManager"
            },
            "name": "WithdrawalMigrated",
            "nameLocation": "7712:18:11",
            "parameters": {
              "id": 6745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6742,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldWithdrawalRoot",
                  "nameLocation": "7739:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6746,
                  "src": "7731:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7731:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6744,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newWithdrawalRoot",
                  "nameLocation": "7766:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6746,
                  "src": "7758:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6743,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7730:54:11"
            }
          },
          {
            "id": 6753,
            "nodeType": "EventDefinition",
            "src": "7912:75:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6747,
              "nodeType": "StructuredDocumentation",
              "src": "7795:112:11",
              "text": "@notice Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`."
            },
            "name": "MinWithdrawalDelayBlocksSet",
            "nameLocation": "7918:27:11",
            "parameters": {
              "id": 6752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousValue",
                  "nameLocation": "7954:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6753,
                  "src": "7946:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7946:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "7977:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6753,
                  "src": "7969:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7945:41:11"
            }
          },
          {
            "id": 6763,
            "nodeType": "EventDefinition",
            "src": "8115:100:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6754,
              "nodeType": "StructuredDocumentation",
              "src": "7993:117:11",
              "text": "@notice Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`."
            },
            "name": "StrategyWithdrawalDelayBlocksSet",
            "nameLocation": "8121:32:11",
            "parameters": {
              "id": 6762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6757,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "8164:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6763,
                  "src": "8154:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6756,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6755,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "8154:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "8154:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6759,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousValue",
                  "nameLocation": "8182:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6763,
                  "src": "8174:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8174:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6761,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "8205:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6763,
                  "src": "8197:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8197:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8153:61:11"
            }
          },
          {
            "id": 6772,
            "nodeType": "FunctionDefinition",
            "src": "8885:141:11",
            "nodes": [],
            "documentation": {
              "id": 6764,
              "nodeType": "StructuredDocumentation",
              "src": "8221:659:11",
              "text": " @notice Registers the caller as an operator in EigenLayer.\n @param registeringOperatorDetails is the `OperatorDetails` for the operator.\n @param metadataURI is a URI for the operator's metadata, i.e. a link providing more details on the operator.\n @dev Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".\n @dev This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event"
            },
            "functionSelector": "0f589e59",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsOperator",
            "nameLocation": "8894:18:11",
            "parameters": {
              "id": 6770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6767,
                  "mutability": "mutable",
                  "name": "registeringOperatorDetails",
                  "nameLocation": "8947:26:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6772,
                  "src": "8922:51:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 6766,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6765,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "8922:15:11"
                    },
                    "referencedDeclaration": 6613,
                    "src": "8922:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6769,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "8999:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6772,
                  "src": "8983:27:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8983:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8912:104:11"
            },
            "returnParameters": {
              "id": 6771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9025:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6779,
            "nodeType": "FunctionDefinition",
            "src": "9438:85:11",
            "nodes": [],
            "documentation": {
              "id": 6773,
              "nodeType": "StructuredDocumentation",
              "src": "9032:401:11",
              "text": " @notice Updates an operator's stored `OperatorDetails`.\n @param newOperatorDetails is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\n @dev The caller must have previously registered as an operator in EigenLayer.\n @dev This function will revert if the caller attempts to set their `earningsReceiver` to address(0)."
            },
            "functionSelector": "f16172b0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyOperatorDetails",
            "nameLocation": "9447:21:11",
            "parameters": {
              "id": 6777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6776,
                  "mutability": "mutable",
                  "name": "newOperatorDetails",
                  "nameLocation": "9494:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6779,
                  "src": "9469:43:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_calldata_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 6775,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6774,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "9469:15:11"
                    },
                    "referencedDeclaration": 6613,
                    "src": "9469:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9468:45:11"
            },
            "returnParameters": {
              "id": 6778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9522:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6785,
            "nodeType": "FunctionDefinition",
            "src": "9864:73:11",
            "nodes": [],
            "documentation": {
              "id": 6780,
              "nodeType": "StructuredDocumentation",
              "src": "9529:330:11",
              "text": " @notice Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\n @param metadataURI The URI for metadata associated with an operator\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event"
            },
            "functionSelector": "99be81c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorMetadataURI",
            "nameLocation": "9873:25:11",
            "parameters": {
              "id": 6783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6782,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "9915:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "9899:27:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9899:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9898:29:11"
            },
            "returnParameters": {
              "id": 6784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9936:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6796,
            "nodeType": "FunctionDefinition",
            "src": "10940:154:11",
            "nodes": [],
            "documentation": {
              "id": 6786,
              "nodeType": "StructuredDocumentation",
              "src": "9943:992:11",
              "text": " @notice Caller delegates their stake to an operator.\n @param operator The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param approverSignatureAndExpiry Verifies the operator approves of this delegation\n @param approverSalt A unique single use value tied to an individual signature.\n @dev The approverSignatureAndExpiry is used in the event that:\n          1) the operator's `delegationApprover` address is set to a non-zero value.\n                  AND\n          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator\n             or their delegationApprover is the `msg.sender`, then approval is assumed.\n @dev In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"
            },
            "functionSelector": "eea9064b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateTo",
            "nameLocation": "10949:10:11",
            "parameters": {
              "id": 6794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6788,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10977:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6796,
                  "src": "10969:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10969:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6791,
                  "mutability": "mutable",
                  "name": "approverSignatureAndExpiry",
                  "nameLocation": "11022:26:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6796,
                  "src": "10995:53:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 6790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6789,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "10995:19:11"
                    },
                    "referencedDeclaration": 7786,
                    "src": "10995:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6793,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "11066:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6796,
                  "src": "11058:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11058:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10959:125:11"
            },
            "returnParameters": {
              "id": 6795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11093:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6812,
            "nodeType": "FunctionDefinition",
            "src": "12695:250:11",
            "nodes": [],
            "documentation": {
              "id": 6797,
              "nodeType": "StructuredDocumentation",
              "src": "11100:1590:11",
              "text": " @notice Caller delegates a staker's stake to an operator with valid signatures from both parties.\n @param staker The account delegating stake to an `operator` account\n @param operator The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param stakerSignatureAndExpiry Signed data from the staker authorizing delegating stake to an operator\n @param approverSignatureAndExpiry is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\n @param approverSalt Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\n @dev If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.\n @dev If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.\n @dev the operator's `delegationApprover` address is set to a non-zero value.\n @dev neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover\n is the `msg.sender`, then approval is assumed.\n @dev This function will revert if the current `block.timestamp` is equal to or exceeds the expiry\n @dev In the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"
            },
            "functionSelector": "7f548071",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateToBySignature",
            "nameLocation": "12704:21:11",
            "parameters": {
              "id": 6810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6799,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "12743:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "12735:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12735:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6801,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12767:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "12759:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12759:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6804,
                  "mutability": "mutable",
                  "name": "stakerSignatureAndExpiry",
                  "nameLocation": "12812:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "12785:51:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 6803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6802,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "12785:19:11"
                    },
                    "referencedDeclaration": 7786,
                    "src": "12785:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6807,
                  "mutability": "mutable",
                  "name": "approverSignatureAndExpiry",
                  "nameLocation": "12873:26:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "12846:53:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_memory_ptr",
                    "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                  },
                  "typeName": {
                    "id": 6806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6805,
                      "name": "SignatureWithExpiry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7786,
                      "src": "12846:19:11"
                    },
                    "referencedDeclaration": 7786,
                    "src": "12846:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignatureWithExpiry_$7786_storage_ptr",
                      "typeString": "struct ISignatureUtils.SignatureWithExpiry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6809,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "12917:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "12909:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6808,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12909:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12725:210:11"
            },
            "returnParameters": {
              "id": 6811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12944:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6821,
            "nodeType": "FunctionDefinition",
            "src": "13756:87:11",
            "nodes": [],
            "documentation": {
              "id": 6813,
              "nodeType": "StructuredDocumentation",
              "src": "12951:800:11",
              "text": " @notice Undelegates the staker from the operator who they are delegated to. Puts the staker into the \"undelegation limbo\" mode of the EigenPodManager\n and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\n @param staker The account to be undelegated.\n @return withdrawalRoot The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\n @dev Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.\n @dev Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"\n @dev Reverts if the `staker` is already undelegated."
            },
            "functionSelector": "da8be864",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "undelegate",
            "nameLocation": "13765:10:11",
            "parameters": {
              "id": 6816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6815,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "13784:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6821,
                  "src": "13776:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13776:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13775:16:11"
            },
            "returnParameters": {
              "id": 6820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6819,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "13827:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6821,
                  "src": "13810:31:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6817,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "13810:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6818,
                    "nodeType": "ArrayTypeName",
                    "src": "13810:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13809:33:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6832,
            "nodeType": "FunctionDefinition",
            "src": "14200:134:11",
            "nodes": [],
            "documentation": {
              "id": 6822,
              "nodeType": "StructuredDocumentation",
              "src": "13849:346:11",
              "text": " Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed\n from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from\n their operator.\n All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
            },
            "functionSelector": "0dd8dd02",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "queueWithdrawals",
            "nameLocation": "14209:16:11",
            "parameters": {
              "id": 6827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6826,
                  "mutability": "mutable",
                  "name": "queuedWithdrawalParams",
                  "nameLocation": "14269:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6832,
                  "src": "14235:56:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDelegationManager.QueuedWithdrawalParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6824,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6823,
                        "name": "QueuedWithdrawalParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6659,
                        "src": "14235:22:11"
                      },
                      "referencedDeclaration": 6659,
                      "src": "14235:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawalParams_$6659_storage_ptr",
                        "typeString": "struct IDelegationManager.QueuedWithdrawalParams"
                      }
                    },
                    "id": 6825,
                    "nodeType": "ArrayTypeName",
                    "src": "14235:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawalParams_$6659_storage_$dyn_storage_ptr",
                      "typeString": "struct IDelegationManager.QueuedWithdrawalParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14225:72:11"
            },
            "returnParameters": {
              "id": 6831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6832,
                  "src": "14316:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6828,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "14316:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6829,
                    "nodeType": "ArrayTypeName",
                    "src": "14316:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14315:18:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6847,
            "nodeType": "FunctionDefinition",
            "src": "15846:191:11",
            "nodes": [],
            "documentation": {
              "id": 6833,
              "nodeType": "StructuredDocumentation",
              "src": "14340:1501:11",
              "text": " @notice Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\n @param withdrawal The Withdrawal to complete.\n @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.\n This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\n @param middlewareTimesIndex is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n @param receiveAsTokens If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves\n and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies\n will simply be transferred to the caller directly.\n @dev middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`\n @dev beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that\n any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in\n any other strategies, which will be transferred to the withdrawer."
            },
            "functionSelector": "60d7faed",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "completeQueuedWithdrawal",
            "nameLocation": "15855:24:11",
            "parameters": {
              "id": 6845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6836,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "15909:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6847,
                  "src": "15889:30:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_calldata_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 6835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6834,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "15889:10:11"
                    },
                    "referencedDeclaration": 6649,
                    "src": "15889:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6840,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "15947:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6847,
                  "src": "15929:24:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6838,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6837,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 59726,
                        "src": "15929:6:11"
                      },
                      "referencedDeclaration": 59726,
                      "src": "15929:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$59726",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 6839,
                    "nodeType": "ArrayTypeName",
                    "src": "15929:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6842,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndex",
                  "nameLocation": "15971:20:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6847,
                  "src": "15963:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15963:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6844,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "16006:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6847,
                  "src": "16001:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6843,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16001:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15879:148:11"
            },
            "returnParameters": {
              "id": 6846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16036:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6866,
            "nodeType": "FunctionDefinition",
            "src": "16771:221:11",
            "nodes": [],
            "documentation": {
              "id": 6848,
              "nodeType": "StructuredDocumentation",
              "src": "16043:723:11",
              "text": " @notice Array-ified version of `completeQueuedWithdrawal`.\n Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\n @param withdrawals The Withdrawals to complete.\n @param tokens Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\n @param middlewareTimesIndexes One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\n @param receiveAsTokens Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\n @dev See `completeQueuedWithdrawal` for relevant dev tags"
            },
            "functionSelector": "33404396",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "completeQueuedWithdrawals",
            "nameLocation": "16780:25:11",
            "parameters": {
              "id": 6864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6852,
                  "mutability": "mutable",
                  "name": "withdrawals",
                  "nameLocation": "16837:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6866,
                  "src": "16815:33:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6850,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6849,
                        "name": "Withdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6649,
                        "src": "16815:10:11"
                      },
                      "referencedDeclaration": 6649,
                      "src": "16815:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                        "typeString": "struct IDelegationManager.Withdrawal"
                      }
                    },
                    "id": 6851,
                    "nodeType": "ArrayTypeName",
                    "src": "16815:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$6649_storage_$dyn_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6857,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "16878:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6866,
                  "src": "16858:26:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$59726_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 6854,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6853,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59726,
                          "src": "16858:6:11"
                        },
                        "referencedDeclaration": 59726,
                        "src": "16858:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$59726",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6855,
                      "nodeType": "ArrayTypeName",
                      "src": "16858:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$59726_$dyn_storage_ptr",
                        "typeString": "contract IERC20[]"
                      }
                    },
                    "id": 6856,
                    "nodeType": "ArrayTypeName",
                    "src": "16858:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$59726_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "contract IERC20[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6860,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndexes",
                  "nameLocation": "16913:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6866,
                  "src": "16894:41:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6858,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16894:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6859,
                    "nodeType": "ArrayTypeName",
                    "src": "16894:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6863,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "16961:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6866,
                  "src": "16945:31:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6861,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "16945:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6862,
                    "nodeType": "ArrayTypeName",
                    "src": "16945:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16805:177:11"
            },
            "returnParameters": {
              "id": 6865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16991:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6877,
            "nodeType": "FunctionDefinition",
            "src": "17534:124:11",
            "nodes": [],
            "documentation": {
              "id": 6867,
              "nodeType": "StructuredDocumentation",
              "src": "16998:531:11",
              "text": " @notice Increases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to increase the delegated shares.\n @param shares The number of shares to increase.\n @dev *If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."
            },
            "functionSelector": "28a573ae",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseDelegatedShares",
            "nameLocation": "17543:23:11",
            "parameters": {
              "id": 6875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6869,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "17584:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6877,
                  "src": "17576:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17576:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6872,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "17610:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6877,
                  "src": "17600:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6870,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "17600:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "17600:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6874,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "17636:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6877,
                  "src": "17628:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17628:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17566:82:11"
            },
            "returnParameters": {
              "id": 6876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17657:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6888,
            "nodeType": "FunctionDefinition",
            "src": "18200:124:11",
            "nodes": [],
            "documentation": {
              "id": 6878,
              "nodeType": "StructuredDocumentation",
              "src": "17664:531:11",
              "text": " @notice Decreases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to decrease the delegated shares.\n @param shares The number of shares to decrease.\n @dev *If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."
            },
            "functionSelector": "132d4967",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseDelegatedShares",
            "nameLocation": "18209:23:11",
            "parameters": {
              "id": 6886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6880,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "18250:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6888,
                  "src": "18242:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18242:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6883,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "18276:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6888,
                  "src": "18266:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6882,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6881,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "18266:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "18266:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6885,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "18302:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6888,
                  "src": "18294:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18294:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18232:82:11"
            },
            "returnParameters": {
              "id": 6887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18323:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6896,
            "nodeType": "FunctionDefinition",
            "src": "18626:69:11",
            "nodes": [],
            "documentation": {
              "id": 6889,
              "nodeType": "StructuredDocumentation",
              "src": "18330:291:11",
              "text": " @notice returns the address of the operator that `staker` is delegated to.\n @notice Mapping: staker => operator whom the staker is currently delegated to.\n @dev Note that returning address(0) indicates that the staker is not actively delegated to any operator."
            },
            "functionSelector": "65da1264",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedTo",
            "nameLocation": "18635:11:11",
            "parameters": {
              "id": 6892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6891,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "18655:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6896,
                  "src": "18647:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18647:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18646:16:11"
            },
            "returnParameters": {
              "id": 6895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6896,
                  "src": "18686:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18686:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18685:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6905,
            "nodeType": "FunctionDefinition",
            "src": "18798:90:11",
            "nodes": [],
            "documentation": {
              "id": 6897,
              "nodeType": "StructuredDocumentation",
              "src": "18701:92:11",
              "text": " @notice Returns the OperatorDetails struct associated with an `operator`."
            },
            "functionSelector": "c5e480db",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorDetails",
            "nameLocation": "18807:15:11",
            "parameters": {
              "id": 6900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6899,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18831:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6905,
                  "src": "18823:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18823:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18822:18:11"
            },
            "returnParameters": {
              "id": 6904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6905,
                  "src": "18864:22:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorDetails_$6613_memory_ptr",
                    "typeString": "struct IDelegationManager.OperatorDetails"
                  },
                  "typeName": {
                    "id": 6902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6901,
                      "name": "OperatorDetails",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6613,
                      "src": "18864:15:11"
                    },
                    "referencedDeclaration": 6613,
                    "src": "18864:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorDetails_$6613_storage_ptr",
                      "typeString": "struct IDelegationManager.OperatorDetails"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18863:24:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6912,
            "nodeType": "FunctionDefinition",
            "src": "18978:76:11",
            "nodes": [],
            "functionSelector": "5f966f14",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "earningsReceiver",
            "nameLocation": "18987:16:11",
            "parameters": {
              "id": 6908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6907,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19012:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6912,
                  "src": "19004:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19004:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19003:18:11"
            },
            "returnParameters": {
              "id": 6911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6912,
                  "src": "19045:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19045:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19044:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6920,
            "nodeType": "FunctionDefinition",
            "src": "19146:78:11",
            "nodes": [],
            "documentation": {
              "id": 6913,
              "nodeType": "StructuredDocumentation",
              "src": "19060:81:11",
              "text": " @notice Returns the delegationApprover account for an operator"
            },
            "functionSelector": "3cdeb5e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegationApprover",
            "nameLocation": "19155:18:11",
            "parameters": {
              "id": 6916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6915,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19182:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6920,
                  "src": "19174:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19174:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19173:18:11"
            },
            "returnParameters": {
              "id": 6919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6920,
                  "src": "19215:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19215:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19214:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6928,
            "nodeType": "FunctionDefinition",
            "src": "19314:84:11",
            "nodes": [],
            "documentation": {
              "id": 6921,
              "nodeType": "StructuredDocumentation",
              "src": "19230:79:11",
              "text": " @notice Returns the stakerOptOutWindowBlocks for an operator"
            },
            "functionSelector": "16928365",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakerOptOutWindowBlocks",
            "nameLocation": "19323:24:11",
            "parameters": {
              "id": 6924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6923,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19356:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6928,
                  "src": "19348:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19348:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19347:18:11"
            },
            "returnParameters": {
              "id": 6927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6928,
                  "src": "19389:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19389:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19388:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6941,
            "nodeType": "FunctionDefinition",
            "src": "19503:139:11",
            "nodes": [],
            "documentation": {
              "id": 6929,
              "nodeType": "StructuredDocumentation",
              "src": "19404:94:11",
              "text": " @notice Given array of strategies, returns array of shares for the operator"
            },
            "functionSelector": "90041347",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorShares",
            "nameLocation": "19512:17:11",
            "parameters": {
              "id": 6936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6931,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19547:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6941,
                  "src": "19539:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19539:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6935,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "19584:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6941,
                  "src": "19565:29:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6933,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6932,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "19565:9:11"
                      },
                      "referencedDeclaration": 8135,
                      "src": "19565:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 6934,
                    "nodeType": "ArrayTypeName",
                    "src": "19565:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19529:71:11"
            },
            "returnParameters": {
              "id": 6940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6941,
                  "src": "19624:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6937,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19624:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6938,
                    "nodeType": "ArrayTypeName",
                    "src": "19624:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19623:18:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6951,
            "nodeType": "FunctionDefinition",
            "src": "19970:93:11",
            "nodes": [],
            "documentation": {
              "id": 6942,
              "nodeType": "StructuredDocumentation",
              "src": "19648:317:11",
              "text": " @notice Given a list of strategies, return the minimum number of blocks that must pass to withdraw\n from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\n @param strategies The strategies to check withdrawal delays for"
            },
            "functionSelector": "0449ca39",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawalDelay",
            "nameLocation": "19979:18:11",
            "parameters": {
              "id": 6947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6946,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "20019:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6951,
                  "src": "19998:31:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6944,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6943,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8135,
                        "src": "19998:9:11"
                      },
                      "referencedDeclaration": 8135,
                      "src": "19998:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$8135",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 6945,
                    "nodeType": "ArrayTypeName",
                    "src": "19998:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$8135_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19997:33:11"
            },
            "returnParameters": {
              "id": 6950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6951,
                  "src": "20054:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20054:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20053:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6962,
            "nodeType": "FunctionDefinition",
            "src": "20563:94:11",
            "nodes": [],
            "documentation": {
              "id": 6952,
              "nodeType": "StructuredDocumentation",
              "src": "20069:489:11",
              "text": " @notice returns the total number of shares in `strategy` that are delegated to `operator`.\n @notice Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\n @dev By design, the following invariant should hold for each Strategy:\n (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator)\n = sum (delegateable shares of all stakers delegated to the operator)"
            },
            "functionSelector": "778e55f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorShares",
            "nameLocation": "20572:14:11",
            "parameters": {
              "id": 6958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6954,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "20595:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "20587:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20587:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6957,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "20615:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "20605:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 6956,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6955,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "20605:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "20605:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20586:38:11"
            },
            "returnParameters": {
              "id": 6961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "20648:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20648:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20647:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6970,
            "nodeType": "FunctionDefinition",
            "src": "20769:66:11",
            "nodes": [],
            "documentation": {
              "id": 6963,
              "nodeType": "StructuredDocumentation",
              "src": "20663:101:11",
              "text": " @notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "3e28391d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isDelegated",
            "nameLocation": "20778:11:11",
            "parameters": {
              "id": 6966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6965,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "20798:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6970,
                  "src": "20790:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20790:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20789:16:11"
            },
            "returnParameters": {
              "id": 6969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6970,
                  "src": "20829:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20829:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20828:6:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6978,
            "nodeType": "FunctionDefinition",
            "src": "20942:67:11",
            "nodes": [],
            "documentation": {
              "id": 6971,
              "nodeType": "StructuredDocumentation",
              "src": "20841:96:11",
              "text": " @notice Returns true is an operator has previously registered for delegation."
            },
            "functionSelector": "6d70f7ae",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "20951:10:11",
            "parameters": {
              "id": 6974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6973,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "20970:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "20962:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20962:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20961:18:11"
            },
            "returnParameters": {
              "id": 6977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "21003:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6975,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21003:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21002:6:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6986,
            "nodeType": "FunctionDefinition",
            "src": "21173:69:11",
            "nodes": [],
            "documentation": {
              "id": 6979,
              "nodeType": "StructuredDocumentation",
              "src": "21015:153:11",
              "text": "@notice Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked"
            },
            "functionSelector": "29c77d4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakerNonce",
            "nameLocation": "21182:11:11",
            "parameters": {
              "id": 6982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6981,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "21202:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6986,
                  "src": "21194:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21194:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21193:16:11"
            },
            "returnParameters": {
              "id": 6985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6986,
                  "src": "21233:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21233:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21232:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6996,
            "nodeType": "FunctionDefinition",
            "src": "21684:111:11",
            "nodes": [],
            "documentation": {
              "id": 6987,
              "nodeType": "StructuredDocumentation",
              "src": "21248:431:11",
              "text": " @notice Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\n @dev Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's\n signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`."
            },
            "functionSelector": "bb45fef2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegationApproverSaltIsSpent",
            "nameLocation": "21693:29:11",
            "parameters": {
              "id": 6992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6989,
                  "mutability": "mutable",
                  "name": "_delegationApprover",
                  "nameLocation": "21731:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6996,
                  "src": "21723:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21723:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6991,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "21760:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6996,
                  "src": "21752:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6990,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21752:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21722:43:11"
            },
            "returnParameters": {
              "id": 6995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6996,
                  "src": "21789:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6993,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21789:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21788:6:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7002,
            "nodeType": "FunctionDefinition",
            "src": "22326:68:11",
            "nodes": [],
            "documentation": {
              "id": 6997,
              "nodeType": "StructuredDocumentation",
              "src": "21801:520:11",
              "text": " @notice Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\n Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass\n to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"
            },
            "functionSelector": "c448feb8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "minWithdrawalDelayBlocks",
            "nameLocation": "22335:24:11",
            "parameters": {
              "id": 6998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22359:2:11"
            },
            "returnParameters": {
              "id": 7001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7002,
                  "src": "22385:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22385:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22384:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7011,
            "nodeType": "FunctionDefinition",
            "src": "22682:91:11",
            "nodes": [],
            "documentation": {
              "id": 7003,
              "nodeType": "StructuredDocumentation",
              "src": "22400:277:11",
              "text": " @notice Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
            },
            "functionSelector": "c488375a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyWithdrawalDelayBlocks",
            "nameLocation": "22691:29:11",
            "parameters": {
              "id": 7007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7006,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "22731:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7011,
                  "src": "22721:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 7005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7004,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "22721:9:11"
                    },
                    "referencedDeclaration": 8135,
                    "src": "22721:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22720:20:11"
            },
            "returnParameters": {
              "id": 7010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7011,
                  "src": "22764:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22764:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22763:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7023,
            "nodeType": "FunctionDefinition",
            "src": "23061:164:11",
            "nodes": [],
            "documentation": {
              "id": 7012,
              "nodeType": "StructuredDocumentation",
              "src": "22779:277:11",
              "text": " @notice Calculates the digestHash for a `staker` to sign to delegate to an `operator`\n @param staker The signing staker\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"
            },
            "functionSelector": "1bbce091",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurrentStakerDelegationDigestHash",
            "nameLocation": "23070:42:11",
            "parameters": {
              "id": 7019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7014,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "23130:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "23122:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23122:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7016,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "23154:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "23146:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23146:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7018,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "23180:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "23172:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23172:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23112:80:11"
            },
            "returnParameters": {
              "id": 7022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "23216:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7020,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23216:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23215:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7037,
            "nodeType": "FunctionDefinition",
            "src": "23655:187:11",
            "nodes": [],
            "documentation": {
              "id": 7024,
              "nodeType": "StructuredDocumentation",
              "src": "23231:419:11",
              "text": " @notice Calculates the digest hash to be signed and used in the `delegateToBySignature` function\n @param staker The signing staker\n @param _stakerNonce The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"
            },
            "functionSelector": "c94b5111",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateStakerDelegationDigestHash",
            "nameLocation": "23664:35:11",
            "parameters": {
              "id": 7033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7026,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "23717:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7037,
                  "src": "23709:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23709:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "_stakerNonce",
                  "nameLocation": "23741:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7037,
                  "src": "23733:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23733:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7030,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "23771:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7037,
                  "src": "23763:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23763:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7032,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "23797:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7037,
                  "src": "23789:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23789:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23699:110:11"
            },
            "returnParameters": {
              "id": 7036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7037,
                  "src": "23833:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23833:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23832:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7053,
            "nodeType": "FunctionDefinition",
            "src": "24438:226:11",
            "nodes": [],
            "documentation": {
              "id": 7038,
              "nodeType": "StructuredDocumentation",
              "src": "23848:585:11",
              "text": " @notice Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\n @param staker The account delegating their stake\n @param operator The account receiving delegated stake\n @param _delegationApprover the operator's `delegationApprover` who will be signing the delegationHash (in general)\n @param approverSalt A unique and single use value associated with the approver signature.\n @param expiry Time after which the approver's signature becomes invalid"
            },
            "functionSelector": "0b9f487a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDelegationApprovalDigestHash",
            "nameLocation": "24447:37:11",
            "parameters": {
              "id": 7049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7040,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "24502:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24494:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24494:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7042,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "24526:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24518:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24518:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7044,
                  "mutability": "mutable",
                  "name": "_delegationApprover",
                  "nameLocation": "24552:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24544:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24544:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7046,
                  "mutability": "mutable",
                  "name": "approverSalt",
                  "nameLocation": "24589:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24581:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7045,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24581:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7048,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "24619:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24611:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24611:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24484:147:11"
            },
            "returnParameters": {
              "id": 7052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7053,
                  "src": "24655:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7050,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24655:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24654:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7059,
            "nodeType": "FunctionDefinition",
            "src": "24733:59:11",
            "nodes": [],
            "documentation": {
              "id": 7054,
              "nodeType": "StructuredDocumentation",
              "src": "24670:58:11",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_TYPEHASH",
            "nameLocation": "24742:15:11",
            "parameters": {
              "id": 7055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24757:2:11"
            },
            "returnParameters": {
              "id": 7058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7059,
                  "src": "24783:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24783:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24782:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7065,
            "nodeType": "FunctionDefinition",
            "src": "24888:70:11",
            "nodes": [],
            "documentation": {
              "id": 7060,
              "nodeType": "StructuredDocumentation",
              "src": "24798:85:11",
              "text": "@notice The EIP-712 typehash for the StakerDelegation struct used by the contract"
            },
            "functionSelector": "43377382",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKER_DELEGATION_TYPEHASH",
            "nameLocation": "24897:26:11",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24923:2:11"
            },
            "returnParameters": {
              "id": 7064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7065,
                  "src": "24949:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24949:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24948:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7071,
            "nodeType": "FunctionDefinition",
            "src": "25056:72:11",
            "nodes": [],
            "documentation": {
              "id": 7066,
              "nodeType": "StructuredDocumentation",
              "src": "24964:87:11",
              "text": "@notice The EIP-712 typehash for the DelegationApproval struct used by the contract"
            },
            "functionSelector": "04a4f979",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DELEGATION_APPROVAL_TYPEHASH",
            "nameLocation": "25065:28:11",
            "parameters": {
              "id": 7067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25093:2:11"
            },
            "returnParameters": {
              "id": 7070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7071,
                  "src": "25119:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7068,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25119:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25118:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7077,
            "nodeType": "FunctionDefinition",
            "src": "25523:59:11",
            "nodes": [],
            "documentation": {
              "id": 7072,
              "nodeType": "StructuredDocumentation",
              "src": "25134:384:11",
              "text": " @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID.\n @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n for more detailed information please read EIP-712."
            },
            "functionSelector": "f698da25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "domainSeparator",
            "nameLocation": "25532:15:11",
            "parameters": {
              "id": 7073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25547:2:11"
            },
            "returnParameters": {
              "id": 7076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "25573:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25573:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25572:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7085,
            "nodeType": "FunctionDefinition",
            "src": "25832:85:11",
            "nodes": [],
            "documentation": {
              "id": 7078,
              "nodeType": "StructuredDocumentation",
              "src": "25592:235:11",
              "text": "@notice Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\n @dev This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes."
            },
            "functionSelector": "a1788484",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cumulativeWithdrawalsQueued",
            "nameLocation": "25841:27:11",
            "parameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7080,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "25877:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7085,
                  "src": "25869:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25869:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25868:16:11"
            },
            "returnParameters": {
              "id": 7084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7085,
                  "src": "25908:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25908:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25907:9:11"
            },
            "scope": 7102,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7094,
            "nodeType": "FunctionDefinition",
            "src": "25983:95:11",
            "nodes": [],
            "documentation": {
              "id": 7086,
              "nodeType": "StructuredDocumentation",
              "src": "25923:55:11",
              "text": "@notice Returns the keccak256 hash of `withdrawal`."
            },
            "functionSelector": "597b36da",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawalRoot",
            "nameLocation": "25992:23:11",
            "parameters": {
              "id": 7090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7089,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "26034:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7094,
                  "src": "26016:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Withdrawal_$6649_memory_ptr",
                    "typeString": "struct IDelegationManager.Withdrawal"
                  },
                  "typeName": {
                    "id": 7088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7087,
                      "name": "Withdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6649,
                      "src": "26016:10:11"
                    },
                    "referencedDeclaration": 6649,
                    "src": "26016:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdrawal_$6649_storage_ptr",
                      "typeString": "struct IDelegationManager.Withdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26015:30:11"
            },
            "returnParameters": {
              "id": 7093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7094,
                  "src": "26069:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7091,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26069:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26068:9:11"
            },
            "scope": 7102,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7101,
            "nodeType": "FunctionDefinition",
            "src": "26084:123:11",
            "nodes": [],
            "functionSelector": "5cfe8d2c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrateQueuedWithdrawals",
            "nameLocation": "26093:24:11",
            "parameters": {
              "id": 7099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7098,
                  "mutability": "mutable",
                  "name": "withdrawalsToQueue",
                  "nameLocation": "26178:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 7101,
                  "src": "26118:78:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7096,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 7095,
                        "name": "IStrategyManager.DeprecatedStruct_QueuedWithdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8364,
                        "src": "26118:50:11"
                      },
                      "referencedDeclaration": 8364,
                      "src": "26118:50:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_ptr",
                        "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal"
                      }
                    },
                    "id": 7097,
                    "nodeType": "ArrayTypeName",
                    "src": "26118:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DeprecatedStruct_QueuedWithdrawal_$8364_storage_$dyn_storage_ptr",
                      "typeString": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26117:80:11"
            },
            "returnParameters": {
              "id": 7100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26206:0:11"
            },
            "scope": 7102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6603,
              "name": "ISignatureUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7794,
              "src": "903:15:11"
            },
            "id": 6604,
            "nodeType": "InheritanceSpecifier",
            "src": "903:15:11"
          }
        ],
        "canonicalName": "IDelegationManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 6602,
          "nodeType": "StructuredDocumentation",
          "src": "155:715:11",
          "text": " @title DelegationManager\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice  This is the contract for delegation in EigenLayer. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayer\n - allowing operators to specify parameters related to stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time)\n - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          7102,
          7794
        ],
        "name": "IDelegationManager",
        "nameLocation": "881:18:11",
        "scope": 7103,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 11
}