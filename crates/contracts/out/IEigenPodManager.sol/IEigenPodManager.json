{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BeaconChainETHDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delegatedAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "BeaconChainETHWithdrawalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "BeaconOracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newValue",
          "type": "uint64"
        }
      ],
      "name": "DenebForkTimestampUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MaxPodsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "pauserRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "PauserRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "eigenPod",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "PodDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "sharesDelta",
          "type": "int256"
        }
      ],
      "name": "PodSharesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "addShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainETHStrategy",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainOracle",
      "outputs": [
        {
          "internalType": "contract IBeaconChainOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createPod",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denebForkTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodBeacon",
      "outputs": [
        {
          "internalType": "contract IBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPOS",
      "outputs": [
        {
          "internalType": "contract IETHPOSDeposit",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "getBlockRootAtTimestamp",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "getPod",
      "outputs": [
        {
          "internalType": "contract IEigenPod",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "hasPod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "ownerToPod",
      "outputs": [
        {
          "internalType": "contract IEigenPod",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        }
      ],
      "name": "podOwnerShares",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "sharesDelta",
          "type": "int256"
        }
      ],
      "name": "recordBeaconChainETHBalanceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "removeShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newDenebForkTimestamp",
          "type": "uint64"
        }
      ],
      "name": "setDenebForkTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "newPauserRegistry",
          "type": "address"
        }
      ],
      "name": "setPauserRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "depositDataRoot",
          "type": "bytes32"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyManager",
      "outputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBeaconChainOracle",
          "name": "newBeaconChainOracle",
          "type": "address"
        }
      ],
      "name": "updateBeaconChainOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "podOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdrawSharesAsTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addShares(address,uint256)": "0e81073c",
    "beaconChainETHStrategy()": "9104c319",
    "beaconChainOracle()": "c052bd61",
    "createPod()": "84d81062",
    "denebForkTimestamp()": "44e71c80",
    "eigenPodBeacon()": "292b7b2b",
    "ethPOS()": "74cdd798",
    "getBlockRootAtTimestamp(uint64)": "d1c64cc9",
    "getPod(address)": "a38406a3",
    "hasPod(address)": "f6848d24",
    "maxPods()": "c0ccbf10",
    "numPods()": "a6a509be",
    "ownerToPod(address)": "9ba06275",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "podOwnerShares(address)": "60f4062b",
    "recordBeaconChainETHBalanceUpdate(address,int256)": "c2c51c40",
    "removeShares(address,uint256)": "beffbb89",
    "setDenebForkTimestamp(uint64)": "463db038",
    "setPauserRegistry(address)": "10d67a2f",
    "slasher()": "b1344271",
    "stake(bytes,bytes,bytes32)": "9b4e4634",
    "strategyManager()": "39b70e38",
    "unpause(uint256)": "fabc1cbc",
    "updateBeaconChainOracle(address)": "c1de3aef",
    "withdrawSharesAsTokens(address,address,uint256)": "387b1300"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BeaconChainETHDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"BeaconChainETHWithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"BeaconOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newValue\",\"type\":\"uint64\"}],\"name\":\"DenebForkTimestampUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MaxPodsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eigenPod\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"PodDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"PodSharesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainOracle\",\"outputs\":[{\"internalType\":\"contract IBeaconChainOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPod\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denebForkTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodBeacon\",\"outputs\":[{\"internalType\":\"contract IBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPOS\",\"outputs\":[{\"internalType\":\"contract IETHPOSDeposit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"getBlockRootAtTimestamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"getPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"hasPod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"ownerToPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"podOwnerShares\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"recordBeaconChainETHBalanceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newDenebForkTimestamp\",\"type\":\"uint64\"}],\"name\":\"setDenebForkTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBeaconChainOracle\",\"name\":\"newBeaconChainOracle\",\"type\":\"address\"}],\"name\":\"updateBeaconChainOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"addShares(address,uint256)\":{\"details\":\"Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)Reverts if `shares` is not a whole Gwei amount\"},\"createPod()\":{\"details\":\"Function will revert if the `msg.sender` already has an EigenPod.Returns EigenPod address \"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"podOwnerShares(address)\":{\"details\":\"The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can decrease between the pod owner queuing and completing a withdrawal. When the pod owner's shares would otherwise increase, this \\\"deficit\\\" is decreased first _instead_. Likewise, when a withdrawal is completed, this \\\"deficit\\\" is decreased and the withdrawal amount is decreased; We can think of this as the withdrawal \\\"paying off the deficit\\\".\"},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"details\":\"Callable only by the podOwner's EigenPod contract.Reverts if `sharesDelta` is not a whole Gwei amount\",\"params\":{\"podOwner\":\"is the pod owner whose balance is being updated.\",\"sharesDelta\":\"is the change in podOwner's beaconChainETHStrategy shares\"}},\"removeShares(address,uint256)\":{\"details\":\"This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to result in the `podOwner` incurring a \\\"share deficit\\\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive shares from the operator to whom the staker is delegated.Reverts if `shares` is not a whole Gwei amount\"},\"setDenebForkTimestamp(uint64)\":{\"details\":\"this function is designed to be called twice.  Once, it is set to type(uint64).max  prior to the actual deneb fork timestamp being set, and then the second time it is set  to the actual deneb fork timestamp.\"},\"stake(bytes,bytes,bytes32)\":{\"params\":{\"depositDataRoot\":\"The root/hash of the deposit data for the validator's deposit.\",\"pubkey\":\"The 48 bytes public key of the beacon chain validator.\",\"signature\":\"The validator's signature of the deposit data.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateBeaconChainOracle(address)\":{\"details\":\"Callable only by the owner of this contract (i.e. governance)\",\"params\":{\"newBeaconChainOracle\":\"is the new oracle contract being pointed to\"}},\"withdrawSharesAsTokens(address,address,uint256)\":{\"details\":\"Prioritizes decreasing the podOwner's share deficit, if they have oneReverts if `shares` is not a whole Gwei amount\"}},\"title\":\"Interface for factory that creates and manages solo staking pods that have their withdrawal credentials pointed to EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"BeaconChainETHDeposited(address,uint256)\":{\"notice\":\"Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager\"},\"BeaconChainETHWithdrawalCompleted(address,uint256,uint96,address,address,bytes32)\":{\"notice\":\"Emitted when a withdrawal of beacon chain ETH is completed\"},\"BeaconOracleUpdated(address)\":{\"notice\":\"Emitted to notify the update of the beaconChainOracle address\"},\"MaxPodsUpdated(uint256,uint256)\":{\"notice\":\"Emitted when `maxPods` value is updated from `previousValue` to `newValue`\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"PodDeployed(address,address)\":{\"notice\":\"Emitted to notify the deployment of an EigenPod\"},\"PodSharesUpdated(address,int256)\":{\"notice\":\"Emitted when the balance of an EigenPod is updated\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,uint256)\":{\"notice\":\"Increases the `podOwner`'s shares by `shares`, paying off deficit if possible. Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\"},\"beaconChainETHStrategy()\":{\"notice\":\"returns canonical, virtual beaconChainETH strategy\"},\"beaconChainOracle()\":{\"notice\":\"Oracle contract that provides updates to the beacon chain's state\"},\"createPod()\":{\"notice\":\"Creates an EigenPod for the sender.\"},\"denebForkTimestamp()\":{\"notice\":\"the deneb hard fork timestamp used to determine which proof path to use for proving a withdrawal\"},\"eigenPodBeacon()\":{\"notice\":\"Beacon proxy to which the EigenPods point\"},\"ethPOS()\":{\"notice\":\"The ETH2 Deposit Contract\"},\"getBlockRootAtTimestamp(uint64)\":{\"notice\":\"Returns the beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized.\"},\"getPod(address)\":{\"notice\":\"Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not).\"},\"hasPod(address)\":{\"notice\":\"Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise.\"},\"maxPods()\":{\"notice\":\"Returns the maximum number of EigenPods that can be created\"},\"numPods()\":{\"notice\":\"Returns the number of EigenPods that have been created\"},\"ownerToPod(address)\":{\"notice\":\"Returns the address of the `podOwner`'s EigenPod if it has been deployed.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"podOwnerShares(address)\":{\"notice\":\"Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\"},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"notice\":\"Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager to ensure that delegated shares are also tracked correctly\"},\"removeShares(address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue. Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\"},\"setDenebForkTimestamp(uint64)\":{\"notice\":\"setting the deneb hard fork timestamp by the eigenPodManager owner\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"slasher()\":{\"notice\":\"EigenLayer's Slasher contract\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Stakes for a new beacon chain validator on the sender's EigenPod. Also creates an EigenPod for the sender if they don't have one already.\"},\"strategyManager()\":{\"notice\":\"EigenLayer's StrategyManager contract\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateBeaconChainOracle(address)\":{\"notice\":\"Updates the oracle contract that provides the beacon chain state root\"},\"withdrawSharesAsTokens(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":\"IEigenPodManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BeaconChainETHDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "nonce",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BeaconChainETHWithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOracleAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconOracleUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "newValue",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DenebForkTimestampUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxPodsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "eigenPod",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PodDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "sharesDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PodSharesUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainOracle",
          "outputs": [
            {
              "internalType": "contract IBeaconChainOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPod",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "denebForkTimestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodBeacon",
          "outputs": [
            {
              "internalType": "contract IBeacon",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethPOS",
          "outputs": [
            {
              "internalType": "contract IETHPOSDeposit",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "timestamp",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBlockRootAtTimestamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPod",
          "outputs": [
            {
              "internalType": "contract IEigenPod",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPod",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPods",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numPods",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerToPod",
          "outputs": [
            {
              "internalType": "contract IEigenPod",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "podOwnerShares",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "sharesDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordBeaconChainETHBalanceUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeShares"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "newDenebForkTimestamp",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDenebForkTimestamp"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubkey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "contract IBeaconChainOracle",
              "name": "newBeaconChainOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBeaconChainOracle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "podOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawSharesAsTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addShares(address,uint256)": {
            "details": "Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)Reverts if `shares` is not a whole Gwei amount"
          },
          "createPod()": {
            "details": "Function will revert if the `msg.sender` already has an EigenPod.Returns EigenPod address "
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "podOwnerShares(address)": {
            "details": "The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can decrease between the pod owner queuing and completing a withdrawal. When the pod owner's shares would otherwise increase, this \"deficit\" is decreased first _instead_. Likewise, when a withdrawal is completed, this \"deficit\" is decreased and the withdrawal amount is decreased; We can think of this as the withdrawal \"paying off the deficit\"."
          },
          "recordBeaconChainETHBalanceUpdate(address,int256)": {
            "details": "Callable only by the podOwner's EigenPod contract.Reverts if `sharesDelta` is not a whole Gwei amount",
            "params": {
              "podOwner": "is the pod owner whose balance is being updated.",
              "sharesDelta": "is the change in podOwner's beaconChainETHStrategy shares"
            }
          },
          "removeShares(address,uint256)": {
            "details": "This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive shares from the operator to whom the staker is delegated.Reverts if `shares` is not a whole Gwei amount"
          },
          "setDenebForkTimestamp(uint64)": {
            "details": "this function is designed to be called twice.  Once, it is set to type(uint64).max  prior to the actual deneb fork timestamp being set, and then the second time it is set  to the actual deneb fork timestamp."
          },
          "stake(bytes,bytes,bytes32)": {
            "params": {
              "depositDataRoot": "The root/hash of the deposit data for the validator's deposit.",
              "pubkey": "The 48 bytes public key of the beacon chain validator.",
              "signature": "The validator's signature of the deposit data."
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateBeaconChainOracle(address)": {
            "details": "Callable only by the owner of this contract (i.e. governance)",
            "params": {
              "newBeaconChainOracle": "is the new oracle contract being pointed to"
            }
          },
          "withdrawSharesAsTokens(address,address,uint256)": {
            "details": "Prioritizes decreasing the podOwner's share deficit, if they have oneReverts if `shares` is not a whole Gwei amount"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addShares(address,uint256)": {
            "notice": "Increases the `podOwner`'s shares by `shares`, paying off deficit if possible. Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue"
          },
          "beaconChainETHStrategy()": {
            "notice": "returns canonical, virtual beaconChainETH strategy"
          },
          "beaconChainOracle()": {
            "notice": "Oracle contract that provides updates to the beacon chain's state"
          },
          "createPod()": {
            "notice": "Creates an EigenPod for the sender."
          },
          "denebForkTimestamp()": {
            "notice": "the deneb hard fork timestamp used to determine which proof path to use for proving a withdrawal"
          },
          "eigenPodBeacon()": {
            "notice": "Beacon proxy to which the EigenPods point"
          },
          "ethPOS()": {
            "notice": "The ETH2 Deposit Contract"
          },
          "getBlockRootAtTimestamp(uint64)": {
            "notice": "Returns the beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized."
          },
          "getPod(address)": {
            "notice": "Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not)."
          },
          "hasPod(address)": {
            "notice": "Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise."
          },
          "maxPods()": {
            "notice": "Returns the maximum number of EigenPods that can be created"
          },
          "numPods()": {
            "notice": "Returns the number of EigenPods that have been created"
          },
          "ownerToPod(address)": {
            "notice": "Returns the address of the `podOwner`'s EigenPod if it has been deployed."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "podOwnerShares(address)": {
            "notice": "Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy."
          },
          "recordBeaconChainETHBalanceUpdate(address,int256)": {
            "notice": "Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager to ensure that delegated shares are also tracked correctly"
          },
          "removeShares(address,uint256)": {
            "notice": "Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue. Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero."
          },
          "setDenebForkTimestamp(uint64)": {
            "notice": "setting the deneb hard fork timestamp by the eigenPodManager owner"
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "slasher()": {
            "notice": "EigenLayer's Slasher contract"
          },
          "stake(bytes,bytes,bytes32)": {
            "notice": "Stakes for a new beacon chain validator on the sender's EigenPod. Also creates an EigenPod for the sender if they don't have one already."
          },
          "strategyManager()": {
            "notice": "EigenLayer's StrategyManager contract"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateBeaconChainOracle(address)": {
            "notice": "Updates the oracle contract that provides the beacon chain state root"
          },
          "withdrawSharesAsTokens(address,address,uint256)": {
            "notice": "Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": "IEigenPodManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol",
    "id": 7677,
    "exportedSymbols": {
      "BeaconChainProofs": [
        9143
      ],
      "Endian": [
        9613
      ],
      "IBeacon": [
        58703
      ],
      "IBeaconChainOracle": [
        6462
      ],
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "IETHPOSDeposit": [
        7143
      ],
      "IEigenPod": [
        7443
      ],
      "IEigenPodManager": [
        7676
      ],
      "IPausable": [
        7748
      ],
      "IPauserRegistry": [
        7778
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ],
      "Merkle": [
        9899
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:8161:14",
    "nodes": [
      {
        "id": 7445,
        "nodeType": "PragmaDirective",
        "src": "37:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 7446,
        "nodeType": "ImportDirective",
        "src": "63:58:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 58704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7447,
        "nodeType": "ImportDirective",
        "src": "122:30:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol",
        "file": "./IETHPOSDeposit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 7144,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7448,
        "nodeType": "ImportDirective",
        "src": "153:32:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol",
        "file": "./IStrategyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 8384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7449,
        "nodeType": "ImportDirective",
        "src": "186:25:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol",
        "file": "./IEigenPod.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 7444,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7450,
        "nodeType": "ImportDirective",
        "src": "212:34:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol",
        "file": "./IBeaconChainOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 6463,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7451,
        "nodeType": "ImportDirective",
        "src": "247:25:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol",
        "file": "./IPausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 7749,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7452,
        "nodeType": "ImportDirective",
        "src": "273:24:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol",
        "file": "./ISlasher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 8034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7453,
        "nodeType": "ImportDirective",
        "src": "298:25:14",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol",
        "file": "./IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7677,
        "sourceUnit": 8136,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7676,
        "nodeType": "ContractDefinition",
        "src": "581:7616:14",
        "nodes": [
          {
            "id": 7461,
            "nodeType": "EventDefinition",
            "src": "705:60:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7457,
              "nodeType": "StructuredDocumentation",
              "src": "627:73:14",
              "text": "@notice Emitted to notify the update of the beaconChainOracle address"
            },
            "name": "BeaconOracleUpdated",
            "nameLocation": "711:19:14",
            "parameters": {
              "id": 7460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7459,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOracleAddress",
                  "nameLocation": "747:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7461,
                  "src": "731:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "730:34:14"
            }
          },
          {
            "id": 7468,
            "nodeType": "EventDefinition",
            "src": "835:70:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7462,
              "nodeType": "StructuredDocumentation",
              "src": "771:59:14",
              "text": "@notice Emitted to notify the deployment of an EigenPod"
            },
            "name": "PodDeployed",
            "nameLocation": "841:11:14",
            "parameters": {
              "id": 7467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7464,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "eigenPod",
                  "nameLocation": "869:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7468,
                  "src": "853:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7466,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "895:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7468,
                  "src": "879:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:52:14"
            }
          },
          {
            "id": 7475,
            "nodeType": "EventDefinition",
            "src": "1008:72:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7469,
              "nodeType": "StructuredDocumentation",
              "src": "911:92:14",
              "text": "@notice Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager"
            },
            "name": "BeaconChainETHDeposited",
            "nameLocation": "1014:23:14",
            "parameters": {
              "id": 7474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7471,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "1054:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7475,
                  "src": "1038:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1072:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7475,
                  "src": "1064:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:42:14"
            }
          },
          {
            "id": 7482,
            "nodeType": "EventDefinition",
            "src": "1177:62:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7476,
              "nodeType": "StructuredDocumentation",
              "src": "1086:86:14",
              "text": "@notice Emitted when `maxPods` value is updated from `previousValue` to `newValue`"
            },
            "name": "MaxPodsUpdated",
            "nameLocation": "1183:14:14",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousValue",
                  "nameLocation": "1206:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7482,
                  "src": "1198:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1229:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7482,
                  "src": "1221:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:41:14"
            }
          },
          {
            "id": 7489,
            "nodeType": "EventDefinition",
            "src": "1312:69:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7483,
              "nodeType": "StructuredDocumentation",
              "src": "1245:62:14",
              "text": "@notice Emitted when the balance of an EigenPod is updated"
            },
            "name": "PodSharesUpdated",
            "nameLocation": "1318:16:14",
            "parameters": {
              "id": 7488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7485,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "1351:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7489,
                  "src": "1335:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sharesDelta",
                  "nameLocation": "1368:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7489,
                  "src": "1361:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7486,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:46:14"
            }
          },
          {
            "id": 7504,
            "nodeType": "EventDefinition",
            "src": "1462:220:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7490,
              "nodeType": "StructuredDocumentation",
              "src": "1387:70:14",
              "text": "@notice Emitted when a withdrawal of beacon chain ETH is completed"
            },
            "name": "BeaconChainETHWithdrawalCompleted",
            "nameLocation": "1468:33:14",
            "parameters": {
              "id": 7503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7492,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "1527:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1511:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1553:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1545:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1576:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1569:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7498,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delegatedAddress",
                  "nameLocation": "1599:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1591:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "1633:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1625:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "1661:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7504,
                  "src": "1653:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:180:14"
            }
          },
          {
            "id": 7508,
            "nodeType": "EventDefinition",
            "src": "1688:49:14",
            "nodes": [],
            "anonymous": false,
            "name": "DenebForkTimestampUpdated",
            "nameLocation": "1694:25:14",
            "parameters": {
              "id": 7507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1727:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "1720:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7505,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:17:14"
            }
          },
          {
            "id": 7514,
            "nodeType": "FunctionDefinition",
            "src": "1926:48:14",
            "nodes": [],
            "documentation": {
              "id": 7509,
              "nodeType": "StructuredDocumentation",
              "src": "1743:178:14",
              "text": " @notice Creates an EigenPod for the sender.\n @dev Function will revert if the `msg.sender` already has an EigenPod.\n @dev Returns EigenPod address "
            },
            "functionSelector": "84d81062",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPod",
            "nameLocation": "1935:9:14",
            "parameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1944:2:14"
            },
            "returnParameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "1965:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1964:9:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7524,
            "nodeType": "FunctionDefinition",
            "src": "2396:106:14",
            "nodes": [],
            "documentation": {
              "id": 7515,
              "nodeType": "StructuredDocumentation",
              "src": "1980:411:14",
              "text": " @notice Stakes for a new beacon chain validator on the sender's EigenPod.\n Also creates an EigenPod for the sender if they don't have one already.\n @param pubkey The 48 bytes public key of the beacon chain validator.\n @param signature The validator's signature of the deposit data.\n @param depositDataRoot The root/hash of the deposit data for the validator's deposit."
            },
            "functionSelector": "9b4e4634",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "2405:5:14",
            "parameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "2426:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2411:21:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7519,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "2449:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2434:24:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7521,
                  "mutability": "mutable",
                  "name": "depositDataRoot",
                  "nameLocation": "2468:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2460:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:74:14"
            },
            "returnParameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:0:14"
            },
            "scope": 7676,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7532,
            "nodeType": "FunctionDefinition",
            "src": "2982:90:14",
            "nodes": [],
            "documentation": {
              "id": 7525,
              "nodeType": "StructuredDocumentation",
              "src": "2508:469:14",
              "text": " @notice Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager\n to ensure that delegated shares are also tracked correctly\n @param podOwner is the pod owner whose balance is being updated.\n @param sharesDelta is the change in podOwner's beaconChainETHStrategy shares\n @dev Callable only by the podOwner's EigenPod contract.\n @dev Reverts if `sharesDelta` is not a whole Gwei amount"
            },
            "functionSelector": "c2c51c40",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recordBeaconChainETHBalanceUpdate",
            "nameLocation": "2991:33:14",
            "parameters": {
              "id": 7530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7527,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "3033:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "3025:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7529,
                  "mutability": "mutable",
                  "name": "sharesDelta",
                  "nameLocation": "3050:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "3043:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7528,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3024:38:14"
            },
            "returnParameters": {
              "id": 7531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3071:0:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7539,
            "nodeType": "FunctionDefinition",
            "src": "3332:83:14",
            "nodes": [],
            "documentation": {
              "id": 7533,
              "nodeType": "StructuredDocumentation",
              "src": "3078:249:14",
              "text": " @notice Updates the oracle contract that provides the beacon chain state root\n @param newBeaconChainOracle is the new oracle contract being pointed to\n @dev Callable only by the owner of this contract (i.e. governance)"
            },
            "functionSelector": "c1de3aef",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateBeaconChainOracle",
            "nameLocation": "3341:23:14",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "mutability": "mutable",
                  "name": "newBeaconChainOracle",
                  "nameLocation": "3384:20:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7539,
                  "src": "3365:39:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                    "typeString": "contract IBeaconChainOracle"
                  },
                  "typeName": {
                    "id": 7535,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7534,
                      "name": "IBeaconChainOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6462,
                      "src": "3365:18:14"
                    },
                    "referencedDeclaration": 6462,
                    "src": "3365:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:41:14"
            },
            "returnParameters": {
              "id": 7538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:0:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7548,
            "nodeType": "FunctionDefinition",
            "src": "3511:72:14",
            "nodes": [],
            "documentation": {
              "id": 7540,
              "nodeType": "StructuredDocumentation",
              "src": "3421:85:14",
              "text": "@notice Returns the address of the `podOwner`'s EigenPod if it has been deployed."
            },
            "functionSelector": "9ba06275",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerToPod",
            "nameLocation": "3520:10:14",
            "parameters": {
              "id": 7543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7542,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "3539:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "3531:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3530:18:14"
            },
            "returnParameters": {
              "id": 7547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "3572:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPod_$7443",
                    "typeString": "contract IEigenPod"
                  },
                  "typeName": {
                    "id": 7545,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7544,
                      "name": "IEigenPod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7443,
                      "src": "3572:9:14"
                    },
                    "referencedDeclaration": 7443,
                    "src": "3572:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:11:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7557,
            "nodeType": "FunctionDefinition",
            "src": "3691:68:14",
            "nodes": [],
            "documentation": {
              "id": 7549,
              "nodeType": "StructuredDocumentation",
              "src": "3589:97:14",
              "text": "@notice Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not)."
            },
            "functionSelector": "a38406a3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPod",
            "nameLocation": "3700:6:14",
            "parameters": {
              "id": 7552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7551,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "3715:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7557,
                  "src": "3707:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3706:18:14"
            },
            "returnParameters": {
              "id": 7556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7557,
                  "src": "3748:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPod_$7443",
                    "typeString": "contract IEigenPod"
                  },
                  "typeName": {
                    "id": 7554,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7553,
                      "name": "IEigenPod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7443,
                      "src": "3748:9:14"
                    },
                    "referencedDeclaration": 7443,
                    "src": "3748:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPod_$7443",
                      "typeString": "contract IEigenPod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3747:11:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7564,
            "nodeType": "FunctionDefinition",
            "src": "3807:57:14",
            "nodes": [],
            "documentation": {
              "id": 7558,
              "nodeType": "StructuredDocumentation",
              "src": "3765:37:14",
              "text": "@notice The ETH2 Deposit Contract"
            },
            "functionSelector": "74cdd798",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ethPOS",
            "nameLocation": "3816:6:14",
            "parameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3822:2:14"
            },
            "returnParameters": {
              "id": 7563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7564,
                  "src": "3848:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IETHPOSDeposit_$7143",
                    "typeString": "contract IETHPOSDeposit"
                  },
                  "typeName": {
                    "id": 7561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7560,
                      "name": "IETHPOSDeposit",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7143,
                      "src": "3848:14:14"
                    },
                    "referencedDeclaration": 7143,
                    "src": "3848:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IETHPOSDeposit_$7143",
                      "typeString": "contract IETHPOSDeposit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3847:16:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7571,
            "nodeType": "FunctionDefinition",
            "src": "3928:58:14",
            "nodes": [],
            "documentation": {
              "id": 7565,
              "nodeType": "StructuredDocumentation",
              "src": "3870:53:14",
              "text": "@notice Beacon proxy to which the EigenPods point"
            },
            "functionSelector": "292b7b2b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "eigenPodBeacon",
            "nameLocation": "3937:14:14",
            "parameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3951:2:14"
            },
            "returnParameters": {
              "id": 7570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7571,
                  "src": "3977:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeacon_$58703",
                    "typeString": "contract IBeacon"
                  },
                  "typeName": {
                    "id": 7568,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7567,
                      "name": "IBeacon",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58703,
                      "src": "3977:7:14"
                    },
                    "referencedDeclaration": 58703,
                    "src": "3977:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeacon_$58703",
                      "typeString": "contract IBeacon"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3976:9:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7578,
            "nodeType": "FunctionDefinition",
            "src": "4074:72:14",
            "nodes": [],
            "documentation": {
              "id": 7572,
              "nodeType": "StructuredDocumentation",
              "src": "3992:77:14",
              "text": "@notice Oracle contract that provides updates to the beacon chain's state"
            },
            "functionSelector": "c052bd61",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "beaconChainOracle",
            "nameLocation": "4083:17:14",
            "parameters": {
              "id": 7573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4100:2:14"
            },
            "returnParameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7576,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7578,
                  "src": "4126:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                    "typeString": "contract IBeaconChainOracle"
                  },
                  "typeName": {
                    "id": 7575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7574,
                      "name": "IBeaconChainOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6462,
                      "src": "4126:18:14"
                    },
                    "referencedDeclaration": 6462,
                    "src": "4126:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBeaconChainOracle_$6462",
                      "typeString": "contract IBeaconChainOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4125:20:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7586,
            "nodeType": "FunctionDefinition",
            "src": "4290:83:14",
            "nodes": [],
            "documentation": {
              "id": 7579,
              "nodeType": "StructuredDocumentation",
              "src": "4152:133:14",
              "text": "@notice Returns the beacon block root at `timestamp`. Reverts if the Beacon block root at `timestamp` has not yet been finalized."
            },
            "functionSelector": "d1c64cc9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockRootAtTimestamp",
            "nameLocation": "4299:23:14",
            "parameters": {
              "id": 7582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7581,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4330:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7586,
                  "src": "4323:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7580,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4323:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4322:18:14"
            },
            "returnParameters": {
              "id": 7585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7586,
                  "src": "4364:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7583,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4363:9:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7593,
            "nodeType": "FunctionDefinition",
            "src": "4433:68:14",
            "nodes": [],
            "documentation": {
              "id": 7587,
              "nodeType": "StructuredDocumentation",
              "src": "4379:49:14",
              "text": "@notice EigenLayer's StrategyManager contract"
            },
            "functionSelector": "39b70e38",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyManager",
            "nameLocation": "4442:15:14",
            "parameters": {
              "id": 7588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4457:2:14"
            },
            "returnParameters": {
              "id": 7592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7593,
                  "src": "4483:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                    "typeString": "contract IStrategyManager"
                  },
                  "typeName": {
                    "id": 7590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7589,
                      "name": "IStrategyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8383,
                      "src": "4483:16:14"
                    },
                    "referencedDeclaration": 8383,
                    "src": "4483:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4482:18:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7600,
            "nodeType": "FunctionDefinition",
            "src": "4553:52:14",
            "nodes": [],
            "documentation": {
              "id": 7594,
              "nodeType": "StructuredDocumentation",
              "src": "4507:41:14",
              "text": "@notice EigenLayer's Slasher contract"
            },
            "functionSelector": "b1344271",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "slasher",
            "nameLocation": "4562:7:14",
            "parameters": {
              "id": 7595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:2:14"
            },
            "returnParameters": {
              "id": 7599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7600,
                  "src": "4595:8:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$8033",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 7597,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7596,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8033,
                      "src": "4595:8:14"
                    },
                    "referencedDeclaration": 8033,
                    "src": "4595:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$8033",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4594:10:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7608,
            "nodeType": "FunctionDefinition",
            "src": "4708:63:14",
            "nodes": [],
            "documentation": {
              "id": 7601,
              "nodeType": "StructuredDocumentation",
              "src": "4611:92:14",
              "text": "@notice Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise."
            },
            "functionSelector": "f6848d24",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPod",
            "nameLocation": "4717:6:14",
            "parameters": {
              "id": 7604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7603,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "4732:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "4724:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4723:18:14"
            },
            "returnParameters": {
              "id": 7607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "4765:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4764:6:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7614,
            "nodeType": "FunctionDefinition",
            "src": "4848:51:14",
            "nodes": [],
            "documentation": {
              "id": 7609,
              "nodeType": "StructuredDocumentation",
              "src": "4777:66:14",
              "text": "@notice Returns the number of EigenPods that have been created"
            },
            "functionSelector": "a6a509be",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numPods",
            "nameLocation": "4857:7:14",
            "parameters": {
              "id": 7610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:2:14"
            },
            "returnParameters": {
              "id": 7613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7612,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7614,
                  "src": "4890:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4890:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4889:9:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7620,
            "nodeType": "FunctionDefinition",
            "src": "4981:51:14",
            "nodes": [],
            "documentation": {
              "id": 7615,
              "nodeType": "StructuredDocumentation",
              "src": "4905:71:14",
              "text": "@notice Returns the maximum number of EigenPods that can be created"
            },
            "functionSelector": "c0ccbf10",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxPods",
            "nameLocation": "4990:7:14",
            "parameters": {
              "id": 7616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4997:2:14"
            },
            "returnParameters": {
              "id": 7619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "5023:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:9:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7628,
            "nodeType": "FunctionDefinition",
            "src": "5691:73:14",
            "nodes": [],
            "documentation": {
              "id": 7621,
              "nodeType": "StructuredDocumentation",
              "src": "5038:648:14",
              "text": " @notice Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\n @dev The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can\n decrease between the pod owner queuing and completing a withdrawal.\n When the pod owner's shares would otherwise increase, this \"deficit\" is decreased first _instead_.\n Likewise, when a withdrawal is completed, this \"deficit\" is decreased and the withdrawal amount is decreased; We can think of this\n as the withdrawal \"paying off the deficit\"."
            },
            "functionSelector": "60f4062b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "podOwnerShares",
            "nameLocation": "5700:14:14",
            "parameters": {
              "id": 7624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7623,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "5723:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "5715:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5715:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5714:18:14"
            },
            "returnParameters": {
              "id": 7627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "5756:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7625,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5755:8:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7635,
            "nodeType": "FunctionDefinition",
            "src": "5837:68:14",
            "nodes": [],
            "documentation": {
              "id": 7629,
              "nodeType": "StructuredDocumentation",
              "src": "5770:62:14",
              "text": "@notice returns canonical, virtual beaconChainETH strategy"
            },
            "functionSelector": "9104c319",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "beaconChainETHStrategy",
            "nameLocation": "5846:22:14",
            "parameters": {
              "id": 7630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5868:2:14"
            },
            "returnParameters": {
              "id": 7634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7635,
                  "src": "5894:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$8135",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 7632,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7631,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8135,
                      "src": "5894:9:14"
                    },
                    "referencedDeclaration": 8135,
                    "src": "5894:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$8135",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5893:11:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7643,
            "nodeType": "FunctionDefinition",
            "src": "6555:65:14",
            "nodes": [],
            "documentation": {
              "id": 7636,
              "nodeType": "StructuredDocumentation",
              "src": "5911:639:14",
              "text": " @notice Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue.\n Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\n @dev This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to\n result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive\n shares from the operator to whom the staker is delegated.\n @dev Reverts if `shares` is not a whole Gwei amount"
            },
            "functionSelector": "beffbb89",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeShares",
            "nameLocation": "6564:12:14",
            "parameters": {
              "id": 7641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7638,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "6585:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7643,
                  "src": "6577:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7640,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6603:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7643,
                  "src": "6595:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6576:34:14"
            },
            "returnParameters": {
              "id": 7642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6619:0:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7653,
            "nodeType": "FunctionDefinition",
            "src": "7145:80:14",
            "nodes": [],
            "documentation": {
              "id": 7644,
              "nodeType": "StructuredDocumentation",
              "src": "6626:514:14",
              "text": " @notice Increases the `podOwner`'s shares by `shares`, paying off deficit if possible.\n Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\n @dev Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input\n in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)\n @dev Reverts if `shares` is not a whole Gwei amount"
            },
            "functionSelector": "0e81073c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShares",
            "nameLocation": "7154:9:14",
            "parameters": {
              "id": 7649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7646,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "7172:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7653,
                  "src": "7164:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7164:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "7190:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7653,
                  "src": "7182:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7182:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7163:34:14"
            },
            "returnParameters": {
              "id": 7652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7653,
                  "src": "7216:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7216:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7215:9:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7663,
            "nodeType": "FunctionDefinition",
            "src": "7502:96:14",
            "nodes": [],
            "documentation": {
              "id": 7654,
              "nodeType": "StructuredDocumentation",
              "src": "7231:266:14",
              "text": " @notice Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\n @dev Prioritizes decreasing the podOwner's share deficit, if they have one\n @dev Reverts if `shares` is not a whole Gwei amount"
            },
            "functionSelector": "387b1300",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawSharesAsTokens",
            "nameLocation": "7511:22:14",
            "parameters": {
              "id": 7661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7656,
                  "mutability": "mutable",
                  "name": "podOwner",
                  "nameLocation": "7542:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7663,
                  "src": "7534:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7534:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7658,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "7560:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7663,
                  "src": "7552:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7552:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7660,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "7581:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7663,
                  "src": "7573:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7573:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7533:55:14"
            },
            "returnParameters": {
              "id": 7662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7597:0:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7669,
            "nodeType": "FunctionDefinition",
            "src": "7732:61:14",
            "nodes": [],
            "documentation": {
              "id": 7664,
              "nodeType": "StructuredDocumentation",
              "src": "7604:123:14",
              "text": " @notice the deneb hard fork timestamp used to determine which proof path to use for proving a withdrawal"
            },
            "functionSelector": "44e71c80",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "denebForkTimestamp",
            "nameLocation": "7741:18:14",
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7759:2:14"
            },
            "returnParameters": {
              "id": 7668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7669,
                  "src": "7785:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7666,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7785:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7784:8:14"
            },
            "scope": 7676,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7675,
            "nodeType": "FunctionDefinition",
            "src": "8124:70:14",
            "nodes": [],
            "documentation": {
              "id": 7670,
              "nodeType": "StructuredDocumentation",
              "src": "7800:319:14",
              "text": " setting the deneb hard fork timestamp by the eigenPodManager owner\n @dev this function is designed to be called twice.  Once, it is set to type(uint64).max \n prior to the actual deneb fork timestamp being set, and then the second time it is set \n to the actual deneb fork timestamp."
            },
            "functionSelector": "463db038",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDenebForkTimestamp",
            "nameLocation": "8133:21:14",
            "parameters": {
              "id": 7673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7672,
                  "mutability": "mutable",
                  "name": "newDenebForkTimestamp",
                  "nameLocation": "8162:21:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 7675,
                  "src": "8155:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7671,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8155:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8154:30:14"
            },
            "returnParameters": {
              "id": 7674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8193:0:14"
            },
            "scope": 7676,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7455,
              "name": "IPausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7748,
              "src": "611:9:14"
            },
            "id": 7456,
            "nodeType": "InheritanceSpecifier",
            "src": "611:9:14"
          }
        ],
        "canonicalName": "IEigenPodManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7454,
          "nodeType": "StructuredDocumentation",
          "src": "325:254:14",
          "text": " @title Interface for factory that creates and manages solo staking pods that have their withdrawal credentials pointed to EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          7676,
          7748
        ],
        "name": "IEigenPodManager",
        "nameLocation": "591:16:14",
        "scope": 7677,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 14
}