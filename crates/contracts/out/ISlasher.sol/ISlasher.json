{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previouslySlashedAddress",
          "type": "address"
        }
      ],
      "name": "FrozenStatusReset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stalestUpdateBlock",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "latestServeUntilBlock",
          "type": "uint32"
        }
      ],
      "name": "MiddlewareTimesAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "slashedOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "slashingContract",
          "type": "address"
        }
      ],
      "name": "OperatorFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "OptedIntoSlashing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "contractCanSlashOperatorUntilBlock",
          "type": "uint32"
        }
      ],
      "name": "SlashingAbilityRevoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toBeSlashed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "slashingContract",
          "type": "address"
        }
      ],
      "name": "canSlash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "withdrawalStartBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "middlewareTimesIndex",
          "type": "uint256"
        }
      ],
      "name": "canWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "serviceContract",
          "type": "address"
        }
      ],
      "name": "contractCanSlashOperatorUntilBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toBeFrozen",
          "type": "address"
        }
      ],
      "name": "freezeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "updateBlock",
          "type": "uint32"
        }
      ],
      "name": "getCorrectValueForInsertAfter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getMiddlewareTimesIndexServeUntilBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getMiddlewareTimesIndexStalestUpdateBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "serviceContract",
          "type": "address"
        }
      ],
      "name": "latestUpdateBlock",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "middlewareTimesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "arrayIndex",
          "type": "uint256"
        }
      ],
      "name": "operatorToMiddlewareTimes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "stalestUpdateBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "latestServeUntilBlock",
              "type": "uint32"
            }
          ],
          "internalType": "struct ISlasher.MiddlewareTimes",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "node",
          "type": "address"
        }
      ],
      "name": "operatorWhitelistedContractsLinkedListEntry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "operatorWhitelistedContractsLinkedListSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "optIntoSlashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "serveUntilBlock",
          "type": "uint32"
        }
      ],
      "name": "recordFirstStakeUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "serveUntilBlock",
          "type": "uint32"
        }
      ],
      "name": "recordLastStakeUpdateAndRevokeSlashingAbility",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "updateBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "serveUntilBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "insertAfter",
          "type": "uint256"
        }
      ],
      "name": "recordStakeUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "frozenAddresses",
          "type": "address[]"
        }
      ],
      "name": "resetFrozenStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyManager",
      "outputs": [
        {
          "internalType": "contract IStrategyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "canSlash(address,address)": "d98128c0",
    "canWithdraw(address,uint32,uint256)": "8105e043",
    "contractCanSlashOperatorUntilBlock(address,address)": "6f0c2f74",
    "delegation()": "df5cf723",
    "freezeOperator(address)": "38c8ee64",
    "getCorrectValueForInsertAfter(address,uint32)": "723e59c7",
    "getMiddlewareTimesIndexServeUntilBlock(address,uint32)": "7259a45c",
    "getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)": "1874e5ae",
    "isFrozen(address)": "e5839836",
    "latestUpdateBlock(address,address)": "da16e29b",
    "middlewareTimesLength(address)": "a49db732",
    "operatorToMiddlewareTimes(address,uint256)": "282670fc",
    "operatorWhitelistedContractsLinkedListEntry(address,address)": "855fcc4a",
    "operatorWhitelistedContractsLinkedListSize(address)": "e921d4fa",
    "optIntoSlashing(address)": "f73b7519",
    "recordFirstStakeUpdate(address,uint32)": "175d3205",
    "recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)": "0ffabbce",
    "recordStakeUpdate(address,uint32,uint32,uint256)": "c747075b",
    "resetFrozenStatus(address[])": "7cf72bba",
    "strategyManager()": "39b70e38"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previouslySlashedAddress\",\"type\":\"address\"}],\"name\":\"FrozenStatusReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stalestUpdateBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"latestServeUntilBlock\",\"type\":\"uint32\"}],\"name\":\"MiddlewareTimesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"slashedOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"slashingContract\",\"type\":\"address\"}],\"name\":\"OperatorFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"OptedIntoSlashing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"contractCanSlashOperatorUntilBlock\",\"type\":\"uint32\"}],\"name\":\"SlashingAbilityRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBeSlashed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"slashingContract\",\"type\":\"address\"}],\"name\":\"canSlash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceContract\",\"type\":\"address\"}],\"name\":\"contractCanSlashOperatorUntilBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBeFrozen\",\"type\":\"address\"}],\"name\":\"freezeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"updateBlock\",\"type\":\"uint32\"}],\"name\":\"getCorrectValueForInsertAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getMiddlewareTimesIndexServeUntilBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getMiddlewareTimesIndexStalestUpdateBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceContract\",\"type\":\"address\"}],\"name\":\"latestUpdateBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"middlewareTimesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"arrayIndex\",\"type\":\"uint256\"}],\"name\":\"operatorToMiddlewareTimes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"stalestUpdateBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"latestServeUntilBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct ISlasher.MiddlewareTimes\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"operatorWhitelistedContractsLinkedListEntry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorWhitelistedContractsLinkedListSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"optIntoSlashing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"}],\"name\":\"recordFirstStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"}],\"name\":\"recordLastStakeUpdateAndRevokeSlashingAbility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"updateBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"insertAfter\",\"type\":\"uint256\"}],\"name\":\"recordStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"frozenAddresses\",\"type\":\"address[]\"}],\"name\":\"resetFrozenStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"OperatorFrozen(address,address)\":{\"details\":\"The `slashingContract` must have permission to slash the `slashedOperator`, i.e. `canSlash(slasherOperator, slashingContract)` must return 'true'.\"}},\"kind\":\"dev\",\"methods\":{\"canWithdraw(address,uint32,uint256)\":{\"details\":\"The correct `middlewareTimesIndex` input should be computable off-chain.\",\"params\":{\"middlewareTimesIndex\":\"Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw\",\"operator\":\"Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator, this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.\",\"withdrawalStartBlock\":\"The block number at which the withdrawal was initiated.\"}},\"freezeOperator(address)\":{\"details\":\"Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`.\",\"params\":{\"toBeFrozen\":\"The operator to be frozen.\"}},\"isFrozen(address)\":{\"params\":{\"staker\":\"The staker of interest.\"},\"returns\":{\"_0\":\"Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated to an operator who has their status set to frozen. Otherwise returns 'false'.\"}},\"optIntoSlashing(address)\":{\"details\":\"Typically, this function must be called prior to registering for a middleware.\"},\"recordFirstStakeUpdate(address,uint32)\":{\"details\":\"adds the middleware's slashing contract to the operator's linked list\",\"params\":{\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at the current block is slashable\"}},\"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\":{\"details\":\"removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to slash `operator` once `serveUntil` is reached\",\"params\":{\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at the current block is slashable\"}},\"recordStakeUpdate(address,uint32,uint32,uint256)\":{\"details\":\"insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,      but it is anticipated to be rare and not detrimental.\",\"params\":{\"insertAfter\":\"the element of the operators linked list that the currently updating middleware should be inserted after\",\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at updateBlock is slashable\",\"updateBlock\":\"the block for which the stake update is being recorded\"}},\"resetFrozenStatus(address[])\":{\"details\":\"Callable only by the contract owner (i.e. governance).\"}},\"title\":\"Interface for the primary 'slashing' contract for EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"FrozenStatusReset(address)\":{\"notice\":\"Emitted when `previouslySlashedAddress` is 'unfrozen', allowing them to again move deposited funds within EigenLayer.\"},\"MiddlewareTimesAdded(address,uint256,uint32,uint32)\":{\"notice\":\"Emitted when a middleware times is added to `operator`'s array.\"},\"OperatorFrozen(address,address)\":{\"notice\":\"Emitted when `slashingContract` 'freezes' the `slashedOperator`.\"},\"OptedIntoSlashing(address,address)\":{\"notice\":\"Emitted when `operator` begins to allow `contractAddress` to slash them.\"},\"SlashingAbilityRevoked(address,address,uint32)\":{\"notice\":\"Emitted when `contractAddress` signals that it will no longer be able to slash `operator` after the `contractCanSlashOperatorUntilBlock`.\"}},\"kind\":\"user\",\"methods\":{\"canSlash(address,address)\":{\"notice\":\"Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`.\"},\"canWithdraw(address,uint32,uint256)\":{\"notice\":\"Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal. This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist.\"},\"contractCanSlashOperatorUntilBlock(address,address)\":{\"notice\":\"Returns the block until which `serviceContract` is allowed to slash the `operator`.\"},\"delegation()\":{\"notice\":\"The DelegationManager contract of EigenLayer\"},\"freezeOperator(address)\":{\"notice\":\"Used for 'slashing' a certain operator.\"},\"getCorrectValueForInsertAfter(address,uint32)\":{\"notice\":\"A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`.\"},\"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`.\"},\"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`.\"},\"isFrozen(address)\":{\"notice\":\"Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed and the staker's status is reset (to 'unfrozen').\"},\"latestUpdateBlock(address,address)\":{\"notice\":\"Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake\"},\"middlewareTimesLength(address)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator].length`\"},\"operatorToMiddlewareTimes(address,uint256)\":{\"notice\":\"operator =>  [      (          the least recent update block of all of the middlewares it's serving/served,          latest time that the stake bonded at that update needed to serve until      )  ]\"},\"operatorWhitelistedContractsLinkedListEntry(address,address)\":{\"notice\":\"Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`).\"},\"operatorWhitelistedContractsLinkedListSize(address)\":{\"notice\":\"Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`.\"},\"optIntoSlashing(address)\":{\"notice\":\"Gives the `contractAddress` permission to slash the funds of the caller.\"},\"recordFirstStakeUpdate(address,uint32)\":{\"notice\":\"this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration         is slashable until serveUntil\"},\"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\":{\"notice\":\"this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration         is slashable until serveUntil\"},\"recordStakeUpdate(address,uint32,uint32,uint256)\":{\"notice\":\"this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)         to make sure the operator's stake at updateBlock is slashable until serveUntil\"},\"resetFrozenStatus(address[])\":{\"notice\":\"Removes the 'frozen' status from each of the `frozenAddresses`\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract of EigenLayer\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSee the `Slasher` contract itself for implementation details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":\"ISlasher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previouslySlashedAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FrozenStatusReset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "stalestUpdateBlock",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "latestServeUntilBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MiddlewareTimesAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "slashedOperator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "slashingContract",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperatorFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OptedIntoSlashing",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "contractCanSlashOperatorUntilBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlashingAbilityRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "toBeSlashed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "slashingContract",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canSlash",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "middlewareTimesIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "canWithdraw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "serviceContract",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contractCanSlashOperatorUntilBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "toBeFrozen",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "updateBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCorrectValueForInsertAfter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMiddlewareTimesIndexServeUntilBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMiddlewareTimesIndexStalestUpdateBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "serviceContract",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "latestUpdateBlock",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "middlewareTimesLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "arrayIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorToMiddlewareTimes",
          "outputs": [
            {
              "internalType": "struct ISlasher.MiddlewareTimes",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "stalestUpdateBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "latestServeUntilBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "node",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorWhitelistedContractsLinkedListEntry",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorWhitelistedContractsLinkedListSize",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "optIntoSlashing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "serveUntilBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordFirstStakeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "serveUntilBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordLastStakeUpdateAndRevokeSlashingAbility"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "updateBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "serveUntilBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "insertAfter",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordStakeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "frozenAddresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetFrozenStatus"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "canWithdraw(address,uint32,uint256)": {
            "details": "The correct `middlewareTimesIndex` input should be computable off-chain.",
            "params": {
              "middlewareTimesIndex": "Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw",
              "operator": "Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator, this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.",
              "withdrawalStartBlock": "The block number at which the withdrawal was initiated."
            }
          },
          "freezeOperator(address)": {
            "details": "Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`.",
            "params": {
              "toBeFrozen": "The operator to be frozen."
            }
          },
          "isFrozen(address)": {
            "params": {
              "staker": "The staker of interest."
            },
            "returns": {
              "_0": "Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated to an operator who has their status set to frozen. Otherwise returns 'false'."
            }
          },
          "optIntoSlashing(address)": {
            "details": "Typically, this function must be called prior to registering for a middleware."
          },
          "recordFirstStakeUpdate(address,uint32)": {
            "details": "adds the middleware's slashing contract to the operator's linked list",
            "params": {
              "operator": "the operator whose stake update is being recorded",
              "serveUntilBlock": "the block until which the operator's stake at the current block is slashable"
            }
          },
          "recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)": {
            "details": "removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to slash `operator` once `serveUntil` is reached",
            "params": {
              "operator": "the operator whose stake update is being recorded",
              "serveUntilBlock": "the block until which the operator's stake at the current block is slashable"
            }
          },
          "recordStakeUpdate(address,uint32,uint32,uint256)": {
            "details": "insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,      but it is anticipated to be rare and not detrimental.",
            "params": {
              "insertAfter": "the element of the operators linked list that the currently updating middleware should be inserted after",
              "operator": "the operator whose stake update is being recorded",
              "serveUntilBlock": "the block until which the operator's stake at updateBlock is slashable",
              "updateBlock": "the block for which the stake update is being recorded"
            }
          },
          "resetFrozenStatus(address[])": {
            "details": "Callable only by the contract owner (i.e. governance)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canSlash(address,address)": {
            "notice": "Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`."
          },
          "canWithdraw(address,uint32,uint256)": {
            "notice": "Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal. This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist."
          },
          "contractCanSlashOperatorUntilBlock(address,address)": {
            "notice": "Returns the block until which `serviceContract` is allowed to slash the `operator`."
          },
          "delegation()": {
            "notice": "The DelegationManager contract of EigenLayer"
          },
          "freezeOperator(address)": {
            "notice": "Used for 'slashing' a certain operator."
          },
          "getCorrectValueForInsertAfter(address,uint32)": {
            "notice": "A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`."
          },
          "getMiddlewareTimesIndexServeUntilBlock(address,uint32)": {
            "notice": "Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`."
          },
          "getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)": {
            "notice": "Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`."
          },
          "isFrozen(address)": {
            "notice": "Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed and the staker's status is reset (to 'unfrozen')."
          },
          "latestUpdateBlock(address,address)": {
            "notice": "Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake"
          },
          "middlewareTimesLength(address)": {
            "notice": "Getter function for fetching `operatorToMiddlewareTimes[operator].length`"
          },
          "operatorToMiddlewareTimes(address,uint256)": {
            "notice": "operator =>  [      (          the least recent update block of all of the middlewares it's serving/served,          latest time that the stake bonded at that update needed to serve until      )  ]"
          },
          "operatorWhitelistedContractsLinkedListEntry(address,address)": {
            "notice": "Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`)."
          },
          "operatorWhitelistedContractsLinkedListSize(address)": {
            "notice": "Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`."
          },
          "optIntoSlashing(address)": {
            "notice": "Gives the `contractAddress` permission to slash the funds of the caller."
          },
          "recordFirstStakeUpdate(address,uint32)": {
            "notice": "this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration         is slashable until serveUntil"
          },
          "recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)": {
            "notice": "this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration         is slashable until serveUntil"
          },
          "recordStakeUpdate(address,uint32,uint32,uint256)": {
            "notice": "this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)         to make sure the operator's stake at updateBlock is slashable until serveUntil"
          },
          "resetFrozenStatus(address[])": {
            "notice": "Removes the 'frozen' status from each of the `frozenAddresses`"
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract of EigenLayer"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": "ISlasher"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol",
    "id": 8034,
    "exportedSymbols": {
      "IDelegationManager": [
        7102
      ],
      "IERC20": [
        59726
      ],
      "ISignatureUtils": [
        7794
      ],
      "ISlasher": [
        8033
      ],
      "IStrategy": [
        8135
      ],
      "IStrategyManager": [
        8383
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:10833:18",
    "nodes": [
      {
        "id": 7796,
        "nodeType": "PragmaDirective",
        "src": "37:24:18",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 7797,
        "nodeType": "ImportDirective",
        "src": "63:32:18",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol",
        "file": "./IStrategyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8034,
        "sourceUnit": 8384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7798,
        "nodeType": "ImportDirective",
        "src": "96:34:18",
        "nodes": [],
        "absolutePath": "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol",
        "file": "./IDelegationManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8034,
        "sourceUnit": 7103,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8033,
        "nodeType": "ContractDefinition",
        "src": "395:10474:18",
        "nodes": [
          {
            "id": 7804,
            "nodeType": "StructDefinition",
            "src": "545:358:18",
            "nodes": [],
            "canonicalName": "ISlasher.MiddlewareTimes",
            "members": [
              {
                "constant": false,
                "id": 7801,
                "mutability": "mutable",
                "name": "stalestUpdateBlock",
                "nameLocation": "744:18:18",
                "nodeType": "VariableDeclaration",
                "scope": 7804,
                "src": "737:25:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7800,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "737:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7803,
                "mutability": "mutable",
                "name": "latestServeUntilBlock",
                "nameLocation": "875:21:18",
                "nodeType": "VariableDeclaration",
                "scope": 7804,
                "src": "868:28:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7802,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "868:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MiddlewareTimes",
            "nameLocation": "552:15:18",
            "scope": 8033,
            "visibility": "public"
          },
          {
            "id": 7811,
            "nodeType": "StructDefinition",
            "src": "1018:494:18",
            "nodes": [],
            "canonicalName": "ISlasher.MiddlewareDetails",
            "members": [
              {
                "constant": false,
                "id": 7806,
                "mutability": "mutable",
                "name": "registrationMayBeginAtBlock",
                "nameLocation": "1215:27:18",
                "nodeType": "VariableDeclaration",
                "scope": 7811,
                "src": "1208:34:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7805,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1208:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7808,
                "mutability": "mutable",
                "name": "contractCanSlashOperatorUntilBlock",
                "nameLocation": "1335:34:18",
                "nodeType": "VariableDeclaration",
                "scope": 7811,
                "src": "1328:41:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7807,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1328:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7810,
                "mutability": "mutable",
                "name": "latestUpdateBlock",
                "nameLocation": "1488:17:18",
                "nodeType": "VariableDeclaration",
                "scope": 7811,
                "src": "1481:24:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7809,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1481:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MiddlewareDetails",
            "nameLocation": "1025:17:18",
            "scope": 8033,
            "visibility": "public"
          },
          {
            "id": 7822,
            "nodeType": "EventDefinition",
            "src": "1598:155:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7812,
              "nodeType": "StructuredDocumentation",
              "src": "1518:75:18",
              "text": "@notice Emitted when a middleware times is added to `operator`'s array."
            },
            "name": "MiddlewareTimesAdded",
            "nameLocation": "1604:20:18",
            "parameters": {
              "id": 7821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7814,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1642:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1634:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1668:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1660:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stalestUpdateBlock",
                  "nameLocation": "1690:18:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1683:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7817,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "latestServeUntilBlock",
                  "nameLocation": "1725:21:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1718:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7819,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:128:18"
            }
          },
          {
            "id": 7829,
            "nodeType": "EventDefinition",
            "src": "1848:83:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7823,
              "nodeType": "StructuredDocumentation",
              "src": "1759:84:18",
              "text": "@notice Emitted when `operator` begins to allow `contractAddress` to slash them."
            },
            "name": "OptedIntoSlashing",
            "nameLocation": "1854:17:18",
            "parameters": {
              "id": 7828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7825,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1888:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7829,
                  "src": "1872:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1914:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7829,
                  "src": "1898:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:59:18"
            }
          },
          {
            "id": 7838,
            "nodeType": "EventDefinition",
            "src": "2091:161:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7830,
              "nodeType": "StructuredDocumentation",
              "src": "1937:149:18",
              "text": "@notice Emitted when `contractAddress` signals that it will no longer be able to slash `operator` after the `contractCanSlashOperatorUntilBlock`."
            },
            "name": "SlashingAbilityRevoked",
            "nameLocation": "2097:22:18",
            "parameters": {
              "id": 7837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2145:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7838,
                  "src": "2129:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7834,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2179:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7838,
                  "src": "2163:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractCanSlashOperatorUntilBlock",
                  "nameLocation": "2211:34:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7838,
                  "src": "2204:41:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7835,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:132:18"
            }
          },
          {
            "id": 7845,
            "nodeType": "EventDefinition",
            "src": "2513:88:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7839,
              "nodeType": "StructuredDocumentation",
              "src": "2258:250:18",
              "text": " @notice Emitted when `slashingContract` 'freezes' the `slashedOperator`.\n @dev The `slashingContract` must have permission to slash the `slashedOperator`, i.e. `canSlash(slasherOperator, slashingContract)` must return 'true'."
            },
            "name": "OperatorFrozen",
            "nameLocation": "2519:14:18",
            "parameters": {
              "id": 7844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7841,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "slashedOperator",
                  "nameLocation": "2550:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7845,
                  "src": "2534:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7843,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "slashingContract",
                  "nameLocation": "2583:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7845,
                  "src": "2567:32:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2533:67:18"
            }
          },
          {
            "id": 7850,
            "nodeType": "EventDefinition",
            "src": "2741:66:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7846,
              "nodeType": "StructuredDocumentation",
              "src": "2607:129:18",
              "text": "@notice Emitted when `previouslySlashedAddress` is 'unfrozen', allowing them to again move deposited funds within EigenLayer."
            },
            "name": "FrozenStatusReset",
            "nameLocation": "2747:17:18",
            "parameters": {
              "id": 7849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7848,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previouslySlashedAddress",
                  "nameLocation": "2781:24:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7850,
                  "src": "2765:40:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2764:42:18"
            }
          },
          {
            "id": 7856,
            "nodeType": "FunctionDefinition",
            "src": "3008:59:18",
            "nodes": [],
            "documentation": {
              "id": 7851,
              "nodeType": "StructuredDocumentation",
              "src": "2813:190:18",
              "text": " @notice Gives the `contractAddress` permission to slash the funds of the caller.\n @dev Typically, this function must be called prior to registering for a middleware."
            },
            "functionSelector": "f73b7519",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "optIntoSlashing",
            "nameLocation": "3017:15:18",
            "parameters": {
              "id": 7854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7853,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "3041:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7856,
                  "src": "3033:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3032:25:18"
            },
            "returnParameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7862,
            "nodeType": "FunctionDefinition",
            "src": "3508:53:18",
            "nodes": [],
            "documentation": {
              "id": 7857,
              "nodeType": "StructuredDocumentation",
              "src": "3073:430:18",
              "text": " @notice Used for 'slashing' a certain operator.\n @param toBeFrozen The operator to be frozen.\n @dev Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.\n @dev The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`."
            },
            "functionSelector": "38c8ee64",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezeOperator",
            "nameLocation": "3517:14:18",
            "parameters": {
              "id": 7860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7859,
                  "mutability": "mutable",
                  "name": "toBeFrozen",
                  "nameLocation": "3540:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "3532:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3531:20:18"
            },
            "returnParameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3560:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7869,
            "nodeType": "FunctionDefinition",
            "src": "3728:72:18",
            "nodes": [],
            "documentation": {
              "id": 7863,
              "nodeType": "StructuredDocumentation",
              "src": "3567:156:18",
              "text": " @notice Removes the 'frozen' status from each of the `frozenAddresses`\n @dev Callable only by the contract owner (i.e. governance)."
            },
            "functionSelector": "7cf72bba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "resetFrozenStatus",
            "nameLocation": "3737:17:18",
            "parameters": {
              "id": 7867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7866,
                  "mutability": "mutable",
                  "name": "frozenAddresses",
                  "nameLocation": "3774:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7869,
                  "src": "3755:34:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7864,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3755:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7865,
                    "nodeType": "ArrayTypeName",
                    "src": "3755:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3754:36:18"
            },
            "returnParameters": {
              "id": 7868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3799:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7877,
            "nodeType": "FunctionDefinition",
            "src": "4269:83:18",
            "nodes": [],
            "documentation": {
              "id": 7870,
              "nodeType": "StructuredDocumentation",
              "src": "3806:458:18",
              "text": " @notice this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration\n         is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n @dev adds the middleware's slashing contract to the operator's linked list"
            },
            "functionSelector": "175d3205",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recordFirstStakeUpdate",
            "nameLocation": "4278:22:18",
            "parameters": {
              "id": 7875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7872,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4309:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7877,
                  "src": "4301:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7874,
                  "mutability": "mutable",
                  "name": "serveUntilBlock",
                  "nameLocation": "4326:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7877,
                  "src": "4319:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7873,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4319:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4300:42:18"
            },
            "returnParameters": {
              "id": 7876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4351:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7889,
            "nodeType": "FunctionDefinition",
            "src": "5189:157:18",
            "nodes": [],
            "documentation": {
              "id": 7878,
              "nodeType": "StructuredDocumentation",
              "src": "4358:826:18",
              "text": " @notice this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)\n         to make sure the operator's stake at updateBlock is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param updateBlock the block for which the stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at updateBlock is slashable\n @param insertAfter the element of the operators linked list that the currently updating middleware should be inserted after\n @dev insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,\n      but it is anticipated to be rare and not detrimental."
            },
            "functionSelector": "c747075b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recordStakeUpdate",
            "nameLocation": "5198:17:18",
            "parameters": {
              "id": 7887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7880,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5233:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "5225:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7882,
                  "mutability": "mutable",
                  "name": "updateBlock",
                  "nameLocation": "5258:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "5251:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7881,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7884,
                  "mutability": "mutable",
                  "name": "serveUntilBlock",
                  "nameLocation": "5286:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "5279:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7883,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7886,
                  "mutability": "mutable",
                  "name": "insertAfter",
                  "nameLocation": "5319:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "5311:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5215:121:18"
            },
            "returnParameters": {
              "id": 7888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5345:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7897,
            "nodeType": "FunctionDefinition",
            "src": "5931:106:18",
            "nodes": [],
            "documentation": {
              "id": 7890,
              "nodeType": "StructuredDocumentation",
              "src": "5352:574:18",
              "text": " @notice this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration\n         is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n @dev removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to\n slash `operator` once `serveUntil` is reached"
            },
            "functionSelector": "0ffabbce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recordLastStakeUpdateAndRevokeSlashingAbility",
            "nameLocation": "5940:45:18",
            "parameters": {
              "id": 7895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7892,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5994:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7897,
                  "src": "5986:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5986:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7894,
                  "mutability": "mutable",
                  "name": "serveUntilBlock",
                  "nameLocation": "6011:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7897,
                  "src": "6004:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7893,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6004:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5985:42:18"
            },
            "returnParameters": {
              "id": 7896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6036:0:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7904,
            "nodeType": "FunctionDefinition",
            "src": "6102:68:18",
            "nodes": [],
            "documentation": {
              "id": 7898,
              "nodeType": "StructuredDocumentation",
              "src": "6043:54:18",
              "text": "@notice The StrategyManager contract of EigenLayer"
            },
            "functionSelector": "39b70e38",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyManager",
            "nameLocation": "6111:15:18",
            "parameters": {
              "id": 7899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6126:2:18"
            },
            "returnParameters": {
              "id": 7903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7904,
                  "src": "6152:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                    "typeString": "contract IStrategyManager"
                  },
                  "typeName": {
                    "id": 7901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7900,
                      "name": "IStrategyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8383,
                      "src": "6152:16:18"
                    },
                    "referencedDeclaration": 8383,
                    "src": "6152:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyManager_$8383",
                      "typeString": "contract IStrategyManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6151:18:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7911,
            "nodeType": "FunctionDefinition",
            "src": "6237:65:18",
            "nodes": [],
            "documentation": {
              "id": 7905,
              "nodeType": "StructuredDocumentation",
              "src": "6176:56:18",
              "text": "@notice The DelegationManager contract of EigenLayer"
            },
            "functionSelector": "df5cf723",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegation",
            "nameLocation": "6246:10:18",
            "parameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6256:2:18"
            },
            "returnParameters": {
              "id": 7910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7911,
                  "src": "6282:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 7908,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7907,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "6282:18:18"
                    },
                    "referencedDeclaration": 7102,
                    "src": "6282:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6281:20:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7919,
            "nodeType": "FunctionDefinition",
            "src": "6893:63:18",
            "nodes": [],
            "documentation": {
              "id": 7912,
              "nodeType": "StructuredDocumentation",
              "src": "6308:580:18",
              "text": " @notice Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to\n slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed\n and the staker's status is reset (to 'unfrozen').\n @param staker The staker of interest.\n @return Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated\n to an operator who has their status set to frozen. Otherwise returns 'false'."
            },
            "functionSelector": "e5839836",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isFrozen",
            "nameLocation": "6902:8:18",
            "parameters": {
              "id": 7915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7914,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6919:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7919,
                  "src": "6911:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6911:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6910:16:18"
            },
            "returnParameters": {
              "id": 7918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7919,
                  "src": "6950:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6949:6:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7929,
            "nodeType": "FunctionDefinition",
            "src": "7058:94:18",
            "nodes": [],
            "documentation": {
              "id": 7920,
              "nodeType": "StructuredDocumentation",
              "src": "6962:91:18",
              "text": "@notice Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`."
            },
            "functionSelector": "d98128c0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canSlash",
            "nameLocation": "7067:8:18",
            "parameters": {
              "id": 7925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7922,
                  "mutability": "mutable",
                  "name": "toBeSlashed",
                  "nameLocation": "7084:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "7076:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7076:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7924,
                  "mutability": "mutable",
                  "name": "slashingContract",
                  "nameLocation": "7105:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "7097:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7097:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7075:47:18"
            },
            "returnParameters": {
              "id": 7928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "7146:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7146:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7145:6:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7939,
            "nodeType": "FunctionDefinition",
            "src": "7258:140:18",
            "nodes": [],
            "documentation": {
              "id": 7930,
              "nodeType": "StructuredDocumentation",
              "src": "7158:95:18",
              "text": "@notice Returns the block until which `serviceContract` is allowed to slash the `operator`."
            },
            "functionSelector": "6f0c2f74",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractCanSlashOperatorUntilBlock",
            "nameLocation": "7267:34:18",
            "parameters": {
              "id": 7935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7932,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7319:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7939,
                  "src": "7311:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7934,
                  "mutability": "mutable",
                  "name": "serviceContract",
                  "nameLocation": "7345:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7939,
                  "src": "7337:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7337:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7301:65:18"
            },
            "returnParameters": {
              "id": 7938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7939,
                  "src": "7390:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7936,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7389:8:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7949,
            "nodeType": "FunctionDefinition",
            "src": "7517:101:18",
            "nodes": [],
            "documentation": {
              "id": 7940,
              "nodeType": "StructuredDocumentation",
              "src": "7404:108:18",
              "text": "@notice Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake"
            },
            "functionSelector": "da16e29b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "latestUpdateBlock",
            "nameLocation": "7526:17:18",
            "parameters": {
              "id": 7945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7942,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7552:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7949,
                  "src": "7544:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7544:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7944,
                  "mutability": "mutable",
                  "name": "serviceContract",
                  "nameLocation": "7570:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7949,
                  "src": "7562:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7562:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7543:43:18"
            },
            "returnParameters": {
              "id": 7948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7949,
                  "src": "7610:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7946,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7610:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7609:8:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7959,
            "nodeType": "FunctionDefinition",
            "src": "7760:109:18",
            "nodes": [],
            "documentation": {
              "id": 7950,
              "nodeType": "StructuredDocumentation",
              "src": "7624:131:18",
              "text": "@notice A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`."
            },
            "functionSelector": "723e59c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCorrectValueForInsertAfter",
            "nameLocation": "7769:29:18",
            "parameters": {
              "id": 7955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7952,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7807:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "7799:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7799:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "updateBlock",
                  "nameLocation": "7824:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "7817:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7817:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7798:38:18"
            },
            "returnParameters": {
              "id": 7958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "7860:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7860:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7859:9:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7971,
            "nodeType": "FunctionDefinition",
            "src": "9157:152:18",
            "nodes": [],
            "documentation": {
              "id": 7960,
              "nodeType": "StructuredDocumentation",
              "src": "7875:1277:18",
              "text": " @notice Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used\n to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified\n struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal.\n This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event\n that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist.\n @param operator Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator,\n this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.\n @param withdrawalStartBlock The block number at which the withdrawal was initiated.\n @param middlewareTimesIndex Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw\n @dev The correct `middlewareTimesIndex` input should be computable off-chain."
            },
            "functionSelector": "8105e043",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canWithdraw",
            "nameLocation": "9166:11:18",
            "parameters": {
              "id": 7967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9195:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "9187:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9187:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7964,
                  "mutability": "mutable",
                  "name": "withdrawalStartBlock",
                  "nameLocation": "9220:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "9213:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7963,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9213:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7966,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndex",
                  "nameLocation": "9258:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "9250:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9250:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9177:107:18"
            },
            "returnParameters": {
              "id": 7970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "9303:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9303:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9302:6:18"
            },
            "scope": 8033,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7982,
            "nodeType": "FunctionDefinition",
            "src": "9578:142:18",
            "nodes": [],
            "documentation": {
              "id": 7972,
              "nodeType": "StructuredDocumentation",
              "src": "9315:258:18",
              "text": " operator =>\n  [\n      (\n          the least recent update block of all of the middlewares it's serving/served,\n          latest time that the stake bonded at that update needed to serve until\n      )\n  ]"
            },
            "functionSelector": "282670fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorToMiddlewareTimes",
            "nameLocation": "9587:25:18",
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9630:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7982,
                  "src": "9622:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9622:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7976,
                  "mutability": "mutable",
                  "name": "arrayIndex",
                  "nameLocation": "9656:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7982,
                  "src": "9648:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9648:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9612:60:18"
            },
            "returnParameters": {
              "id": 7981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7982,
                  "src": "9696:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MiddlewareTimes_$7804_memory_ptr",
                    "typeString": "struct ISlasher.MiddlewareTimes"
                  },
                  "typeName": {
                    "id": 7979,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7978,
                      "name": "MiddlewareTimes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7804,
                      "src": "9696:15:18"
                    },
                    "referencedDeclaration": 7804,
                    "src": "9696:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MiddlewareTimes_$7804_storage_ptr",
                      "typeString": "struct ISlasher.MiddlewareTimes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9695:24:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7990,
            "nodeType": "FunctionDefinition",
            "src": "9816:81:18",
            "nodes": [],
            "documentation": {
              "id": 7983,
              "nodeType": "StructuredDocumentation",
              "src": "9726:85:18",
              "text": "@notice Getter function for fetching `operatorToMiddlewareTimes[operator].length`"
            },
            "functionSelector": "a49db732",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "middlewareTimesLength",
            "nameLocation": "9825:21:18",
            "parameters": {
              "id": 7986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7985,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9855:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 7990,
                  "src": "9847:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9847:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9846:18:18"
            },
            "returnParameters": {
              "id": 7989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7990,
                  "src": "9888:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9888:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9887:9:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8000,
            "nodeType": "FunctionDefinition",
            "src": "10013:114:18",
            "nodes": [],
            "documentation": {
              "id": 7991,
              "nodeType": "StructuredDocumentation",
              "src": "9903:105:18",
              "text": "@notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`."
            },
            "functionSelector": "1874e5ae",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMiddlewareTimesIndexStalestUpdateBlock",
            "nameLocation": "10022:41:18",
            "parameters": {
              "id": 7996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7993,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10072:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8000,
                  "src": "10064:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10064:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7995,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10089:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8000,
                  "src": "10082:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7994,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10082:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10063:32:18"
            },
            "returnParameters": {
              "id": 7999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8000,
                  "src": "10119:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7997,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10119:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10118:8:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8010,
            "nodeType": "FunctionDefinition",
            "src": "10241:111:18",
            "nodes": [],
            "documentation": {
              "id": 8001,
              "nodeType": "StructuredDocumentation",
              "src": "10133:103:18",
              "text": "@notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`."
            },
            "functionSelector": "7259a45c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMiddlewareTimesIndexServeUntilBlock",
            "nameLocation": "10250:38:18",
            "parameters": {
              "id": 8006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8003,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10297:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8010,
                  "src": "10289:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10289:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8005,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10314:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8010,
                  "src": "10307:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10307:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10288:32:18"
            },
            "returnParameters": {
              "id": 8009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8010,
                  "src": "10344:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8007,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10344:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10343:8:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8018,
            "nodeType": "FunctionDefinition",
            "src": "10461:102:18",
            "nodes": [],
            "documentation": {
              "id": 8011,
              "nodeType": "StructuredDocumentation",
              "src": "10358:98:18",
              "text": "@notice Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`."
            },
            "functionSelector": "e921d4fa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorWhitelistedContractsLinkedListSize",
            "nameLocation": "10470:42:18",
            "parameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8013,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10521:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8018,
                  "src": "10513:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10513:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10512:18:18"
            },
            "returnParameters": {
              "id": 8017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8018,
                  "src": "10554:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10554:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10553:9:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8032,
            "nodeType": "FunctionDefinition",
            "src": "10713:154:18",
            "nodes": [],
            "documentation": {
              "id": 8019,
              "nodeType": "StructuredDocumentation",
              "src": "10569:139:18",
              "text": "@notice Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`)."
            },
            "functionSelector": "855fcc4a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorWhitelistedContractsLinkedListEntry",
            "nameLocation": "10722:43:18",
            "parameters": {
              "id": 8024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8021,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10783:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8032,
                  "src": "10775:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10775:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8023,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "10809:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 8032,
                  "src": "10801:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10801:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10765:54:18"
            },
            "returnParameters": {
              "id": 8031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8032,
                  "src": "10843:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10843:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8032,
                  "src": "10849:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10849:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8032,
                  "src": "10858:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10858:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10842:24:18"
            },
            "scope": 8033,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISlasher",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7799,
          "nodeType": "StructuredDocumentation",
          "src": "132:262:18",
          "text": " @title Interface for the primary 'slashing' contract for EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice See the `Slasher` contract itself for implementation details."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          8033
        ],
        "name": "ISlasher",
        "nameLocation": "405:8:18",
        "scope": 8034,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 18
}