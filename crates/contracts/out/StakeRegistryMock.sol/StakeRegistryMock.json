{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        }
      ],
      "name": "MinimumStakeForQuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "name": "OperatorStakeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "QuorumCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "StrategyMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromQuorum",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WEIGHTING_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "addStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "deregisterOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getCurrentTotalStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getLatestStakeUpdate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getMockOperatorId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeAtBlockNumberAndIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getStakeHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        }
      ],
      "name": "getStakeUpdateIndexAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeAtBlockNumberFromIndex",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getTotalStakeHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "getTotalStakeIndicesAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeUpdateAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StakeUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "minimumStake",
          "type": "uint96"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams[]",
          "name": "strategyParams",
          "type": "tuple[]"
        }
      ],
      "name": "initializeQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "minimumStakeForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "strategyIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "newMultipliers",
          "type": "uint96[]"
        }
      ],
      "name": "modifyStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "registerOperator",
      "outputs": [
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        },
        {
          "internalType": "uint96[]",
          "name": "",
          "type": "uint96[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registryCoordinator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "indicesToRemove",
          "type": "uint256[]"
        }
      ],
      "name": "removeStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint192",
          "name": "newValue",
          "type": "uint192"
        }
      ],
      "name": "set_updateOperatorStakeReturnBitmap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "strategyParamsByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakeRegistry.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "strategyParamsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "updateOperatorStake",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "weightOfOperatorForQuorum",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610dad806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063ac6bfb03116100f9578063d5eccc0511610097578063f2be94ae11610071578063f2be94ae14610480578063f851e19814610498578063fa28c627146104a6578063ff694a77146104b457600080fd5b8063d5eccc051461042a578063dd9846b91461045d578063df5cf7231461037257600080fd5b8063bd29b8cd116100d3578063bd29b8cd14610418578063c46778a51461042a578063c601527d14610438578063c8294c561461044657600080fd5b8063ac6bfb03146103a5578063adc804da146103c5578063b6904b781461040557600080fd5b80634c51bf91116101665780635f1f2d77116101405780635f1f2d771461032557806366acfefe146103385780636d14a9871461037257806381c075021461038157600080fd5b80634c51bf91146102e05780635401ed27146103105780635e5a67751461031e57600080fd5b8063224a3c39116101a2578063224a3c391461023557806325504777146102965780632cd95940146102bd5780633ca5a5f5146101c957600080fd5b80630491b41c146101c95780631f9b74e0146101f057806320b662981461021e575b600080fd5b6101dd6101d736600461053a565b50600090565b6040519081526020015b60405180910390f35b6102066101fe36600461056d565b600092915050565b6040516001600160601b0390911681526020016101e7565b61023361022c3660046105ef565b5050505050565b005b6101dd61024336600461066f565b6040516bffffffffffffffffffffffff19606083901b166020820152691bdc195c985d1bdc925960b21b6034820152600090603e0160408051601f19818403018152919052805160209091012092915050565b6102af6102a4366004610769565b606080935093915050565b6040516101e7929190610805565b6102d36102cb366004610833565b606092915050565b6040516101e7919061085f565b6102336102ee3660046108d7565b600080546001600160c01b0319166001600160c01b0392909216919091179055565b6102066101fe366004610833565b60006101dd565b610233610333366004610900565b505050565b61035a610346366004610993565b6000546001600160c01b0316949350505050565b6040516001600160c01b0390911681526020016101e7565b604051600081526020016101e7565b61039861038f366004610a02565b60609392505050565b6040516101e79190610a47565b6103b86103b3366004610a85565b6104c2565b6040516101e79190610ab8565b6103d86103d3366004610aed565b6104e7565b6040805182516001600160a01b031681526020928301516001600160601b031692810192909252016101e7565b6103b8610413366004610aed565b610502565b610233610426366004610b17565b5050565b6102066101d736600461053a565b610233610426366004610c27565b610206610454366004610c6a565b60009392505050565b61046b610454366004610ca6565b60405163ffffffff90911681526020016101e7565b61020661048e366004610ce2565b6000949350505050565b6103b8610413366004610833565b610206610454366004610ca6565b610233610333366004610d24565b60408051606081018252600080825260208201819052918101919091525b9392505050565b60408051808201909152600080825260208201525b92915050565b60408051606081018252600080825260208201819052918101919091526104fc565b803560ff8116811461053557600080fd5b919050565b60006020828403121561054c57600080fd5b6104e082610524565b6001600160a01b038116811461056a57600080fd5b50565b6000806040838503121561058057600080fd5b61058983610524565b9150602083013561059981610555565b809150509250929050565b60008083601f8401126105b657600080fd5b5081356001600160401b038111156105cd57600080fd5b6020830191508360208260051b85010111156105e857600080fd5b9250929050565b60008060008060006060868803121561060757600080fd5b61061086610524565b945060208601356001600160401b038082111561062c57600080fd5b61063889838a016105a4565b9096509450604088013591508082111561065157600080fd5b5061065e888289016105a4565b969995985093965092949392505050565b60006020828403121561068157600080fd5b81356104e081610555565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156106c4576106c461068c565b60405290565b604051601f8201601f191681016001600160401b03811182821017156106f2576106f261068c565b604052919050565b600082601f83011261070b57600080fd5b81356001600160401b038111156107245761072461068c565b610737601f8201601f19166020016106ca565b81815284602083860101111561074c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561077e57600080fd5b833561078981610555565b92506020840135915060408401356001600160401b038111156107ab57600080fd5b6107b7868287016106fa565b9150509250925092565b600081518084526020808501945080840160005b838110156107fa5781516001600160601b0316875295820195908201906001016107d5565b509495945050505050565b60408152600061081860408301856107c1565b828103602084015261082a81856107c1565b95945050505050565b6000806040838503121561084657600080fd5b8235915061085660208401610524565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156108cb576108b883855163ffffffff808251168352806020830151166020840152506001600160601b0360408201511660408301525050565b928401926060929092019160010161087b565b50909695505050505050565b6000602082840312156108e957600080fd5b81356001600160c01b03811681146104e057600080fd5b60008060006040848603121561091557600080fd5b61091e84610524565b925060208401356001600160401b0381111561093957600080fd5b610945868287016105a4565b9497909650939450505050565b60008083601f84011261096457600080fd5b5081356001600160401b0381111561097b57600080fd5b6020830191508360208285010111156105e857600080fd5b600080600080606085870312156109a957600080fd5b84356109b481610555565b93506020850135925060408501356001600160401b038111156109d657600080fd5b6109e287828801610952565b95989497509550505050565b803563ffffffff8116811461053557600080fd5b600080600060408486031215610a1757600080fd5b610a20846109ee565b925060208401356001600160401b03811115610a3b57600080fd5b61094586828701610952565b6020808252825182820181905260009190848201906040850190845b818110156108cb57835163ffffffff1683529284019291840191600101610a63565b600080600060608486031215610a9a57600080fd5b610aa384610524565b95602085013595506040909401359392505050565b815163ffffffff9081168252602080840151909116908201526040808301516001600160601b031690820152606081016104fc565b60008060408385031215610b0057600080fd5b610b0983610524565b946020939093013593505050565b60008060408385031215610b2a57600080fd5b8235915060208301356001600160401b03811115610b4757600080fd5b610b53858286016106fa565b9150509250929050565b80356001600160601b038116811461053557600080fd5b600082601f830112610b8557600080fd5b813560206001600160401b03821115610ba057610ba061068c565b610bae818360051b016106ca565b82815260069290921b84018101918181019086841115610bcd57600080fd5b8286015b84811015610c1c5760408189031215610bea5760008081fd5b610bf26106a2565b8135610bfd81610555565b8152610c0a828601610b5d565b81860152835291830191604001610bd1565b509695505050505050565b60008060408385031215610c3a57600080fd5b610c4383610524565b915060208301356001600160401b03811115610c5e57600080fd5b610b5385828601610b74565b600080600060608486031215610c7f57600080fd5b610c8884610524565b9250610c96602085016109ee565b9150604084013590509250925092565b600080600060608486031215610cbb57600080fd5b83359250610ccb60208501610524565b9150610cd9604085016109ee565b90509250925092565b60008060008060808587031215610cf857600080fd5b610d0185610524565b9350610d0f602086016109ee565b93969395505050506040820135916060013590565b600080600060608486031215610d3957600080fd5b610d4284610524565b9250610d5060208501610b5d565b915060408401356001600160401b03811115610d6b57600080fd5b6107b786828701610b7456fea2646970667358221220256bb32304683ba788a2835e8eb2bf41e6f7e23444c8351eac040a8ce070567064736f6c634300080c0033",
    "sourceMap": "305:10449:141:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063ac6bfb03116100f9578063d5eccc0511610097578063f2be94ae11610071578063f2be94ae14610480578063f851e19814610498578063fa28c627146104a6578063ff694a77146104b457600080fd5b8063d5eccc051461042a578063dd9846b91461045d578063df5cf7231461037257600080fd5b8063bd29b8cd116100d3578063bd29b8cd14610418578063c46778a51461042a578063c601527d14610438578063c8294c561461044657600080fd5b8063ac6bfb03146103a5578063adc804da146103c5578063b6904b781461040557600080fd5b80634c51bf91116101665780635f1f2d77116101405780635f1f2d771461032557806366acfefe146103385780636d14a9871461037257806381c075021461038157600080fd5b80634c51bf91146102e05780635401ed27146103105780635e5a67751461031e57600080fd5b8063224a3c39116101a2578063224a3c391461023557806325504777146102965780632cd95940146102bd5780633ca5a5f5146101c957600080fd5b80630491b41c146101c95780631f9b74e0146101f057806320b662981461021e575b600080fd5b6101dd6101d736600461053a565b50600090565b6040519081526020015b60405180910390f35b6102066101fe36600461056d565b600092915050565b6040516001600160601b0390911681526020016101e7565b61023361022c3660046105ef565b5050505050565b005b6101dd61024336600461066f565b6040516bffffffffffffffffffffffff19606083901b166020820152691bdc195c985d1bdc925960b21b6034820152600090603e0160408051601f19818403018152919052805160209091012092915050565b6102af6102a4366004610769565b606080935093915050565b6040516101e7929190610805565b6102d36102cb366004610833565b606092915050565b6040516101e7919061085f565b6102336102ee3660046108d7565b600080546001600160c01b0319166001600160c01b0392909216919091179055565b6102066101fe366004610833565b60006101dd565b610233610333366004610900565b505050565b61035a610346366004610993565b6000546001600160c01b0316949350505050565b6040516001600160c01b0390911681526020016101e7565b604051600081526020016101e7565b61039861038f366004610a02565b60609392505050565b6040516101e79190610a47565b6103b86103b3366004610a85565b6104c2565b6040516101e79190610ab8565b6103d86103d3366004610aed565b6104e7565b6040805182516001600160a01b031681526020928301516001600160601b031692810192909252016101e7565b6103b8610413366004610aed565b610502565b610233610426366004610b17565b5050565b6102066101d736600461053a565b610233610426366004610c27565b610206610454366004610c6a565b60009392505050565b61046b610454366004610ca6565b60405163ffffffff90911681526020016101e7565b61020661048e366004610ce2565b6000949350505050565b6103b8610413366004610833565b610206610454366004610ca6565b610233610333366004610d24565b60408051606081018252600080825260208201819052918101919091525b9392505050565b60408051808201909152600080825260208201525b92915050565b60408051606081018252600080825260208201819052918101919091526104fc565b803560ff8116811461053557600080fd5b919050565b60006020828403121561054c57600080fd5b6104e082610524565b6001600160a01b038116811461056a57600080fd5b50565b6000806040838503121561058057600080fd5b61058983610524565b9150602083013561059981610555565b809150509250929050565b60008083601f8401126105b657600080fd5b5081356001600160401b038111156105cd57600080fd5b6020830191508360208260051b85010111156105e857600080fd5b9250929050565b60008060008060006060868803121561060757600080fd5b61061086610524565b945060208601356001600160401b038082111561062c57600080fd5b61063889838a016105a4565b9096509450604088013591508082111561065157600080fd5b5061065e888289016105a4565b969995985093965092949392505050565b60006020828403121561068157600080fd5b81356104e081610555565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156106c4576106c461068c565b60405290565b604051601f8201601f191681016001600160401b03811182821017156106f2576106f261068c565b604052919050565b600082601f83011261070b57600080fd5b81356001600160401b038111156107245761072461068c565b610737601f8201601f19166020016106ca565b81815284602083860101111561074c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561077e57600080fd5b833561078981610555565b92506020840135915060408401356001600160401b038111156107ab57600080fd5b6107b7868287016106fa565b9150509250925092565b600081518084526020808501945080840160005b838110156107fa5781516001600160601b0316875295820195908201906001016107d5565b509495945050505050565b60408152600061081860408301856107c1565b828103602084015261082a81856107c1565b95945050505050565b6000806040838503121561084657600080fd5b8235915061085660208401610524565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156108cb576108b883855163ffffffff808251168352806020830151166020840152506001600160601b0360408201511660408301525050565b928401926060929092019160010161087b565b50909695505050505050565b6000602082840312156108e957600080fd5b81356001600160c01b03811681146104e057600080fd5b60008060006040848603121561091557600080fd5b61091e84610524565b925060208401356001600160401b0381111561093957600080fd5b610945868287016105a4565b9497909650939450505050565b60008083601f84011261096457600080fd5b5081356001600160401b0381111561097b57600080fd5b6020830191508360208285010111156105e857600080fd5b600080600080606085870312156109a957600080fd5b84356109b481610555565b93506020850135925060408501356001600160401b038111156109d657600080fd5b6109e287828801610952565b95989497509550505050565b803563ffffffff8116811461053557600080fd5b600080600060408486031215610a1757600080fd5b610a20846109ee565b925060208401356001600160401b03811115610a3b57600080fd5b61094586828701610952565b6020808252825182820181905260009190848201906040850190845b818110156108cb57835163ffffffff1683529284019291840191600101610a63565b600080600060608486031215610a9a57600080fd5b610aa384610524565b95602085013595506040909401359392505050565b815163ffffffff9081168252602080840151909116908201526040808301516001600160601b031690820152606081016104fc565b60008060408385031215610b0057600080fd5b610b0983610524565b946020939093013593505050565b60008060408385031215610b2a57600080fd5b8235915060208301356001600160401b03811115610b4757600080fd5b610b53858286016106fa565b9150509250929050565b80356001600160601b038116811461053557600080fd5b600082601f830112610b8557600080fd5b813560206001600160401b03821115610ba057610ba061068c565b610bae818360051b016106ca565b82815260069290921b84018101918181019086841115610bcd57600080fd5b8286015b84811015610c1c5760408189031215610bea5760008081fd5b610bf26106a2565b8135610bfd81610555565b8152610c0a828601610b5d565b81860152835291830191604001610bd1565b509695505050505050565b60008060408385031215610c3a57600080fd5b610c4383610524565b915060208301356001600160401b03811115610c5e57600080fd5b610b5385828601610b74565b600080600060608486031215610c7f57600080fd5b610c8884610524565b9250610c96602085016109ee565b9150604084013590509250925092565b600080600060608486031215610cbb57600080fd5b83359250610ccb60208501610524565b9150610cd9604085016109ee565b90509250925092565b60008060008060808587031215610cf857600080fd5b610d0185610524565b9350610d0f602086016109ee565b93969395505050506040820135916060013590565b600080600060608486031215610d3957600080fd5b610d4284610524565b9250610d5060208501610b5d565b915060408401356001600160401b03811115610d6b57600080fd5b6107b786828701610b7456fea2646970667358221220256bb32304683ba788a2835e8eb2bf41e6f7e23444c8351eac040a8ce070567064736f6c634300080c0033",
    "sourceMap": "305:10449:141:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5478:90;;;;;;:::i;:::-;-1:-1:-1;5557:7:141;;5478:90;;;;508:25:156;;;496:2;481:18;5478:90:141;;;;;;;;5010:106;;;;;;:::i;:::-;5106:6;5010:106;;;;;;;;-1:-1:-1;;;;;1164:39:156;;;1146:58;;1134:2;1119:18;5010:106:141;1002:208:156;3929:161:141;;;;;;:::i;:::-;;;;;;;;;10583:169;;;;;;:::i;:::-;10702:40;;-1:-1:-1;;15923:2:156;15919:15;;;15915:53;10702:40:141;;;15903:66:156;-1:-1:-1;;;15985:12:156;;;15978:34;10650:7:141;;16028:12:156;;10702:40:141;;;-1:-1:-1;;10702:40:141;;;;;;;;;10692:51;;10702:40;10692:51;;;;;10583:169;-1:-1:-1;;10583:169:141;1494:178;;;;;;:::i;:::-;1636:15;1653;1494:178;;;;;;;;;;;;;;;:::i;5360:112::-;;;;;;:::i;:::-;5448:20;5360:112;;;;;;;;;;;;:::i;470:131::-;;;;;;:::i;:::-;552:31;:42;;-1:-1:-1;;;;;;552:42:141;-1:-1:-1;;;;;552:42:141;;;;;;;;;;470:131;9456:98;;;;;;:::i;4169:63::-;4221:7;4169:63;;3427:93;;;;;;:::i;:::-;;;;;10354:223;;;;;;:::i;:::-;10513:7;10539:31;-1:-1:-1;;;;;10539:31:141;10354:223;;;;;;;;;;-1:-1:-1;;;;;8747:32:156;;;8729:51;;8717:2;8702:18;10354:223:141;8583:203:156;607:65:141;;;4221:7;8937:51:156;;8925:2;8910:18;607:65:141;8791:203:156;6410:134:141;;;;;;:::i;:::-;6525:15;6410:134;;;;;;;;;;;;;:::i;6990:155::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4645:136::-;;;;;;:::i;:::-;;:::i;:::-;;;;11382:13:156;;-1:-1:-1;;;;;11378:39:156;11360:58;;11478:4;11466:17;;;11460:24;-1:-1:-1;;;;;11456:57:156;11434:20;;;11427:87;;;;11333:18;4645:136:141;11148:372:156;5889:116:141;;;;;;:::i;:::-;;:::i;2443:87::-;;;;;;:::i;:::-;;;;4439:84;;;;;;:::i;2896:116::-;;;;;;:::i;9105:133::-;;;;;;:::i;:::-;9228:6;9105:133;;;;;;6129:159;;;;;;:::i;:::-;;;14477:10:156;14465:23;;;14447:42;;14435:2;14420:18;6129:159:141;14303:192:156;8286:171:141;;;;;;:::i;:::-;8447:6;8286:171;;;;;;;7396:115;;;;;;:::i;9669:147::-;;;;;;:::i;2677:118::-;;;;;;:::i;6990:155::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;7123:18:141;6990:155;;;;;:::o;4645:136::-;-1:-1:-1;;;;;;;;;;;;;;;;;4756:21:141;4645:136;;;;:::o;5889:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5983:18:141;-1:-1:-1;14:156:156;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:182::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;324:27;341:9;324:27;:::i;544:131::-;-1:-1:-1;;;;;619:31:156;;609:42;;599:70;;665:1;662;655:12;599:70;544:131;:::o;680:317::-;746:6;754;807:2;795:9;786:7;782:23;778:32;775:52;;;823:1;820;813:12;775:52;846:27;863:9;846:27;:::i;:::-;836:37;;923:2;912:9;908:18;895:32;936:31;961:5;936:31;:::i;:::-;986:5;976:15;;;680:317;;;;;:::o;1215:367::-;1278:8;1288:6;1342:3;1335:4;1327:6;1323:17;1319:27;1309:55;;1360:1;1357;1350:12;1309:55;-1:-1:-1;1383:20:156;;-1:-1:-1;;;;;1415:30:156;;1412:50;;;1458:1;1455;1448:12;1412:50;1495:4;1487:6;1483:17;1471:29;;1555:3;1548:4;1538:6;1535:1;1531:14;1523:6;1519:27;1515:38;1512:47;1509:67;;;1572:1;1569;1562:12;1509:67;1215:367;;;;;:::o;1587:842::-;1715:6;1723;1731;1739;1747;1800:2;1788:9;1779:7;1775:23;1771:32;1768:52;;;1816:1;1813;1806:12;1768:52;1839:27;1856:9;1839:27;:::i;:::-;1829:37;;1917:2;1906:9;1902:18;1889:32;-1:-1:-1;;;;;1981:2:156;1973:6;1970:14;1967:34;;;1997:1;1994;1987:12;1967:34;2036:70;2098:7;2089:6;2078:9;2074:22;2036:70;:::i;:::-;2125:8;;-1:-1:-1;2010:96:156;-1:-1:-1;2213:2:156;2198:18;;2185:32;;-1:-1:-1;2229:16:156;;;2226:36;;;2258:1;2255;2248:12;2226:36;;2297:72;2361:7;2350:8;2339:9;2335:24;2297:72;:::i;:::-;1587:842;;;;-1:-1:-1;1587:842:156;;-1:-1:-1;2388:8:156;;2271:98;1587:842;-1:-1:-1;;;1587:842:156:o;2434:247::-;2493:6;2546:2;2534:9;2525:7;2521:23;2517:32;2514:52;;;2562:1;2559;2552:12;2514:52;2601:9;2588:23;2620:31;2645:5;2620:31;:::i;2868:127::-;2929:10;2924:3;2920:20;2917:1;2910:31;2960:4;2957:1;2950:15;2984:4;2981:1;2974:15;3000:257;3072:4;3066:11;;;3104:17;;-1:-1:-1;;;;;3136:34:156;;3172:22;;;3133:62;3130:88;;;3198:18;;:::i;:::-;3234:4;3227:24;3000:257;:::o;3262:275::-;3333:2;3327:9;3398:2;3379:13;;-1:-1:-1;;3375:27:156;3363:40;;-1:-1:-1;;;;;3418:34:156;;3454:22;;;3415:62;3412:88;;;3480:18;;:::i;:::-;3516:2;3509:22;3262:275;;-1:-1:-1;3262:275:156:o;3542:530::-;3584:5;3637:3;3630:4;3622:6;3618:17;3614:27;3604:55;;3655:1;3652;3645:12;3604:55;3691:6;3678:20;-1:-1:-1;;;;;3713:2:156;3710:26;3707:52;;;3739:18;;:::i;:::-;3783:55;3826:2;3807:13;;-1:-1:-1;;3803:27:156;3832:4;3799:38;3783:55;:::i;:::-;3863:2;3854:7;3847:19;3909:3;3902:4;3897:2;3889:6;3885:15;3881:26;3878:35;3875:55;;;3926:1;3923;3916:12;3875:55;3991:2;3984:4;3976:6;3972:17;3965:4;3956:7;3952:18;3939:55;4039:1;4014:16;;;4032:4;4010:27;4003:38;;;;4018:7;3542:530;-1:-1:-1;;;3542:530:156:o;4077:523::-;4163:6;4171;4179;4232:2;4220:9;4211:7;4207:23;4203:32;4200:52;;;4248:1;4245;4238:12;4200:52;4287:9;4274:23;4306:31;4331:5;4306:31;:::i;:::-;4356:5;-1:-1:-1;4408:2:156;4393:18;;4380:32;;-1:-1:-1;4463:2:156;4448:18;;4435:32;-1:-1:-1;;;;;4479:30:156;;4476:50;;;4522:1;4519;4512:12;4476:50;4545:49;4586:7;4577:6;4566:9;4562:22;4545:49;:::i;:::-;4535:59;;;4077:523;;;;;:::o;4605:467::-;4657:3;4695:5;4689:12;4722:6;4717:3;4710:19;4748:4;4777:2;4772:3;4768:12;4761:19;;4814:2;4807:5;4803:14;4835:1;4845:202;4859:6;4856:1;4853:13;4845:202;;;4924:13;;-1:-1:-1;;;;;4920:46:156;4908:59;;4987:12;;;;5022:15;;;;4881:1;4874:9;4845:202;;;-1:-1:-1;5063:3:156;;4605:467;-1:-1:-1;;;;;4605:467:156:o;5077:459::-;5330:2;5319:9;5312:21;5293:4;5356:55;5407:2;5396:9;5392:18;5384:6;5356:55;:::i;:::-;5459:9;5451:6;5447:22;5442:2;5431:9;5427:18;5420:50;5487:43;5523:6;5515;5487:43;:::i;:::-;5479:51;5077:459;-1:-1:-1;;;;;5077:459:156:o;5541:250::-;5607:6;5615;5668:2;5656:9;5647:7;5643:23;5639:32;5636:52;;;5684:1;5681;5674:12;5636:52;5720:9;5707:23;5697:33;;5749:36;5781:2;5770:9;5766:18;5749:36;:::i;:::-;5739:46;;5541:250;;;;;:::o;6089:717::-;6320:2;6372:21;;;6442:13;;6345:18;;;6464:22;;;6291:4;;6320:2;6543:15;;;;6517:2;6502:18;;;6291:4;6586:194;6600:6;6597:1;6594:13;6586:194;;;6649:49;6694:3;6685:6;6679:13;5871:10;5920:2;5912:5;5906:12;5902:21;5897:3;5890:34;5985:2;5977:4;5970:5;5966:16;5960:23;5956:32;5949:4;5944:3;5940:14;5933:56;;-1:-1:-1;;;;;6042:4:156;6035:5;6031:16;6025:23;6021:56;6014:4;6009:3;6005:14;5998:80;5796:288;;;6649:49;6755:15;;;;6727:4;6718:14;;;;;6622:1;6615:9;6586:194;;;-1:-1:-1;6797:3:156;;6089:717;-1:-1:-1;;;;;;6089:717:156:o;6811:286::-;6870:6;6923:2;6911:9;6902:7;6898:23;6894:32;6891:52;;;6939:1;6936;6929:12;6891:52;6965:23;;-1:-1:-1;;;;;7017:31:156;;7007:42;;6997:70;;7063:1;7060;7053:12;7102:507;7195:6;7203;7211;7264:2;7252:9;7243:7;7239:23;7235:32;7232:52;;;7280:1;7277;7270:12;7232:52;7303:27;7320:9;7303:27;:::i;:::-;7293:37;;7381:2;7370:9;7366:18;7353:32;-1:-1:-1;;;;;7400:6:156;7397:30;7394:50;;;7440:1;7437;7430:12;7394:50;7479:70;7541:7;7532:6;7521:9;7517:22;7479:70;:::i;:::-;7102:507;;7568:8;;-1:-1:-1;7453:96:156;;-1:-1:-1;;;;7102:507:156:o;7614:347::-;7665:8;7675:6;7729:3;7722:4;7714:6;7710:17;7706:27;7696:55;;7747:1;7744;7737:12;7696:55;-1:-1:-1;7770:20:156;;-1:-1:-1;;;;;7802:30:156;;7799:50;;;7845:1;7842;7835:12;7799:50;7882:4;7874:6;7870:17;7858:29;;7934:3;7927:4;7918:6;7910;7906:19;7902:30;7899:39;7896:59;;;7951:1;7948;7941:12;7966:612;8054:6;8062;8070;8078;8131:2;8119:9;8110:7;8106:23;8102:32;8099:52;;;8147:1;8144;8137:12;8099:52;8186:9;8173:23;8205:31;8230:5;8205:31;:::i;:::-;8255:5;-1:-1:-1;8307:2:156;8292:18;;8279:32;;-1:-1:-1;8362:2:156;8347:18;;8334:32;-1:-1:-1;;;;;8378:30:156;;8375:50;;;8421:1;8418;8411:12;8375:50;8460:58;8510:7;8501:6;8490:9;8486:22;8460:58;:::i;:::-;7966:612;;;;-1:-1:-1;8537:8:156;-1:-1:-1;;;;7966:612:156:o;8999:163::-;9066:20;;9126:10;9115:22;;9105:33;;9095:61;;9152:1;9149;9142:12;9167:481;9245:6;9253;9261;9314:2;9302:9;9293:7;9289:23;9285:32;9282:52;;;9330:1;9327;9320:12;9282:52;9353:28;9371:9;9353:28;:::i;:::-;9343:38;;9432:2;9421:9;9417:18;9404:32;-1:-1:-1;;;;;9451:6:156;9448:30;9445:50;;;9491:1;9488;9481:12;9445:50;9530:58;9580:7;9571:6;9560:9;9556:22;9530:58;:::i;9653:647::-;9822:2;9874:21;;;9944:13;;9847:18;;;9966:22;;;9793:4;;9822:2;10045:15;;;;10019:2;10004:18;;;9793:4;10088:186;10102:6;10099:1;10096:13;10088:186;;;10167:13;;10182:10;10163:30;10151:43;;10249:15;;;;10214:12;;;;10124:1;10117:9;10088:186;;10305:318;10380:6;10388;10396;10449:2;10437:9;10428:7;10424:23;10420:32;10417:52;;;10465:1;10462;10455:12;10417:52;10488:27;10505:9;10488:27;:::i;:::-;10478:37;10562:2;10547:18;;10534:32;;-1:-1:-1;10613:2:156;10598:18;;;10585:32;;10305:318;-1:-1:-1;;;10305:318:156:o;10628:260::-;5906:12;;5871:10;5902:21;;;5890:34;;5977:4;5966:16;;;5960:23;5956:32;;;5940:14;;;5933:56;6042:4;6031:16;;;6025:23;-1:-1:-1;;;;;6021:56:156;6005:14;;;5998:80;10822:2;10807:18;;10834:48;5796:288;10893:250;10959:6;10967;11020:2;11008:9;10999:7;10995:23;10991:32;10988:52;;;11036:1;11033;11026:12;10988:52;11059:27;11076:9;11059:27;:::i;:::-;11049:37;11133:2;11118:18;;;;11105:32;;-1:-1:-1;;;10893:250:156:o;11525:388::-;11602:6;11610;11663:2;11651:9;11642:7;11638:23;11634:32;11631:52;;;11679:1;11676;11669:12;11631:52;11715:9;11702:23;11692:33;;11776:2;11765:9;11761:18;11748:32;-1:-1:-1;;;;;11795:6:156;11792:30;11789:50;;;11835:1;11832;11825:12;11789:50;11858:49;11899:7;11890:6;11879:9;11875:22;11858:49;:::i;:::-;11848:59;;;11525:388;;;;;:::o;11918:179::-;11985:20;;-1:-1:-1;;;;;12034:38:156;;12024:49;;12014:77;;12087:1;12084;12077:12;12102:1072;12170:5;12223:3;12216:4;12208:6;12204:17;12200:27;12190:55;;12241:1;12238;12231:12;12190:55;12277:6;12264:20;12303:4;-1:-1:-1;;;;;12322:2:156;12319:26;12316:52;;;12348:18;;:::i;:::-;12388:36;12420:2;12415;12412:1;12408:10;12404:19;12388:36;:::i;:::-;12458:15;;;12544:1;12540:10;;;;12528:23;;12524:32;;;12489:12;;;;12568:15;;;12565:35;;;12596:1;12593;12586:12;12565:35;12632:2;12624:6;12620:15;12644:501;12660:6;12655:3;12652:15;12644:501;;;12738:4;12732:3;12727;12723:13;12719:24;12716:114;;;12784:1;12813:2;12809;12802:14;12716:114;12856:22;;:::i;:::-;12919:3;12906:17;12936:33;12961:7;12936:33;:::i;:::-;12982:22;;13040:31;13058:12;;;13040:31;:::i;:::-;13024:14;;;13017:55;13085:18;;13123:12;;;;12686:4;12677:14;12644:501;;;-1:-1:-1;13163:5:156;12102:1072;-1:-1:-1;;;;;;12102:1072:156:o;13179:465::-;13303:6;13311;13364:2;13352:9;13343:7;13339:23;13335:32;13332:52;;;13380:1;13377;13370:12;13332:52;13403:27;13420:9;13403:27;:::i;:::-;13393:37;;13481:2;13470:9;13466:18;13453:32;-1:-1:-1;;;;;13500:6:156;13497:30;13494:50;;;13540:1;13537;13530:12;13494:50;13563:75;13630:7;13621:6;13610:9;13606:22;13563:75;:::i;13649:322::-;13723:6;13731;13739;13792:2;13780:9;13771:7;13767:23;13763:32;13760:52;;;13808:1;13805;13798:12;13760:52;13831:27;13848:9;13831:27;:::i;:::-;13821:37;;13877;13910:2;13899:9;13895:18;13877:37;:::i;:::-;13867:47;;13961:2;13950:9;13946:18;13933:32;13923:42;;13649:322;;;;;:::o;13976:::-;14050:6;14058;14066;14119:2;14107:9;14098:7;14094:23;14090:32;14087:52;;;14135:1;14132;14125:12;14087:52;14171:9;14158:23;14148:33;;14200:36;14232:2;14221:9;14217:18;14200:36;:::i;:::-;14190:46;;14255:37;14288:2;14277:9;14273:18;14255:37;:::i;:::-;14245:47;;13976:322;;;;;:::o;14735:391::-;14818:6;14826;14834;14842;14895:3;14883:9;14874:7;14870:23;14866:33;14863:53;;;14912:1;14909;14902:12;14863:53;14935:27;14952:9;14935:27;:::i;:::-;14925:37;;14981;15014:2;15003:9;14999:18;14981:37;:::i;:::-;14735:391;;14971:47;;-1:-1:-1;;;;15065:2:156;15050:18;;15037:32;;15116:2;15101:18;15088:32;;14735:391::o;15131:537::-;15263:6;15271;15279;15332:2;15320:9;15311:7;15307:23;15303:32;15300:52;;;15348:1;15345;15338:12;15300:52;15371:27;15388:9;15371:27;:::i;:::-;15361:37;;15417;15450:2;15439:9;15435:18;15417:37;:::i;:::-;15407:47;;15505:2;15494:9;15490:18;15477:32;-1:-1:-1;;;;;15524:6:156;15521:30;15518:50;;;15564:1;15561;15554:12;15518:50;15587:75;15654:7;15645:6;15634:9;15630:22;15587:75;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WEIGHTING_DIVISOR()": "5e5a6775",
    "addStrategies(uint8,(address,uint96)[])": "c601527d",
    "delegation()": "df5cf723",
    "deregisterOperator(bytes32,bytes)": "bd29b8cd",
    "getCurrentStake(bytes32,uint8)": "5401ed27",
    "getCurrentTotalStake(uint8)": "d5eccc05",
    "getLatestStakeUpdate(bytes32,uint8)": "f851e198",
    "getMockOperatorId(address)": "224a3c39",
    "getStakeAtBlockNumber(bytes32,uint8,uint32)": "fa28c627",
    "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": "f2be94ae",
    "getStakeHistory(bytes32,uint8)": "2cd95940",
    "getStakeUpdateAtIndex(uint8,bytes32,uint256)": "ac6bfb03",
    "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": "dd9846b9",
    "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": "c8294c56",
    "getTotalStakeHistoryLength(uint8)": "0491b41c",
    "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": "81c07502",
    "getTotalStakeUpdateAtIndex(uint8,uint256)": "b6904b78",
    "initializeQuorum(uint8,uint96,(address,uint96)[])": "ff694a77",
    "minimumStakeForQuorum(uint8)": "c46778a5",
    "modifyStrategyParams(uint8,uint256[],uint96[])": "20b66298",
    "registerOperator(address,bytes32,bytes)": "25504777",
    "registryCoordinator()": "6d14a987",
    "removeStrategies(uint8,uint256[])": "5f1f2d77",
    "set_updateOperatorStakeReturnBitmap(uint192)": "4c51bf91",
    "strategyParamsByIndex(uint8,uint256)": "adc804da",
    "strategyParamsLength(uint8)": "3ca5a5f5",
    "updateOperatorStake(address,bytes32,bytes)": "66acfefe",
    "weightOfOperatorForQuorum(uint8,address)": "1f9b74e0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getMockOperatorId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"newValue\",\"type\":\"uint192\"}],\"name\":\"set_updateOperatorStakeReturnBitmap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateOperatorStake\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deregisterOperator(bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Function returns weight of **0** in the event that the operator has no stake history\"},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"are the new multipliers for the strategies\",\"quorumNumber\":\"is the quorum number to change the strategy for\",\"strategyIndices\":\"are the indices of the strategies to change\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum, and the total stake for each quorum\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove\",\"params\":{\"quorumNumber\":\".\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`\"}},\"title\":\"Interface for a `Registry` that keeps track of stakes of operators for up to 256 quorums.\",\"version\":1},\"userdoc\":{\"events\":{\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"emitted when the minimum stake for a quorum is updated\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"QuorumCreated(uint8)\":{\"notice\":\"emitted when a new quorum is created\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds new strategies and the associated multipliers to the @param quorumNumber.\"},\"delegation()\":{\"notice\":\"Returns the EigenLayer delegation manager contract.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for a certain quorum\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry  corresponds to the operator's stake at `blockNumber`. Reverts otherwise.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the  `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`.  Reverts otherwise.\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`.\"},\"initializeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"This function is used for modifying the weights of strategies that are already in the mapping strategiesConsideredAndMultipliers for a specific\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"This function is used for removing strategies and their associated weights from the\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"notice\":\"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/StakeRegistryMock.sol\":\"StakeRegistryMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e\",\"dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e\"]},\"src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637\",\"dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db\",\"dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]},\"src/libraries/BN254.sol\":{\"keccak256\":\"0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49\",\"dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91\"]},\"test/mocks/StakeRegistryMock.sol\":{\"keccak256\":\"0x51511a80e29158abbaa5c6d589affb1605dd594b47bcccc0934f3fd668aedef0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7529afb86af9d990d662ddc45795a435de7f6110e61258cb585a57a7d0d71b50\",\"dweb:/ipfs/QmaQmwDJWdMAwrEt7g5AjKwEqpwbwpZyqevpu4BMDQ9s3i\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinimumStakeForQuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorStakeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "QuorumCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToQuorum",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "multiplier",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyMultiplierUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromQuorum",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "WEIGHTING_DIVISOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategies"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTotalStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestStakeUpdate",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getMockOperatorId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAtBlockNumberAndIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeHistory",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeUpdateIndexAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeAtBlockNumberFromIndex",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeIndicesAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeUpdateAtIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StakeUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "minimumStake",
              "type": "uint96"
            },
            {
              "internalType": "struct IStakeRegistry.StrategyParams[]",
              "name": "strategyParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumStakeForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "strategyIndices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "newMultipliers",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerOperator",
          "outputs": [
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            },
            {
              "internalType": "uint96[]",
              "name": "",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCoordinator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "indicesToRemove",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint192",
              "name": "newValue",
              "type": "uint192"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set_updateOperatorStakeReturnBitmap"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsByIndex",
          "outputs": [
            {
              "internalType": "struct IStakeRegistry.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParamsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorStake",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightOfOperatorForQuorum",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deregisterOperator(bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for",
            "params": {
              "operatorId": "The id of the operator to deregister.",
              "quorumNumbers": "The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."
            }
          },
          "getCurrentStake(bytes32,uint8)": {
            "details": "Function returns weight of **0** in the event that the operator has no stake history"
          },
          "getCurrentTotalStake(uint8)": {
            "details": "Will revert if `_totalStakeHistory[quorumNumber]` is empty."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "details": "Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeHistory(bytes32,uint8)": {
            "params": {
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "index": "Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.",
              "operatorId": "The id of the operator of interest.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.used the BLSSignatureChecker to get past stakes of signing operators",
            "params": {
              "blockNumber": "Block number to make sure the stake is from.",
              "index": "Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "params": {
              "index": "Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.",
              "quorumNumber": "The quorum number to get the stake for."
            }
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "params": {
              "newMultipliers": "are the new multipliers for the strategies",
              "quorumNumber": "is the quorum number to change the strategy for",
              "strategyIndices": "are the indices of the strategies to change"
            }
          },
          "registerOperator(address,bytes32,bytes)": {
            "details": "access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered",
            "params": {
              "operator": "The address of the operator to register.",
              "operatorId": "The id of the operator to register.",
              "quorumNumbers": "The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."
            },
            "returns": {
              "_0": "The operator's current stake for each quorum, and the total stake for each quorum"
            }
          },
          "removeStrategies(uint8,uint256[])": {
            "details": "higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove",
            "params": {
              "quorumNumber": "."
            }
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "details": "reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "WEIGHTING_DIVISOR()": {
            "notice": "Constant used as a divisor in calculating weights."
          },
          "addStrategies(uint8,(address,uint96)[])": {
            "notice": "Adds new strategies and the associated multipliers to the @param quorumNumber."
          },
          "delegation()": {
            "notice": "Returns the EigenLayer delegation manager contract."
          },
          "deregisterOperator(bytes32,bytes)": {
            "notice": "Deregisters the operator with `operatorId` for the specified `quorumNumbers`."
          },
          "getCurrentStake(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`"
          },
          "getCurrentTotalStake(uint8)": {
            "notice": "Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`."
          },
          "getLatestStakeUpdate(bytes32,uint8)": {
            "notice": "Returns the most recent stake weight for the `operatorId` for a certain quorum"
          },
          "getStakeAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)": {
            "notice": "Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry  corresponds to the operator's stake at `blockNumber`. Reverts otherwise."
          },
          "getStakeHistory(bytes32,uint8)": {
            "notice": "Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeUpdateAtIndex(uint8,bytes32,uint256)": {
            "notice": "Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array."
          },
          "getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)": {
            "notice": "Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"
          },
          "getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)": {
            "notice": "Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the  `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`.  Reverts otherwise."
          },
          "getTotalStakeIndicesAtBlockNumber(uint32,bytes)": {
            "notice": "Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"
          },
          "getTotalStakeUpdateAtIndex(uint8,uint256)": {
            "notice": "Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`."
          },
          "initializeQuorum(uint8,uint96,(address,uint96)[])": {
            "notice": "Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake"
          },
          "minimumStakeForQuorum(uint8)": {
            "notice": "In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`"
          },
          "modifyStrategyParams(uint8,uint256[],uint96[])": {
            "notice": "This function is used for modifying the weights of strategies that are already in the mapping strategiesConsideredAndMultipliers for a specific"
          },
          "registerOperator(address,bytes32,bytes)": {
            "notice": "Registers the `operator` with `operatorId` for the specified `quorumNumbers`."
          },
          "removeStrategies(uint8,uint256[])": {
            "notice": "This function is used for removing strategies and their associated weights from the"
          },
          "strategyParamsByIndex(uint8,uint256)": {
            "notice": "Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"
          },
          "strategyParamsLength(uint8)": {
            "notice": "Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."
          },
          "updateOperatorStake(address,bytes32,bytes)": {
            "notice": "Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the"
          },
          "weightOfOperatorForQuorum(uint8,address)": {
            "notice": "This function computes the total weight of the @param operator in the quorum @param quorumNumber."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/StakeRegistryMock.sol": "StakeRegistryMock"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBLSApkRegistry.sol": {
        "keccak256": "0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32",
        "urls": [
          "bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e",
          "dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IIndexRegistry.sol": {
        "keccak256": "0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf",
        "urls": [
          "bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637",
          "dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistryCoordinator.sol": {
        "keccak256": "0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9",
        "urls": [
          "bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db",
          "dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/BN254.sol": {
        "keccak256": "0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417",
        "urls": [
          "bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49",
          "dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91"
        ],
        "license": "MIT"
      },
      "test/mocks/StakeRegistryMock.sol": {
        "keccak256": "0x51511a80e29158abbaa5c6d589affb1605dd594b47bcccc0934f3fd668aedef0",
        "urls": [
          "bzz-raw://7529afb86af9d990d662ddc45795a435de7f6110e61258cb585a57a7d0d71b50",
          "dweb:/ipfs/QmaQmwDJWdMAwrEt7g5AjKwEqpwbwpZyqevpu4BMDQ9s3i"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/StakeRegistryMock.sol",
    "id": 87808,
    "exportedSymbols": {
      "BN254": [
        72029
      ],
      "IBLSApkRegistry": [
        70280
      ],
      "IDelegationManager": [
        7102
      ],
      "IIndexRegistry": [
        70489
      ],
      "IRegistry": [
        70498
      ],
      "IRegistryCoordinator": [
        70745
      ],
      "IStakeRegistry": [
        71147
      ],
      "IStrategy": [
        8135
      ],
      "StakeRegistryMock": [
        87807
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:10718:141",
    "nodes": [
      {
        "id": 87475,
        "nodeType": "PragmaDirective",
        "src": "37:24:141",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 87476,
        "nodeType": "ImportDirective",
        "src": "63:49:141",
        "nodes": [],
        "absolutePath": "src/interfaces/IStakeRegistry.sol",
        "file": "../../src/interfaces/IStakeRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87808,
        "sourceUnit": 71148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87477,
        "nodeType": "ImportDirective",
        "src": "113:55:141",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistryCoordinator.sol",
        "file": "../../src/interfaces/IRegistryCoordinator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87808,
        "sourceUnit": 70746,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87807,
        "nodeType": "ContractDefinition",
        "src": "305:10449:141",
        "nodes": [
          {
            "id": 87482,
            "nodeType": "VariableDeclaration",
            "src": "424:39:141",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "updateOperatorStakeReturnBitmap",
            "nameLocation": "432:31:141",
            "scope": 87807,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint192",
              "typeString": "uint192"
            },
            "typeName": {
              "id": 87481,
              "name": "uint192",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:141",
              "typeDescriptions": {
                "typeIdentifier": "t_uint192",
                "typeString": "uint192"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87492,
            "nodeType": "FunctionDefinition",
            "src": "470:131:141",
            "nodes": [],
            "body": {
              "id": 87491,
              "nodeType": "Block",
              "src": "542:59:141",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87487,
                      "name": "updateOperatorStakeReturnBitmap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87482,
                      "src": "552:31:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87488,
                      "name": "newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87484,
                      "src": "586:8:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "src": "552:42:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 87490,
                  "nodeType": "ExpressionStatement",
                  "src": "552:42:141"
                }
              ]
            },
            "functionSelector": "4c51bf91",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set_updateOperatorStakeReturnBitmap",
            "nameLocation": "479:35:141",
            "parameters": {
              "id": 87485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87484,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "523:8:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87492,
                  "src": "515:16:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  },
                  "typeName": {
                    "id": 87483,
                    "name": "uint192",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:18:141"
            },
            "returnParameters": {
              "id": 87486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87498,
            "nodeType": "FunctionDefinition",
            "src": "607:65:141",
            "nodes": [],
            "body": {
              "id": 87497,
              "nodeType": "Block",
              "src": "670:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70497
            ],
            "functionSelector": "6d14a987",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registryCoordinator",
            "nameLocation": "616:19:141",
            "parameters": {
              "id": 87493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:2:141"
            },
            "returnParameters": {
              "id": 87496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87498,
                  "src": "661:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:141",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "660:9:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87515,
            "nodeType": "FunctionDefinition",
            "src": "1494:178:141",
            "nodes": [],
            "body": {
              "id": 87514,
              "nodeType": "Block",
              "src": "1670:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70900
            ],
            "documentation": {
              "id": 87499,
              "nodeType": "StructuredDocumentation",
              "src": "678:811:141",
              "text": " @notice Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\n @param operator The address of the operator to register.\n @param operatorId The id of the operator to register.\n @param quorumNumbers The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\n @return The operator's current stake for each quorum, and the total stake for each quorum\n @dev access restricted to the RegistryCoordinator\n @dev Preconditions (these are assumed, not validated in this contract):\n         1) `quorumNumbers` has no duplicates\n         2) `quorumNumbers.length` != 0\n         3) `quorumNumbers` is ordered in ascending order\n         4) the operator is not already registered"
            },
            "functionSelector": "25504777",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerOperator",
            "nameLocation": "1503:16:141",
            "parameters": {
              "id": 87506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87501,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1537:8:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "1529:16:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:141",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87503,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "1564:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "1556:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87502,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87505,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "1598:13:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "1585:26:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87504,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:98:141"
            },
            "returnParameters": {
              "id": 87513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "1636:15:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87507,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "1636:6:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 87508,
                    "nodeType": "ArrayTypeName",
                    "src": "1636:8:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "1653:15:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87510,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "1653:6:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 87511,
                    "nodeType": "ArrayTypeName",
                    "src": "1653:8:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1635:34:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87524,
            "nodeType": "FunctionDefinition",
            "src": "2443:87:141",
            "nodes": [],
            "body": {
              "id": 87523,
              "nodeType": "Block",
              "src": "2528:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70908
            ],
            "documentation": {
              "id": 87516,
              "nodeType": "StructuredDocumentation",
              "src": "1678:760:141",
              "text": " @notice Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\n @param operatorId The id of the operator to deregister.\n @param quorumNumbers The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\n @dev access restricted to the RegistryCoordinator\n @dev Preconditions (these are assumed, not validated in this contract):\n         1) `quorumNumbers` has no duplicates\n         2) `quorumNumbers.length` != 0\n         3) `quorumNumbers` is ordered in ascending order\n         4) the operator is not already deregistered\n         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for"
            },
            "functionSelector": "bd29b8cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deregisterOperator",
            "nameLocation": "2452:18:141",
            "parameters": {
              "id": 87521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87518,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "2479:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87524,
                  "src": "2471:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87520,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "2504:13:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87524,
                  "src": "2491:26:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87519,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:48:141"
            },
            "returnParameters": {
              "id": 87522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87537,
            "nodeType": "FunctionDefinition",
            "src": "2677:118:141",
            "nodes": [],
            "body": {
              "id": 87536,
              "nodeType": "Block",
              "src": "2793:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70920
            ],
            "documentation": {
              "id": 87525,
              "nodeType": "StructuredDocumentation",
              "src": "2536:136:141",
              "text": " @notice Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake"
            },
            "functionSelector": "ff694a77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeQuorum",
            "nameLocation": "2686:16:141",
            "parameters": {
              "id": 87534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87527,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "2709:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87537,
                  "src": "2703:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87526,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87529,
                  "mutability": "mutable",
                  "name": "minimumStake",
                  "nameLocation": "2730:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87537,
                  "src": "2723:19:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87528,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87533,
                  "mutability": "mutable",
                  "name": "strategyParams",
                  "nameLocation": "2768:14:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87537,
                  "src": "2744:38:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87531,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87530,
                        "name": "StrategyParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70837,
                        "src": "2744:14:141"
                      },
                      "referencedDeclaration": 70837,
                      "src": "2744:14:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                        "typeString": "struct IStakeRegistry.StrategyParams"
                      }
                    },
                    "id": 87532,
                    "nodeType": "ArrayTypeName",
                    "src": "2744:16:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2702:81:141"
            },
            "returnParameters": {
              "id": 87535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87548,
            "nodeType": "FunctionDefinition",
            "src": "2896:116:141",
            "nodes": [],
            "body": {
              "id": 87547,
              "nodeType": "Block",
              "src": "3010:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70930
            ],
            "documentation": {
              "id": 87538,
              "nodeType": "StructuredDocumentation",
              "src": "2801:90:141",
              "text": "@notice Adds new strategies and the associated multipliers to the @param quorumNumber."
            },
            "functionSelector": "c601527d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addStrategies",
            "nameLocation": "2905:13:141",
            "parameters": {
              "id": 87545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87540,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "2934:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87548,
                  "src": "2928:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87539,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87544,
                  "mutability": "mutable",
                  "name": "strategyParams",
                  "nameLocation": "2980:14:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87548,
                  "src": "2956:38:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87542,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87541,
                        "name": "StrategyParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70837,
                        "src": "2956:14:141"
                      },
                      "referencedDeclaration": 70837,
                      "src": "2956:14:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                        "typeString": "struct IStakeRegistry.StrategyParams"
                      }
                    },
                    "id": 87543,
                    "nodeType": "ArrayTypeName",
                    "src": "2956:16:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyParams_$70837_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2918:82:141"
            },
            "returnParameters": {
              "id": 87546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3010:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87558,
            "nodeType": "FunctionDefinition",
            "src": "3427:93:141",
            "nodes": [],
            "body": {
              "id": 87557,
              "nodeType": "Block",
              "src": "3518:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70939
            ],
            "documentation": {
              "id": 87549,
              "nodeType": "StructuredDocumentation",
              "src": "3018:404:141",
              "text": " @notice This function is used for removing strategies and their associated weights from the\n mapping strategiesConsideredAndMultipliers for a specific @param quorumNumber.\n @dev higher indices should be *first* in the list of @param indicesToRemove, since otherwise\n the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove"
            },
            "functionSelector": "5f1f2d77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeStrategies",
            "nameLocation": "3436:16:141",
            "parameters": {
              "id": 87555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87551,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "3459:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87558,
                  "src": "3453:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87550,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87554,
                  "mutability": "mutable",
                  "name": "indicesToRemove",
                  "nameLocation": "3492:15:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87558,
                  "src": "3473:34:141",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87552,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3473:7:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87553,
                    "nodeType": "ArrayTypeName",
                    "src": "3473:9:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3452:56:141"
            },
            "returnParameters": {
              "id": 87556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87571,
            "nodeType": "FunctionDefinition",
            "src": "3929:161:141",
            "nodes": [],
            "body": {
              "id": 87570,
              "nodeType": "Block",
              "src": "4088:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70951
            ],
            "documentation": {
              "id": 87559,
              "nodeType": "StructuredDocumentation",
              "src": "3526:398:141",
              "text": " @notice This function is used for modifying the weights of strategies that are already in the\n mapping strategiesConsideredAndMultipliers for a specific\n @param quorumNumber is the quorum number to change the strategy for\n @param strategyIndices are the indices of the strategies to change\n @param newMultipliers are the new multipliers for the strategies"
            },
            "functionSelector": "20b66298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modifyStrategyParams",
            "nameLocation": "3938:20:141",
            "parameters": {
              "id": 87568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87561,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "3974:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87571,
                  "src": "3968:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87560,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87564,
                  "mutability": "mutable",
                  "name": "strategyIndices",
                  "nameLocation": "4015:15:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87571,
                  "src": "3996:34:141",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87562,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3996:7:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87563,
                    "nodeType": "ArrayTypeName",
                    "src": "3996:9:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87567,
                  "mutability": "mutable",
                  "name": "newMultipliers",
                  "nameLocation": "4058:14:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87571,
                  "src": "4040:32:141",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_calldata_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87565,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "4040:6:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 87566,
                    "nodeType": "ArrayTypeName",
                    "src": "4040:8:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:120:141"
            },
            "returnParameters": {
              "id": 87569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4088:0:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87578,
            "nodeType": "FunctionDefinition",
            "src": "4096:67:141",
            "nodes": [],
            "body": {
              "id": 87577,
              "nodeType": "Block",
              "src": "4161:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70964
            ],
            "functionSelector": "df5cf723",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegation",
            "nameLocation": "4105:10:141",
            "parameters": {
              "id": 87572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:2:141"
            },
            "returnParameters": {
              "id": 87576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87578,
                  "src": "4141:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 87574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87573,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7102,
                      "src": "4141:18:141"
                    },
                    "referencedDeclaration": 7102,
                    "src": "4141:18:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$7102",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4140:20:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87584,
            "nodeType": "FunctionDefinition",
            "src": "4169:63:141",
            "nodes": [],
            "body": {
              "id": 87583,
              "nodeType": "Block",
              "src": "4230:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70957
            ],
            "functionSelector": "5e5a6775",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WEIGHTING_DIVISOR",
            "nameLocation": "4178:17:141",
            "parameters": {
              "id": 87579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4195:2:141"
            },
            "returnParameters": {
              "id": 87582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87584,
                  "src": "4221:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4220:9:141"
            },
            "scope": 87807,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87592,
            "nodeType": "FunctionDefinition",
            "src": "4238:84:141",
            "nodes": [],
            "body": {
              "id": 87591,
              "nodeType": "Block",
              "src": "4320:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70980
            ],
            "functionSelector": "3ca5a5f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParamsLength",
            "nameLocation": "4247:20:141",
            "parameters": {
              "id": 87587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87586,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "4274:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87592,
                  "src": "4268:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87585,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:20:141"
            },
            "returnParameters": {
              "id": 87590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87592,
                  "src": "4311:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:9:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87601,
            "nodeType": "FunctionDefinition",
            "src": "4439:84:141",
            "nodes": [],
            "body": {
              "id": 87600,
              "nodeType": "Block",
              "src": "4521:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70972
            ],
            "documentation": {
              "id": 87593,
              "nodeType": "StructuredDocumentation",
              "src": "4328:106:141",
              "text": "@notice In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]`"
            },
            "functionSelector": "c46778a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimumStakeForQuorum",
            "nameLocation": "4448:21:141",
            "parameters": {
              "id": 87596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87595,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "4476:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87601,
                  "src": "4470:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87594,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4469:20:141"
            },
            "returnParameters": {
              "id": 87599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87601,
                  "src": "4513:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87597,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87613,
            "nodeType": "FunctionDefinition",
            "src": "4645:136:141",
            "nodes": [],
            "body": {
              "id": 87612,
              "nodeType": "Block",
              "src": "4779:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              70991
            ],
            "documentation": {
              "id": 87602,
              "nodeType": "StructuredDocumentation",
              "src": "4529:111:141",
              "text": "@notice Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"
            },
            "functionSelector": "adc804da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParamsByIndex",
            "nameLocation": "4654:21:141",
            "parameters": {
              "id": 87607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87604,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "4691:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87613,
                  "src": "4685:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87603,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87606,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4721:5:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87613,
                  "src": "4713:13:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4713:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4675:57:141"
            },
            "returnParameters": {
              "id": 87611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87613,
                  "src": "4756:21:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$70837_memory_ptr",
                    "typeString": "struct IStakeRegistry.StrategyParams"
                  },
                  "typeName": {
                    "id": 87609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87608,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70837,
                      "src": "4756:14:141"
                    },
                    "referencedDeclaration": 70837,
                    "src": "4756:14:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$70837_storage_ptr",
                      "typeString": "struct IStakeRegistry.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4755:23:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87624,
            "nodeType": "FunctionDefinition",
            "src": "5010:106:141",
            "nodes": [],
            "body": {
              "id": 87623,
              "nodeType": "Block",
              "src": "5114:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71001
            ],
            "documentation": {
              "id": 87614,
              "nodeType": "StructuredDocumentation",
              "src": "4787:218:141",
              "text": " @notice This function computes the total weight of the @param operator in the quorum @param quorumNumber.\n @dev reverts in the case that `quorumNumber` is greater than or equal to `quorumCount`"
            },
            "functionSelector": "1f9b74e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "weightOfOperatorForQuorum",
            "nameLocation": "5019:25:141",
            "parameters": {
              "id": 87619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87616,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5051:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87624,
                  "src": "5045:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87615,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87618,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5073:8:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87624,
                  "src": "5065:16:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:141",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5044:38:141"
            },
            "returnParameters": {
              "id": 87622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87624,
                  "src": "5106:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87620,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87637,
            "nodeType": "FunctionDefinition",
            "src": "5360:112:141",
            "nodes": [],
            "body": {
              "id": 87636,
              "nodeType": "Block",
              "src": "5470:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71013
            ],
            "documentation": {
              "id": 87625,
              "nodeType": "StructuredDocumentation",
              "src": "5122:233:141",
              "text": " @notice Returns the entire `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\n @param operatorId The id of the operator of interest.\n @param quorumNumber The quorum number to get the stake for."
            },
            "functionSelector": "2cd95940",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeHistory",
            "nameLocation": "5369:15:141",
            "parameters": {
              "id": 87630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87627,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "5393:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87637,
                  "src": "5385:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87626,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5385:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87629,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5411:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87637,
                  "src": "5405:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87628,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5384:40:141"
            },
            "returnParameters": {
              "id": 87635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87637,
                  "src": "5448:20:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StakeUpdate_$70831_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87632,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87631,
                        "name": "StakeUpdate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70831,
                        "src": "5448:11:141"
                      },
                      "referencedDeclaration": 70831,
                      "src": "5448:11:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                        "typeString": "struct IStakeRegistry.StakeUpdate"
                      }
                    },
                    "id": 87633,
                    "nodeType": "ArrayTypeName",
                    "src": "5448:13:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StakeUpdate_$70831_storage_$dyn_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5447:22:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87645,
            "nodeType": "FunctionDefinition",
            "src": "5478:90:141",
            "nodes": [],
            "body": {
              "id": 87644,
              "nodeType": "Block",
              "src": "5566:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71020
            ],
            "functionSelector": "0491b41c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeHistoryLength",
            "nameLocation": "5487:26:141",
            "parameters": {
              "id": 87640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87639,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5520:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87645,
                  "src": "5514:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87638,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5513:20:141"
            },
            "returnParameters": {
              "id": 87643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87645,
                  "src": "5557:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:9:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87657,
            "nodeType": "FunctionDefinition",
            "src": "5889:116:141",
            "nodes": [],
            "body": {
              "id": 87656,
              "nodeType": "Block",
              "src": "6003:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71031
            ],
            "documentation": {
              "id": 87646,
              "nodeType": "StructuredDocumentation",
              "src": "5574:310:141",
              "text": " @notice Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory` for quorum `quorumNumber`.\n @param quorumNumber The quorum number to get the stake for.\n @param index Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`."
            },
            "functionSelector": "b6904b78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeUpdateAtIndex",
            "nameLocation": "5898:26:141",
            "parameters": {
              "id": 87651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87648,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "5931:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87657,
                  "src": "5925:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87647,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5925:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87650,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5953:5:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87657,
                  "src": "5945:13:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5945:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5924:35:141"
            },
            "returnParameters": {
              "id": 87655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87657,
                  "src": "5983:18:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 87653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87652,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "5983:11:141"
                    },
                    "referencedDeclaration": 70831,
                    "src": "5983:11:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5982:20:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87670,
            "nodeType": "FunctionDefinition",
            "src": "6129:159:141",
            "nodes": [],
            "body": {
              "id": 87669,
              "nodeType": "Block",
              "src": "6286:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71043
            ],
            "documentation": {
              "id": 87658,
              "nodeType": "StructuredDocumentation",
              "src": "6011:113:141",
              "text": "@notice Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"
            },
            "functionSelector": "dd9846b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeUpdateIndexAtBlockNumber",
            "nameLocation": "6138:32:141",
            "parameters": {
              "id": 87665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87660,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "6179:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87670,
                  "src": "6171:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87659,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6171:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87662,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "6197:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87670,
                  "src": "6191:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87661,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87664,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "6218:11:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87670,
                  "src": "6211:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87663,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6211:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6170:60:141"
            },
            "returnParameters": {
              "id": 87668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87670,
                  "src": "6278:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87666,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6277:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87682,
            "nodeType": "FunctionDefinition",
            "src": "6410:134:141",
            "nodes": [],
            "body": {
              "id": 87681,
              "nodeType": "Block",
              "src": "6542:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71054
            ],
            "documentation": {
              "id": 87671,
              "nodeType": "StructuredDocumentation",
              "src": "6294:111:141",
              "text": "@notice Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"
            },
            "functionSelector": "81c07502",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeIndicesAtBlockNumber",
            "nameLocation": "6419:33:141",
            "parameters": {
              "id": 87676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87673,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "6460:11:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87682,
                  "src": "6453:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87672,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6453:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87675,
                  "mutability": "mutable",
                  "name": "quorumNumbers",
                  "nameLocation": "6488:13:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87682,
                  "src": "6473:28:141",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87674,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6473:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6452:50:141"
            },
            "returnParameters": {
              "id": 87680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87682,
                  "src": "6525:15:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                    "typeString": "uint32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87677,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6525:6:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 87678,
                    "nodeType": "ArrayTypeName",
                    "src": "6525:8:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                      "typeString": "uint32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6524:17:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87696,
            "nodeType": "FunctionDefinition",
            "src": "6990:155:141",
            "nodes": [],
            "body": {
              "id": 87695,
              "nodeType": "Block",
              "src": "7143:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71067
            ],
            "documentation": {
              "id": 87683,
              "nodeType": "StructuredDocumentation",
              "src": "6550:435:141",
              "text": " @notice Returns the `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array.\n @param quorumNumber The quorum number to get the stake for.\n @param operatorId The id of the operator of interest.\n @param index Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\n @dev Function will revert if `index` is out-of-bounds."
            },
            "functionSelector": "ac6bfb03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeUpdateAtIndex",
            "nameLocation": "6999:21:141",
            "parameters": {
              "id": 87690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87685,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "7027:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87696,
                  "src": "7021:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87684,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7021:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87687,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "7049:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87696,
                  "src": "7041:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87689,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "7069:5:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87696,
                  "src": "7061:13:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7020:55:141"
            },
            "returnParameters": {
              "id": 87694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87696,
                  "src": "7123:18:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 87692,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87691,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "7123:11:141"
                    },
                    "referencedDeclaration": 70831,
                    "src": "7123:11:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7122:20:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87708,
            "nodeType": "FunctionDefinition",
            "src": "7396:115:141",
            "nodes": [],
            "body": {
              "id": 87707,
              "nodeType": "Block",
              "src": "7509:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71078
            ],
            "documentation": {
              "id": 87697,
              "nodeType": "StructuredDocumentation",
              "src": "7151:240:141",
              "text": " @notice Returns the most recent stake weight for the `operatorId` for a certain quorum\n @dev Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"
            },
            "functionSelector": "f851e198",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestStakeUpdate",
            "nameLocation": "7405:20:141",
            "parameters": {
              "id": 87702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87699,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "7434:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87708,
                  "src": "7426:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7426:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87701,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "7452:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87708,
                  "src": "7446:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87700,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7446:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7425:40:141"
            },
            "returnParameters": {
              "id": 87706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87708,
                  "src": "7489:18:141",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeUpdate_$70831_memory_ptr",
                    "typeString": "struct IStakeRegistry.StakeUpdate"
                  },
                  "typeName": {
                    "id": 87704,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87703,
                      "name": "StakeUpdate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70831,
                      "src": "7489:11:141"
                    },
                    "referencedDeclaration": 70831,
                    "src": "7489:11:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeUpdate_$70831_storage_ptr",
                      "typeString": "struct IStakeRegistry.StakeUpdate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7488:20:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87723,
            "nodeType": "FunctionDefinition",
            "src": "8286:171:141",
            "nodes": [],
            "body": {
              "id": 87722,
              "nodeType": "Block",
              "src": "8455:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71092
            ],
            "documentation": {
              "id": 87709,
              "nodeType": "StructuredDocumentation",
              "src": "7517:764:141",
              "text": " @notice Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the\n `index`-th entry in the `operatorIdToStakeHistory[operatorId][quorumNumber]` array if the entry \n corresponds to the operator's stake at `blockNumber`. Reverts otherwise.\n @param quorumNumber The quorum number to get the stake for.\n @param operatorId The id of the operator of interest.\n @param index Array index for lookup, within the dynamic array `operatorIdToStakeHistory[operatorId][quorumNumber]`.\n @param blockNumber Block number to make sure the stake is from.\n @dev Function will revert if `index` is out-of-bounds.\n @dev used the BLSSignatureChecker to get past stakes of signing operators"
            },
            "functionSelector": "f2be94ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeAtBlockNumberAndIndex",
            "nameLocation": "8295:29:141",
            "parameters": {
              "id": 87718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87711,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "8331:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87723,
                  "src": "8325:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87710,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8325:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87713,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "8352:11:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87723,
                  "src": "8345:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87712,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87715,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "8373:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87723,
                  "src": "8365:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87714,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8365:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87717,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8393:5:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87723,
                  "src": "8385:13:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8385:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8324:75:141"
            },
            "returnParameters": {
              "id": 87721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87720,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87723,
                  "src": "8447:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87719,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8447:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8446:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87736,
            "nodeType": "FunctionDefinition",
            "src": "9105:133:141",
            "nodes": [],
            "body": {
              "id": 87735,
              "nodeType": "Block",
              "src": "9236:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71104
            ],
            "documentation": {
              "id": 87724,
              "nodeType": "StructuredDocumentation",
              "src": "8463:637:141",
              "text": " @notice Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the \n `totalStakeHistory[quorumNumber]` array if the entry corresponds to the total stake at `blockNumber`. \n Reverts otherwise.\n @param quorumNumber The quorum number to get the stake for.\n @param index Array index for lookup, within the dynamic array `totalStakeHistory[quorumNumber]`.\n @param blockNumber Block number to make sure the stake is from.\n @dev Function will revert if `index` is out-of-bounds.\n @dev used the BLSSignatureChecker to get past stakes of signing operators"
            },
            "functionSelector": "c8294c56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakeAtBlockNumberFromIndex",
            "nameLocation": "9114:35:141",
            "parameters": {
              "id": 87731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87726,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "9156:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87736,
                  "src": "9150:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87725,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9150:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87728,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "9177:11:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87736,
                  "src": "9170:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87727,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9170:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87730,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "9198:5:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87736,
                  "src": "9190:13:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9190:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9149:55:141"
            },
            "returnParameters": {
              "id": 87734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87736,
                  "src": "9228:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87732,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9228:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9227:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87747,
            "nodeType": "FunctionDefinition",
            "src": "9456:98:141",
            "nodes": [],
            "body": {
              "id": 87746,
              "nodeType": "Block",
              "src": "9552:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71114
            ],
            "documentation": {
              "id": 87737,
              "nodeType": "StructuredDocumentation",
              "src": "9244:207:141",
              "text": " @notice Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\n @dev Function returns weight of **0** in the event that the operator has no stake history"
            },
            "functionSelector": "5401ed27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStake",
            "nameLocation": "9465:15:141",
            "parameters": {
              "id": 87742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87739,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "9489:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87747,
                  "src": "9481:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87738,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9481:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87741,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "9507:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87747,
                  "src": "9501:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87740,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9501:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9480:40:141"
            },
            "returnParameters": {
              "id": 87745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87747,
                  "src": "9544:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87743,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9544:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9543:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87760,
            "nodeType": "FunctionDefinition",
            "src": "9669:147:141",
            "nodes": [],
            "body": {
              "id": 87759,
              "nodeType": "Block",
              "src": "9814:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71126
            ],
            "documentation": {
              "id": 87748,
              "nodeType": "StructuredDocumentation",
              "src": "9560:104:141",
              "text": "@notice Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"
            },
            "functionSelector": "fa28c627",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeAtBlockNumber",
            "nameLocation": "9678:21:141",
            "parameters": {
              "id": 87755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87750,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "9708:10:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87760,
                  "src": "9700:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87749,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9700:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87752,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "9726:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87760,
                  "src": "9720:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87751,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9720:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87754,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "9747:11:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87760,
                  "src": "9740:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87753,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9740:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9699:60:141"
            },
            "returnParameters": {
              "id": 87758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87760,
                  "src": "9807:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87756,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9807:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9806:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87769,
            "nodeType": "FunctionDefinition",
            "src": "10023:83:141",
            "nodes": [],
            "body": {
              "id": 87768,
              "nodeType": "Block",
              "src": "10104:2:141",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              71134
            ],
            "documentation": {
              "id": 87761,
              "nodeType": "StructuredDocumentation",
              "src": "9822:196:141",
              "text": " @notice Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\n @dev Will revert if `_totalStakeHistory[quorumNumber]` is empty."
            },
            "functionSelector": "d5eccc05",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTotalStake",
            "nameLocation": "10032:20:141",
            "parameters": {
              "id": 87764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87763,
                  "mutability": "mutable",
                  "name": "quorumNumber",
                  "nameLocation": "10059:12:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87769,
                  "src": "10053:18:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 87762,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10053:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10052:20:141"
            },
            "returnParameters": {
              "id": 87767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87769,
                  "src": "10096:6:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 87765,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10096:6:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10095:8:141"
            },
            "scope": 87807,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87784,
            "nodeType": "FunctionDefinition",
            "src": "10354:223:141",
            "nodes": [],
            "body": {
              "id": 87783,
              "nodeType": "Block",
              "src": "10522:55:141",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87781,
                    "name": "updateOperatorStakeReturnBitmap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87482,
                    "src": "10539:31:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "functionReturnParameters": 87780,
                  "id": 87782,
                  "nodeType": "Return",
                  "src": "10532:38:141"
                }
              ]
            },
            "baseFunctions": [
              71146
            ],
            "documentation": {
              "id": 87770,
              "nodeType": "StructuredDocumentation",
              "src": "10112:237:141",
              "text": " @notice Called by the registry coordinator to update an operator's stake for one\n or more quorums.\n If the operator no longer has the minimum stake required for a quorum, they are\n added to the"
            },
            "functionSelector": "66acfefe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorStake",
            "nameLocation": "10363:19:141",
            "parameters": {
              "id": 87777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87784,
                  "src": "10392:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10392:7:141",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87784,
                  "src": "10423:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10423:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87784,
                  "src": "10456:14:141",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87775,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10456:5:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10382:112:141"
            },
            "returnParameters": {
              "id": 87780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87784,
                  "src": "10513:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint192",
                    "typeString": "uint192"
                  },
                  "typeName": {
                    "id": 87778,
                    "name": "uint192",
                    "nodeType": "ElementaryTypeName",
                    "src": "10513:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10512:9:141"
            },
            "scope": 87807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87806,
            "nodeType": "FunctionDefinition",
            "src": "10583:169:141",
            "nodes": [],
            "body": {
              "id": 87805,
              "nodeType": "Block",
              "src": "10659:93:141",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 87798,
                                    "name": "operator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87786,
                                    "src": "10719:8:141",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "6f70657261746f724964",
                                    "id": 87799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10729:12:141",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4be61405954529840ecc922c8d60bcc249e5bfb62dcfc7f39fd9733e850c1283",
                                      "typeString": "literal_string \"operatorId\""
                                    },
                                    "value": "operatorId"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4be61405954529840ecc922c8d60bcc249e5bfb62dcfc7f39fd9733e850c1283",
                                      "typeString": "literal_string \"operatorId\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 87796,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10702:3:141",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 87797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10702:16:141",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 87800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10702:40:141",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 87795,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10692:9:141",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 87801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10692:51:141",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 87794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10684:7:141",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 87793,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10684:7:141",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10684:60:141",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10676:7:141",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 87791,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10676:7:141",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10676:69:141",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 87790,
                  "id": 87804,
                  "nodeType": "Return",
                  "src": "10669:76:141"
                }
              ]
            },
            "functionSelector": "224a3c39",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMockOperatorId",
            "nameLocation": "10592:17:141",
            "parameters": {
              "id": 87787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87786,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10618:8:141",
                  "nodeType": "VariableDeclaration",
                  "scope": 87806,
                  "src": "10610:16:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10610:7:141",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10609:18:141"
            },
            "returnParameters": {
              "id": 87790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87806,
                  "src": "10650:7:141",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87788,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10650:7:141",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10649:9:141"
            },
            "scope": 87807,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87479,
              "name": "IStakeRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71147,
              "src": "335:14:141"
            },
            "id": 87480,
            "nodeType": "InheritanceSpecifier",
            "src": "335:14:141"
          }
        ],
        "canonicalName": "StakeRegistryMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 87478,
          "nodeType": "StructuredDocumentation",
          "src": "170:134:141",
          "text": " @title Interface for a `Registry` that keeps track of stakes of operators for up to 256 quorums.\n @author Layr Labs, Inc."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87807,
          71147,
          70498
        ],
        "name": "StakeRegistryMock",
        "nameLocation": "314:17:141",
        "scope": 87808,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 141
}