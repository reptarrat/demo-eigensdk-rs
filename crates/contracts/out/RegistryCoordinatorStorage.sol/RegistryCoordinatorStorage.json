{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevChurnApprover",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newChurnApprover",
          "type": "address"
        }
      ],
      "name": "ChurnApproverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevEjector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newEjector",
          "type": "address"
        }
      ],
      "name": "EjectorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        }
      ],
      "name": "OperatorDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        }
      ],
      "name": "OperatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxOperatorCount",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "kickBIPsOfOperatorStake",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "kickBIPsOfTotalStake",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct IRegistryCoordinator.OperatorSetParam",
          "name": "operatorSetParams",
          "type": "tuple"
        }
      ],
      "name": "OperatorSetParamsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocknumber",
          "type": "uint256"
        }
      ],
      "name": "QuorumBlockNumberUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_CHURN_APPROVAL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PUBKEY_REGISTRATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blsApkRegistry",
      "outputs": [
        {
          "internalType": "contract IBLSApkRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "churnApprover",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "quorumNumbers",
          "type": "bytes"
        }
      ],
      "name": "ejectOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ejector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        }
      ],
      "name": "getCurrentQuorumBitmap",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperator",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IRegistryCoordinator.OperatorStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct IRegistryCoordinator.OperatorInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorFromId",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "quorumNumber",
          "type": "uint8"
        }
      ],
      "name": "getOperatorSetParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxOperatorCount",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "kickBIPsOfOperatorStake",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "kickBIPsOfTotalStake",
              "type": "uint16"
            }
          ],
          "internalType": "struct IRegistryCoordinator.OperatorSetParam",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorStatus",
      "outputs": [
        {
          "internalType": "enum IRegistryCoordinator.OperatorStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getQuorumBitmapAtBlockNumberByIndex",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        }
      ],
      "name": "getQuorumBitmapHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32[]",
          "name": "operatorIds",
          "type": "bytes32[]"
        }
      ],
      "name": "getQuorumBitmapIndicesAtBlockNumber",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getQuorumBitmapUpdateByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint192",
              "name": "quorumBitmap",
              "type": "uint192"
            }
          ],
          "internalType": "struct IRegistryCoordinator.QuorumBitmapUpdate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexRegistry",
      "outputs": [
        {
          "internalType": "contract IIndexRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "isChurnApproverSaltUsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numRegistries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "pubkeyRegistrationMessageHash",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "internalType": "struct BN254.G1Point",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "quorumUpdateBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registries",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceManager",
      "outputs": [
        {
          "internalType": "contract IServiceManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeRegistry",
      "outputs": [
        {
          "internalType": "contract IStakeRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_CHURN_APPROVAL_TYPEHASH()": "ca0de882",
    "PUBKEY_REGISTRATION_TYPEHASH()": "9feab859",
    "blsApkRegistry()": "5df45946",
    "churnApprover()": "054310e6",
    "ejectOperator(address,bytes)": "6e3b17db",
    "ejector()": "28f61b31",
    "getCurrentQuorumBitmap(bytes32)": "871ef049",
    "getOperator(address)": "5865c60c",
    "getOperatorFromId(bytes32)": "296bb064",
    "getOperatorId(address)": "13542a4e",
    "getOperatorSetParams(uint8)": "e65797ad",
    "getOperatorStatus(address)": "fd39105a",
    "getQuorumBitmapAtBlockNumberByIndex(bytes32,uint32,uint256)": "04ec6351",
    "getQuorumBitmapHistoryLength(bytes32)": "03fd3492",
    "getQuorumBitmapIndicesAtBlockNumber(uint32,bytes32[])": "c391425e",
    "getQuorumBitmapUpdateByIndex(bytes32,uint256)": "1eb812da",
    "indexRegistry()": "9e9923c2",
    "isChurnApproverSaltUsed(bytes32)": "1478851f",
    "numRegistries()": "d72d8dd6",
    "owner()": "8da5cb5b",
    "pubkeyRegistrationMessageHash(address)": "3c2a7f4c",
    "quorumCount()": "9aa1653d",
    "quorumUpdateBlockNumber(uint8)": "249a0c42",
    "registries(uint256)": "6347c900",
    "serviceManager()": "3998fdd3",
    "stakeRegistry()": "68304835"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevChurnApprover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newChurnApprover\",\"type\":\"address\"}],\"name\":\"ChurnApproverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevEjector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEjector\",\"type\":\"address\"}],\"name\":\"EjectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxOperatorCount\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"kickBIPsOfOperatorStake\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"kickBIPsOfTotalStake\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct IRegistryCoordinator.OperatorSetParam\",\"name\":\"operatorSetParams\",\"type\":\"tuple\"}],\"name\":\"OperatorSetParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocknumber\",\"type\":\"uint256\"}],\"name\":\"QuorumBlockNumberUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_CHURN_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBKEY_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blsApkRegistry\",\"outputs\":[{\"internalType\":\"contract IBLSApkRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"churnApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"ejectOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ejector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentQuorumBitmap\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IRegistryCoordinator.OperatorStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IRegistryCoordinator.OperatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorFromId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getOperatorSetParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxOperatorCount\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"kickBIPsOfOperatorStake\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"kickBIPsOfTotalStake\",\"type\":\"uint16\"}],\"internalType\":\"struct IRegistryCoordinator.OperatorSetParam\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorStatus\",\"outputs\":[{\"internalType\":\"enum IRegistryCoordinator.OperatorStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuorumBitmapAtBlockNumberByIndex\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"}],\"name\":\"getQuorumBitmapHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"operatorIds\",\"type\":\"bytes32[]\"}],\"name\":\"getQuorumBitmapIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuorumBitmapUpdateByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint192\",\"name\":\"quorumBitmap\",\"type\":\"uint192\"}],\"internalType\":\"struct IRegistryCoordinator.QuorumBitmapUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexRegistry\",\"outputs\":[{\"internalType\":\"contract IIndexRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isChurnApproverSaltUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numRegistries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"pubkeyRegistrationMessageHash\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"quorumUpdateBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceManager\",\"outputs\":[{\"internalType\":\"contract IServiceManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeRegistry\",\"outputs\":[{\"internalType\":\"contract IStakeRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ejectOperator(address,bytes)\":{\"params\":{\"operator\":\"is the operator to eject\",\"quorumNumbers\":\"are the quorum numbers to eject the operator from\"}},\"getQuorumBitmapAtBlockNumberByIndex(bytes32,uint32,uint256)\":{\"details\":\"reverts if `index` is incorrect \"},\"pubkeyRegistrationMessageHash(address)\":{\"params\":{\"operator\":\"is the address of the operator registering their BLS public key\"}}},\"version\":1},\"userdoc\":{\"events\":{\"OperatorDeregistered(address,bytes32)\":{\"notice\":\"Emits when an operator is deregistered\"},\"OperatorRegistered(address,bytes32)\":{\"notice\":\"Emits when an operator is registered\"},\"QuorumBlockNumberUpdated(uint8,uint256)\":{\"notice\":\"emitted when all the operators for a quorum are updated at once\"}},\"kind\":\"user\",\"methods\":{\"OPERATOR_CHURN_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"PUBKEY_REGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash used for registering BLS public keys\"},\"blsApkRegistry()\":{\"notice\":\"the BLS Aggregate Pubkey Registry contract that will keep track of operators' aggregate BLS public keys per quorum\"},\"churnApprover()\":{\"notice\":\"the address of the entity allowed to sign off on operators getting kicked out of the AVS during registration\"},\"ejectOperator(address,bytes)\":{\"notice\":\"Ejects the provided operator from the provided quorums from the AVS\"},\"ejector()\":{\"notice\":\"the address of the entity allowed to eject operators from the AVS\"},\"getCurrentQuorumBitmap(bytes32)\":{\"notice\":\"Returns the current quorum bitmap for the given `operatorId`\"},\"getOperator(address)\":{\"notice\":\"Returns the operator struct for the given `operator`\"},\"getOperatorFromId(bytes32)\":{\"notice\":\"Returns the operator address for the given `operatorId`\"},\"getOperatorId(address)\":{\"notice\":\"Returns the operatorId for the given `operator`\"},\"getOperatorSetParams(uint8)\":{\"notice\":\"Returns the operator set params for the given `quorumNumber`\"},\"getOperatorStatus(address)\":{\"notice\":\"Returns the status for the given `operator`\"},\"getQuorumBitmapAtBlockNumberByIndex(bytes32,uint32,uint256)\":{\"notice\":\"Returns the quorum bitmap for the given `operatorId` at the given `blockNumber` via the `index`\"},\"getQuorumBitmapHistoryLength(bytes32)\":{\"notice\":\"Returns the length of the quorum bitmap history for the given `operatorId`\"},\"getQuorumBitmapIndicesAtBlockNumber(uint32,bytes32[])\":{\"notice\":\"Returns the indices of the quorumBitmaps for the provided `operatorIds` at the given `blockNumber`\"},\"getQuorumBitmapUpdateByIndex(bytes32,uint256)\":{\"notice\":\"Returns the `index`th entry in the operator with `operatorId`'s bitmap history\"},\"indexRegistry()\":{\"notice\":\"the Index Registry contract that will keep track of operators' indexes\"},\"isChurnApproverSaltUsed(bytes32)\":{\"notice\":\"whether the salt has been used for an operator churn approval\"},\"numRegistries()\":{\"notice\":\"Returns the number of registries\"},\"owner()\":{\"notice\":\"The owner of the registry coordinator\"},\"pubkeyRegistrationMessageHash(address)\":{\"notice\":\"Returns the message hash that an operator must sign to register their BLS public key.\"},\"quorumCount()\":{\"notice\":\"the current number of quorums supported by the registry coordinator\"},\"quorumUpdateBlockNumber(uint8)\":{\"notice\":\"mapping from quorum number to the latest block that all quorums were updated all at once\"},\"registries(uint256)\":{\"notice\":\"the dynamic-length array of the registries this coordinator is coordinating\"},\"serviceManager()\":{\"notice\":\"the ServiceManager for this AVS, which forwards calls onto EigenLayer's core contracts\"},\"stakeRegistry()\":{\"notice\":\"the Stake Registry contract that will keep track of operators' stakes\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RegistryCoordinatorStorage.sol\":\"RegistryCoordinatorStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e\",\"dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d\",\"dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234\",\"dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235\",\"dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8\",\"dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/RegistryCoordinatorStorage.sol\":{\"keccak256\":\"0xb41df27cbe19b68176956a1244d4ab6fcd7e06a6ec46cf9b560cf1470744f4ef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aa4573de20eeddb9c8c6ec5c8b952997247d0504eaedc15364f1e07accfc482b\",\"dweb:/ipfs/QmWoC9MsxHJphWSbmEH8AEyjMDToFhxwhtiLGAc3hPA32s\"]},\"src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e\",\"dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e\"]},\"src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637\",\"dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db\",\"dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi\"]},\"src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0x738a2f3e3405559cb3f5ee56e0b98a69ef543699bbe46960ed54ac660c013291\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://412d4fa03de950fa70da922fc6c136c24f3984940b33516fe1f885bf09c970c5\",\"dweb:/ipfs/QmYPbQk6YTQ2U1WRG9XzjumMACbzUKnuZRXCPTiow8iAgq\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3\",\"dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve\"]},\"src/libraries/BN254.sol\":{\"keccak256\":\"0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49\",\"dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevChurnApprover",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newChurnApprover",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChurnApproverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevEjector",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newEjector",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EjectorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperatorDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "struct IRegistryCoordinator.OperatorSetParam",
              "name": "operatorSetParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxOperatorCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "kickBIPsOfOperatorStake",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "kickBIPsOfTotalStake",
                  "type": "uint16"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetParamsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "blocknumber",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuorumBlockNumberUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_CHURN_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PUBKEY_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blsApkRegistry",
          "outputs": [
            {
              "internalType": "contract IBLSApkRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "churnApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "quorumNumbers",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ejectOperator"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ejector",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentQuorumBitmap",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperator",
          "outputs": [
            {
              "internalType": "struct IRegistryCoordinator.OperatorInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "operatorId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IRegistryCoordinator.OperatorStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorFromId",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "quorumNumber",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetParams",
          "outputs": [
            {
              "internalType": "struct IRegistryCoordinator.OperatorSetParam",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxOperatorCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "kickBIPsOfOperatorStake",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "kickBIPsOfTotalStake",
                  "type": "uint16"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorStatus",
          "outputs": [
            {
              "internalType": "enum IRegistryCoordinator.OperatorStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuorumBitmapAtBlockNumberByIndex",
          "outputs": [
            {
              "internalType": "uint192",
              "name": "",
              "type": "uint192"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuorumBitmapHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32[]",
              "name": "operatorIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuorumBitmapIndicesAtBlockNumber",
          "outputs": [
            {
              "internalType": "uint32[]",
              "name": "",
              "type": "uint32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operatorId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuorumBitmapUpdateByIndex",
          "outputs": [
            {
              "internalType": "struct IRegistryCoordinator.QuorumBitmapUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint192",
                  "name": "quorumBitmap",
                  "type": "uint192"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexRegistry",
          "outputs": [
            {
              "internalType": "contract IIndexRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isChurnApproverSaltUsed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numRegistries",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pubkeyRegistrationMessageHash",
          "outputs": [
            {
              "internalType": "struct BN254.G1Point",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumCount",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumUpdateBlockNumber",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "registries",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "serviceManager",
          "outputs": [
            {
              "internalType": "contract IServiceManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakeRegistry",
          "outputs": [
            {
              "internalType": "contract IStakeRegistry",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ejectOperator(address,bytes)": {
            "params": {
              "operator": "is the operator to eject",
              "quorumNumbers": "are the quorum numbers to eject the operator from"
            }
          },
          "getQuorumBitmapAtBlockNumberByIndex(bytes32,uint32,uint256)": {
            "details": "reverts if `index` is incorrect "
          },
          "pubkeyRegistrationMessageHash(address)": {
            "params": {
              "operator": "is the address of the operator registering their BLS public key"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "OPERATOR_CHURN_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
          },
          "PUBKEY_REGISTRATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash used for registering BLS public keys"
          },
          "blsApkRegistry()": {
            "notice": "the BLS Aggregate Pubkey Registry contract that will keep track of operators' aggregate BLS public keys per quorum"
          },
          "churnApprover()": {
            "notice": "the address of the entity allowed to sign off on operators getting kicked out of the AVS during registration"
          },
          "ejectOperator(address,bytes)": {
            "notice": "Ejects the provided operator from the provided quorums from the AVS"
          },
          "ejector()": {
            "notice": "the address of the entity allowed to eject operators from the AVS"
          },
          "getCurrentQuorumBitmap(bytes32)": {
            "notice": "Returns the current quorum bitmap for the given `operatorId`"
          },
          "getOperator(address)": {
            "notice": "Returns the operator struct for the given `operator`"
          },
          "getOperatorFromId(bytes32)": {
            "notice": "Returns the operator address for the given `operatorId`"
          },
          "getOperatorId(address)": {
            "notice": "Returns the operatorId for the given `operator`"
          },
          "getOperatorSetParams(uint8)": {
            "notice": "Returns the operator set params for the given `quorumNumber`"
          },
          "getOperatorStatus(address)": {
            "notice": "Returns the status for the given `operator`"
          },
          "getQuorumBitmapAtBlockNumberByIndex(bytes32,uint32,uint256)": {
            "notice": "Returns the quorum bitmap for the given `operatorId` at the given `blockNumber` via the `index`"
          },
          "getQuorumBitmapHistoryLength(bytes32)": {
            "notice": "Returns the length of the quorum bitmap history for the given `operatorId`"
          },
          "getQuorumBitmapIndicesAtBlockNumber(uint32,bytes32[])": {
            "notice": "Returns the indices of the quorumBitmaps for the provided `operatorIds` at the given `blockNumber`"
          },
          "getQuorumBitmapUpdateByIndex(bytes32,uint256)": {
            "notice": "Returns the `index`th entry in the operator with `operatorId`'s bitmap history"
          },
          "indexRegistry()": {
            "notice": "the Index Registry contract that will keep track of operators' indexes"
          },
          "isChurnApproverSaltUsed(bytes32)": {
            "notice": "whether the salt has been used for an operator churn approval"
          },
          "numRegistries()": {
            "notice": "Returns the number of registries"
          },
          "owner()": {
            "notice": "The owner of the registry coordinator"
          },
          "pubkeyRegistrationMessageHash(address)": {
            "notice": "Returns the message hash that an operator must sign to register their BLS public key."
          },
          "quorumCount()": {
            "notice": "the current number of quorums supported by the registry coordinator"
          },
          "quorumUpdateBlockNumber(uint8)": {
            "notice": "mapping from quorum number to the latest block that all quorums were updated all at once"
          },
          "registries(uint256)": {
            "notice": "the dynamic-length array of the registries this coordinator is coordinating"
          },
          "serviceManager()": {
            "notice": "the ServiceManager for this AVS, which forwards calls onto EigenLayer's core contracts"
          },
          "stakeRegistry()": {
            "notice": "the Stake Registry contract that will keep track of operators' stakes"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "eigenlayer-contracts/=lib/eigenlayer-contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/RegistryCoordinatorStorage.sol": "RegistryCoordinatorStorage"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eigenlayer-contracts/src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x6808a4feea1bde54f60f9816251f8552d05f0340d87e9a57523ffacdecdb7dfb",
        "urls": [
          "bzz-raw://24dd16f797a63f918428e52b22a821deda75cae1a6728c003375e3ad15fcb22e",
          "dweb:/ipfs/QmNidYeCGhstsjnZm4Mb6LMmRSNbRAx21nUCng1SMbuBqt"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0x8f78b8483d90f107fb003d346e04eed4632c9413f33f8531b8480ccb1d44197f",
        "urls": [
          "bzz-raw://7e1fede3a364eb82b37763721043fbeac65c49fa0fc92dea31b55faae2a0dc4d",
          "dweb:/ipfs/QmSUqwXjjHAn3hgn6tSpTd6V5z3VaRHCU61BWbQKBjKRt3"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xc40998ca52abf38829f8ee99a28c5eed741361194d8774e84783c75a74902674",
        "urls": [
          "bzz-raw://2d03e87c279200f81ec9031ca1dc839e65829952e375748de0ed95a3d6861234",
          "dweb:/ipfs/QmQEhmNMQXxqmjFJdgrDceEYqwJQ4AWJR5TxgDy1ZMSrqN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x52a4332cc4086b57164d5d3827bfcfa75821cd89470c65560de1dd28ab060ef9",
        "urls": [
          "bzz-raw://da7845149b78dc63678db512fee35d136a05d586f1848f163d987dea8dc8a235",
          "dweb:/ipfs/QmZg38VFXSrQjA9dyGH66ber2cfVgaYQKb1bLEBxw5H3Kj"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x2a2b15842b11da4f2e6ea7016a4f94cfcfce18f2306c3bb3bb17b05831bd2c2a",
        "urls": [
          "bzz-raw://9c4b5da7c287fcb1a95b2543ba9d33df8829420dce39c1d15e950f31af6035a8",
          "dweb:/ipfs/QmWM2LYsvnf69g4aLjYXUKE6gQ54Rd95PLXU3xTQ2xiBss"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/RegistryCoordinatorStorage.sol": {
        "keccak256": "0xb41df27cbe19b68176956a1244d4ab6fcd7e06a6ec46cf9b560cf1470744f4ef",
        "urls": [
          "bzz-raw://aa4573de20eeddb9c8c6ec5c8b952997247d0504eaedc15364f1e07accfc482b",
          "dweb:/ipfs/QmWoC9MsxHJphWSbmEH8AEyjMDToFhxwhtiLGAc3hPA32s"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IBLSApkRegistry.sol": {
        "keccak256": "0x8ab1a16d2d5fd7dd89447aaceb67a3d383d6bb484bbcf2a4755e780db0011a32",
        "urls": [
          "bzz-raw://5b69bad830b1983d436c923870489d0582fb16a5f88a0e978057c78b52e51b9e",
          "dweb:/ipfs/QmPnZBXLtivrjB1WxaaikCgcKUo9Bf87MkSM53DnfpUs8e"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IIndexRegistry.sol": {
        "keccak256": "0x66ea31c35539fd47a94b874ac9339bc178f9cea3dfee932fd6deec51945f59cf",
        "urls": [
          "bzz-raw://48e0e16f4973a68487165cf35c178badd55c0d2c2e592c698723108694072637",
          "dweb:/ipfs/QmUG3aFym2i2bsUFD8YbicCEM6hLh1TsgM4XR89rkEUYzy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3",
        "urls": [
          "bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25",
          "dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistryCoordinator.sol": {
        "keccak256": "0xaa994bdacd0d8718b4a9c018debece071e28a0906a3f041d53f1874eb882fad9",
        "urls": [
          "bzz-raw://0f175cfc849fb4ac38d1629e6f87c1d7b39bd5eb2bc62e6d40d57a9ec34a62db",
          "dweb:/ipfs/QmQhgQNjZaYYzEpk2X732ZKPfTbFGr8y8RLhDWizZSQLxi"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IServiceManager.sol": {
        "keccak256": "0x738a2f3e3405559cb3f5ee56e0b98a69ef543699bbe46960ed54ac660c013291",
        "urls": [
          "bzz-raw://412d4fa03de950fa70da922fc6c136c24f3984940b33516fe1f885bf09c970c5",
          "dweb:/ipfs/QmYPbQk6YTQ2U1WRG9XzjumMACbzUKnuZRXCPTiow8iAgq"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStakeRegistry.sol": {
        "keccak256": "0xa990d3cff41340b37d8e5218627f8f83cd60acbce5e1846af28f6d65db0e2b2f",
        "urls": [
          "bzz-raw://68cc70d64f757e21c8a5d67b93d17543a160a8507a7b29f77bba4d2dc6f2a9c3",
          "dweb:/ipfs/QmUjzs5cA3k86w7Cewbei7kUNfRymuEidEbEy9hKQe22Ve"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/BN254.sol": {
        "keccak256": "0x40a9a94aaa705b67d1c4efdccb8e1ff8ccf41d1ce20639f6cd6fd27d84891417",
        "urls": [
          "bzz-raw://4b7a07633fc3fce4d2eac8dc16ee2cf138e34583e1822d3d705d7c567667bf49",
          "dweb:/ipfs/QmVWYp64T71yKnT2Bpoq4wj7bADUKmjW8w5uzhCTh5Bs91"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/RegistryCoordinatorStorage.sol",
    "id": 67882,
    "exportedSymbols": {
      "IBLSApkRegistry": [
        70280
      ],
      "IIndexRegistry": [
        70489
      ],
      "IRegistryCoordinator": [
        70745
      ],
      "IServiceManager": [
        70796
      ],
      "IStakeRegistry": [
        71147
      ],
      "RegistryCoordinatorStorage": [
        67881
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4475:99",
    "nodes": [
      {
        "id": 67734,
        "nodeType": "PragmaDirective",
        "src": "37:24:99",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 67736,
        "nodeType": "ImportDirective",
        "src": "63:65:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IBLSApkRegistry.sol",
        "file": "./interfaces/IBLSApkRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67882,
        "sourceUnit": 70281,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67735,
              "name": "IBLSApkRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70280,
              "src": "71:15:99",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IBLSApkRegistry_$70280_$",
                "typeString": "type(contract IBLSApkRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67738,
        "nodeType": "ImportDirective",
        "src": "129:63:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IStakeRegistry.sol",
        "file": "./interfaces/IStakeRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67882,
        "sourceUnit": 71148,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67737,
              "name": "IStakeRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71147,
              "src": "137:14:99",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IStakeRegistry_$71147_$",
                "typeString": "type(contract IStakeRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67740,
        "nodeType": "ImportDirective",
        "src": "193:63:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IIndexRegistry.sol",
        "file": "./interfaces/IIndexRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67882,
        "sourceUnit": 70490,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67739,
              "name": "IIndexRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70489,
              "src": "201:14:99",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IIndexRegistry_$70489_$",
                "typeString": "type(contract IIndexRegistry)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67742,
        "nodeType": "ImportDirective",
        "src": "257:65:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IServiceManager.sol",
        "file": "./interfaces/IServiceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67882,
        "sourceUnit": 70797,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67741,
              "name": "IServiceManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70796,
              "src": "265:15:99",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IServiceManager_$70796_$",
                "typeString": "type(contract IServiceManager)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67744,
        "nodeType": "ImportDirective",
        "src": "323:75:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistryCoordinator.sol",
        "file": "./interfaces/IRegistryCoordinator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67882,
        "sourceUnit": 70746,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67743,
              "name": "IRegistryCoordinator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70745,
              "src": "331:20:99",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IRegistryCoordinator_$70745_$",
                "typeString": "type(contract IRegistryCoordinator)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67881,
        "nodeType": "ContractDefinition",
        "src": "400:4112:99",
        "nodes": [
          {
            "id": 67752,
            "nodeType": "VariableDeclaration",
            "src": "798:281:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67747,
              "nodeType": "StructuredDocumentation",
              "src": "704:89:99",
              "text": "@notice The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
            },
            "functionSelector": "ca0de882",
            "mutability": "constant",
            "name": "OPERATOR_CHURN_APPROVAL_TYPEHASH",
            "nameLocation": "822:32:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 67748,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "798:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f70657261746f72436875726e417070726f76616c2861646472657373207265676973746572696e674f70657261746f722c62797465733332207265676973746572696e674f70657261746f7249642c4f70657261746f724b69636b506172616d5b5d206f70657261746f724b69636b506172616d732c627974657333322073616c742c75696e7432353620657870697279294f70657261746f724b69636b506172616d2875696e74382071756f72756d4e756d6265722c61646472657373206f70657261746f7229",
                  "id": 67750,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "875:203:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a",
                    "typeString": "literal_string \"OperatorChurnApproval(address registeringOperator,bytes32 registeringOperatorId,OperatorKickParam[] operatorKickParams,bytes32 salt,uint256 expiry)OperatorKickParam(uint8 quorumNumber,address operator)\""
                  },
                  "value": "OperatorChurnApproval(address registeringOperator,bytes32 registeringOperatorId,OperatorKickParam[] operatorKickParams,bytes32 salt,uint256 expiry)OperatorKickParam(uint8 quorumNumber,address operator)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a",
                    "typeString": "literal_string \"OperatorChurnApproval(address registeringOperator,bytes32 registeringOperatorId,OperatorKickParam[] operatorKickParams,bytes32 salt,uint256 expiry)OperatorKickParam(uint8 quorumNumber,address operator)\""
                  }
                ],
                "id": 67749,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "865:9:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 67751,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "865:214:99",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67758,
            "nodeType": "VariableDeclaration",
            "src": "1159:109:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67753,
              "nodeType": "StructuredDocumentation",
              "src": "1085:69:99",
              "text": "@notice The EIP-712 typehash used for registering BLS public keys"
            },
            "functionSelector": "9feab859",
            "mutability": "constant",
            "name": "PUBKEY_REGISTRATION_TYPEHASH",
            "nameLocation": "1183:28:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 67754,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1159:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "424e3235345075626b6579526567697374726174696f6e2861646472657373206f70657261746f7229",
                  "id": 67756,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1224:43:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de6",
                    "typeString": "literal_string \"BN254PubkeyRegistration(address operator)\""
                  },
                  "value": "BN254PubkeyRegistration(address operator)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de6",
                    "typeString": "literal_string \"BN254PubkeyRegistration(address operator)\""
                  }
                ],
                "id": 67755,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1214:9:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 67757,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1214:54:99",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67766,
            "nodeType": "VariableDeclaration",
            "src": "1327:63:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67759,
              "nodeType": "StructuredDocumentation",
              "src": "1274:48:99",
              "text": "@notice The maximum value of a quorum bitmap"
            },
            "mutability": "constant",
            "name": "MAX_QUORUM_BITMAP",
            "nameLocation": "1353:17:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1327:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 67763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1378:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint192_$",
                      "typeString": "type(uint192)"
                    },
                    "typeName": {
                      "id": 67762,
                      "name": "uint192",
                      "nodeType": "ElementaryTypeName",
                      "src": "1378:7:99",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint192_$",
                      "typeString": "type(uint192)"
                    }
                  ],
                  "id": 67761,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1373:4:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 67764,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1373:13:99",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint192",
                  "typeString": "type(uint192)"
                }
              },
              "id": 67765,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1373:17:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint192",
                "typeString": "uint192"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67770,
            "nodeType": "VariableDeclaration",
            "src": "1440:49:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67767,
              "nodeType": "StructuredDocumentation",
              "src": "1396:39:99",
              "text": "@notice The basis point denominator"
            },
            "mutability": "constant",
            "name": "BIPS_DENOMINATOR",
            "nameLocation": "1465:16:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 67768,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1440:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 67769,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1484:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "id": 67774,
            "nodeType": "VariableDeclaration",
            "src": "1560:52:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67771,
              "nodeType": "StructuredDocumentation",
              "src": "1495:60:99",
              "text": "@notice Index for flag that pauses operator registration"
            },
            "mutability": "constant",
            "name": "PAUSED_REGISTER_OPERATOR",
            "nameLocation": "1584:24:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67772,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1560:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 67773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1611:1:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 67778,
            "nodeType": "VariableDeclaration",
            "src": "1685:54:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67775,
              "nodeType": "StructuredDocumentation",
              "src": "1618:62:99",
              "text": "@notice Index for flag that pauses operator deregistration"
            },
            "mutability": "constant",
            "name": "PAUSED_DEREGISTER_OPERATOR",
            "nameLocation": "1709:26:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67776,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1685:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 67777,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1738:1:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 67782,
            "nodeType": "VariableDeclaration",
            "src": "1807:50:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67779,
              "nodeType": "StructuredDocumentation",
              "src": "1745:57:99",
              "text": "@notice Index for flag pausing operator stake updates"
            },
            "mutability": "constant",
            "name": "PAUSED_UPDATE_OPERATOR",
            "nameLocation": "1831:22:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67780,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1807:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 67781,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1856:1:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "id": 67786,
            "nodeType": "VariableDeclaration",
            "src": "1932:46:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 67783,
              "nodeType": "StructuredDocumentation",
              "src": "1863:64:99",
              "text": "@notice The maximum number of quorums this contract supports"
            },
            "mutability": "constant",
            "name": "MAX_QUORUM_COUNT",
            "nameLocation": "1956:16:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67784,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1932:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "313932",
              "id": 67785,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1975:3:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_192_by_1",
                "typeString": "int_const 192"
              },
              "value": "192"
            },
            "visibility": "internal"
          },
          {
            "id": 67790,
            "nodeType": "VariableDeclaration",
            "src": "2088:47:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67787,
              "nodeType": "StructuredDocumentation",
              "src": "1985:98:99",
              "text": "@notice the ServiceManager for this AVS, which forwards calls onto EigenLayer's core contracts"
            },
            "functionSelector": "3998fdd3",
            "mutability": "immutable",
            "name": "serviceManager",
            "nameLocation": "2121:14:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IServiceManager_$70796",
              "typeString": "contract IServiceManager"
            },
            "typeName": {
              "id": 67789,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67788,
                "name": "IServiceManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 70796,
                "src": "2088:15:99"
              },
              "referencedDeclaration": 70796,
              "src": "2088:15:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IServiceManager_$70796",
                "typeString": "contract IServiceManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67794,
            "nodeType": "VariableDeclaration",
            "src": "2272:47:99",
            "nodes": [],
            "baseFunctions": [
              70601
            ],
            "constant": false,
            "documentation": {
              "id": 67791,
              "nodeType": "StructuredDocumentation",
              "src": "2141:126:99",
              "text": "@notice the BLS Aggregate Pubkey Registry contract that will keep track of operators' aggregate BLS public keys per quorum"
            },
            "functionSelector": "5df45946",
            "mutability": "immutable",
            "name": "blsApkRegistry",
            "nameLocation": "2305:14:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
              "typeString": "contract IBLSApkRegistry"
            },
            "typeName": {
              "id": 67793,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67792,
                "name": "IBLSApkRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 70280,
                "src": "2272:15:99"
              },
              "referencedDeclaration": 70280,
              "src": "2272:15:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                "typeString": "contract IBLSApkRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67798,
            "nodeType": "VariableDeclaration",
            "src": "2411:45:99",
            "nodes": [],
            "baseFunctions": [
              70594
            ],
            "constant": false,
            "documentation": {
              "id": 67795,
              "nodeType": "StructuredDocumentation",
              "src": "2325:81:99",
              "text": "@notice the Stake Registry contract that will keep track of operators' stakes"
            },
            "functionSelector": "68304835",
            "mutability": "immutable",
            "name": "stakeRegistry",
            "nameLocation": "2443:13:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
              "typeString": "contract IStakeRegistry"
            },
            "typeName": {
              "id": 67797,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67796,
                "name": "IStakeRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71147,
                "src": "2411:14:99"
              },
              "referencedDeclaration": 71147,
              "src": "2411:14:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                "typeString": "contract IStakeRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67802,
            "nodeType": "VariableDeclaration",
            "src": "2549:45:99",
            "nodes": [],
            "baseFunctions": [
              70608
            ],
            "constant": false,
            "documentation": {
              "id": 67799,
              "nodeType": "StructuredDocumentation",
              "src": "2462:82:99",
              "text": "@notice the Index Registry contract that will keep track of operators' indexes"
            },
            "functionSelector": "9e9923c2",
            "mutability": "immutable",
            "name": "indexRegistry",
            "nameLocation": "2581:13:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
              "typeString": "contract IIndexRegistry"
            },
            "typeName": {
              "id": 67801,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67800,
                "name": "IIndexRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 70489,
                "src": "2549:14:99"
              },
              "referencedDeclaration": 70489,
              "src": "2549:14:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                "typeString": "contract IIndexRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67805,
            "nodeType": "VariableDeclaration",
            "src": "2902:24:99",
            "nodes": [],
            "baseFunctions": [
              70622
            ],
            "constant": false,
            "documentation": {
              "id": 67803,
              "nodeType": "StructuredDocumentation",
              "src": "2818:79:99",
              "text": "@notice the current number of quorums supported by the registry coordinator"
            },
            "functionSelector": "9aa1653d",
            "mutability": "mutable",
            "name": "quorumCount",
            "nameLocation": "2915:11:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67804,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2902:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67811,
            "nodeType": "VariableDeclaration",
            "src": "2999:57:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67806,
              "nodeType": "StructuredDocumentation",
              "src": "2932:62:99",
              "text": "@notice maps quorum number => operator cap and kick params"
            },
            "mutability": "mutable",
            "name": "_quorumParams",
            "nameLocation": "3043:13:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_OperatorSetParam_$70573_storage_$",
              "typeString": "mapping(uint8 => struct IRegistryCoordinator.OperatorSetParam)"
            },
            "typeName": {
              "id": 67810,
              "keyType": {
                "id": 67807,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "3007:5:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "2999:34:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_OperatorSetParam_$70573_storage_$",
                "typeString": "mapping(uint8 => struct IRegistryCoordinator.OperatorSetParam)"
              },
              "valueType": {
                "id": 67809,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 67808,
                  "name": "OperatorSetParam",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70573,
                  "src": "3016:16:99"
                },
                "referencedDeclaration": 70573,
                "src": "3016:16:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OperatorSetParam_$70573_storage_ptr",
                  "typeString": "struct IRegistryCoordinator.OperatorSetParam"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67818,
            "nodeType": "VariableDeclaration",
            "src": "3137:72:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67812,
              "nodeType": "StructuredDocumentation",
              "src": "3062:70:99",
              "text": "@notice maps operator id => historical quorums they registered for"
            },
            "mutability": "mutable",
            "name": "_operatorBitmapHistory",
            "nameLocation": "3187:22:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_QuorumBitmapUpdate_$70566_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistryCoordinator.QuorumBitmapUpdate[])"
            },
            "typeName": {
              "id": 67817,
              "keyType": {
                "id": 67813,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3145:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3137:40:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_QuorumBitmapUpdate_$70566_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistryCoordinator.QuorumBitmapUpdate[])"
              },
              "valueType": {
                "baseType": {
                  "id": 67815,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 67814,
                    "name": "QuorumBitmapUpdate",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 70566,
                    "src": "3156:18:99"
                  },
                  "referencedDeclaration": 70566,
                  "src": "3156:18:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_QuorumBitmapUpdate_$70566_storage_ptr",
                    "typeString": "struct IRegistryCoordinator.QuorumBitmapUpdate"
                  }
                },
                "id": 67816,
                "nodeType": "ArrayTypeName",
                "src": "3156:20:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_QuorumBitmapUpdate_$70566_storage_$dyn_storage_ptr",
                  "typeString": "struct IRegistryCoordinator.QuorumBitmapUpdate[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67824,
            "nodeType": "VariableDeclaration",
            "src": "3279:55:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67819,
              "nodeType": "StructuredDocumentation",
              "src": "3215:59:99",
              "text": "@notice maps operator address => operator id and status"
            },
            "mutability": "mutable",
            "name": "_operatorInfo",
            "nameLocation": "3321:13:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorInfo_$70559_storage_$",
              "typeString": "mapping(address => struct IRegistryCoordinator.OperatorInfo)"
            },
            "typeName": {
              "id": 67823,
              "keyType": {
                "id": 67820,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3287:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3279:32:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OperatorInfo_$70559_storage_$",
                "typeString": "mapping(address => struct IRegistryCoordinator.OperatorInfo)"
              },
              "valueType": {
                "id": 67822,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 67821,
                  "name": "OperatorInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70559,
                  "src": "3298:12:99"
                },
                "referencedDeclaration": 70559,
                "src": "3298:12:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OperatorInfo_$70559_storage_ptr",
                  "typeString": "struct IRegistryCoordinator.OperatorInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67829,
            "nodeType": "VariableDeclaration",
            "src": "3418:55:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67825,
              "nodeType": "StructuredDocumentation",
              "src": "3340:73:99",
              "text": "@notice whether the salt has been used for an operator churn approval"
            },
            "functionSelector": "1478851f",
            "mutability": "mutable",
            "name": "isChurnApproverSaltUsed",
            "nameLocation": "3450:23:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 67828,
              "keyType": {
                "id": 67826,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3426:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3418:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 67827,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3437:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 67834,
            "nodeType": "VariableDeclaration",
            "src": "3584:56:99",
            "nodes": [],
            "baseFunctions": [
              70738
            ],
            "constant": false,
            "documentation": {
              "id": 67830,
              "nodeType": "StructuredDocumentation",
              "src": "3479:100:99",
              "text": "@notice mapping from quorum number to the latest block that all quorums were updated all at once"
            },
            "functionSelector": "249a0c42",
            "mutability": "mutable",
            "name": "quorumUpdateBlockNumber",
            "nameLocation": "3617:23:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
              "typeString": "mapping(uint8 => uint256)"
            },
            "typeName": {
              "id": 67833,
              "keyType": {
                "id": 67831,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "3592:5:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "3584:25:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                "typeString": "mapping(uint8 => uint256)"
              },
              "valueType": {
                "id": 67832,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3601:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 67838,
            "nodeType": "VariableDeclaration",
            "src": "3739:27:99",
            "nodes": [],
            "baseFunctions": [
              70715
            ],
            "constant": false,
            "documentation": {
              "id": 67835,
              "nodeType": "StructuredDocumentation",
              "src": "3647:87:99",
              "text": "@notice the dynamic-length array of the registries this coordinator is coordinating"
            },
            "functionSelector": "6347c900",
            "mutability": "mutable",
            "name": "registries",
            "nameLocation": "3756:10:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 67836,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3739:7:99",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 67837,
              "nodeType": "ArrayTypeName",
              "src": "3739:9:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67841,
            "nodeType": "VariableDeclaration",
            "src": "3897:28:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67839,
              "nodeType": "StructuredDocumentation",
              "src": "3772:120:99",
              "text": "@notice the address of the entity allowed to sign off on operators getting kicked out of the AVS during registration"
            },
            "functionSelector": "054310e6",
            "mutability": "mutable",
            "name": "churnApprover",
            "nameLocation": "3912:13:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67840,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3897:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67844,
            "nodeType": "VariableDeclaration",
            "src": "4013:22:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67842,
              "nodeType": "StructuredDocumentation",
              "src": "3931:77:99",
              "text": "@notice the address of the entity allowed to eject operators from the AVS"
            },
            "functionSelector": "28f61b31",
            "mutability": "mutable",
            "name": "ejector",
            "nameLocation": "4028:7:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67843,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4013:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67876,
            "nodeType": "FunctionDefinition",
            "src": "4042:349:99",
            "nodes": [],
            "body": {
              "id": 67875,
              "nodeType": "Block",
              "src": "4220:171:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67859,
                      "name": "serviceManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67790,
                      "src": "4230:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IServiceManager_$70796",
                        "typeString": "contract IServiceManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67860,
                      "name": "_serviceManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67847,
                      "src": "4247:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IServiceManager_$70796",
                        "typeString": "contract IServiceManager"
                      }
                    },
                    "src": "4230:32:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IServiceManager_$70796",
                      "typeString": "contract IServiceManager"
                    }
                  },
                  "id": 67862,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:32:99"
                },
                {
                  "expression": {
                    "id": 67865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67863,
                      "name": "stakeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67798,
                      "src": "4272:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                        "typeString": "contract IStakeRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67864,
                      "name": "_stakeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67850,
                      "src": "4288:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                        "typeString": "contract IStakeRegistry"
                      }
                    },
                    "src": "4272:30:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                      "typeString": "contract IStakeRegistry"
                    }
                  },
                  "id": 67866,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:30:99"
                },
                {
                  "expression": {
                    "id": 67869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67867,
                      "name": "blsApkRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67794,
                      "src": "4312:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                        "typeString": "contract IBLSApkRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67868,
                      "name": "_blsApkRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67853,
                      "src": "4329:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                        "typeString": "contract IBLSApkRegistry"
                      }
                    },
                    "src": "4312:32:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                      "typeString": "contract IBLSApkRegistry"
                    }
                  },
                  "id": 67870,
                  "nodeType": "ExpressionStatement",
                  "src": "4312:32:99"
                },
                {
                  "expression": {
                    "id": 67873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67871,
                      "name": "indexRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67802,
                      "src": "4354:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                        "typeString": "contract IIndexRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67872,
                      "name": "_indexRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67856,
                      "src": "4370:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                        "typeString": "contract IIndexRegistry"
                      }
                    },
                    "src": "4354:30:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                      "typeString": "contract IIndexRegistry"
                    }
                  },
                  "id": 67874,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:30:99"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67847,
                  "mutability": "mutable",
                  "name": "_serviceManager",
                  "nameLocation": "4079:15:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 67876,
                  "src": "4063:31:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IServiceManager_$70796",
                    "typeString": "contract IServiceManager"
                  },
                  "typeName": {
                    "id": 67846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67845,
                      "name": "IServiceManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70796,
                      "src": "4063:15:99"
                    },
                    "referencedDeclaration": 70796,
                    "src": "4063:15:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IServiceManager_$70796",
                      "typeString": "contract IServiceManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67850,
                  "mutability": "mutable",
                  "name": "_stakeRegistry",
                  "nameLocation": "4119:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 67876,
                  "src": "4104:29:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                    "typeString": "contract IStakeRegistry"
                  },
                  "typeName": {
                    "id": 67849,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67848,
                      "name": "IStakeRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71147,
                      "src": "4104:14:99"
                    },
                    "referencedDeclaration": 71147,
                    "src": "4104:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakeRegistry_$71147",
                      "typeString": "contract IStakeRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67853,
                  "mutability": "mutable",
                  "name": "_blsApkRegistry",
                  "nameLocation": "4159:15:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 67876,
                  "src": "4143:31:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                    "typeString": "contract IBLSApkRegistry"
                  },
                  "typeName": {
                    "id": 67852,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67851,
                      "name": "IBLSApkRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70280,
                      "src": "4143:15:99"
                    },
                    "referencedDeclaration": 70280,
                    "src": "4143:15:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBLSApkRegistry_$70280",
                      "typeString": "contract IBLSApkRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67856,
                  "mutability": "mutable",
                  "name": "_indexRegistry",
                  "nameLocation": "4199:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 67876,
                  "src": "4184:29:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                    "typeString": "contract IIndexRegistry"
                  },
                  "typeName": {
                    "id": 67855,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67854,
                      "name": "IIndexRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70489,
                      "src": "4184:14:99"
                    },
                    "referencedDeclaration": 70489,
                    "src": "4184:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIndexRegistry_$70489",
                      "typeString": "contract IIndexRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4053:166:99"
            },
            "returnParameters": {
              "id": 67858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4220:0:99"
            },
            "scope": 67881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67880,
            "nodeType": "VariableDeclaration",
            "src": "4484:25:99",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__GAP",
            "nameLocation": "4504:5:99",
            "scope": 67881,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$41_storage",
              "typeString": "uint256[41]"
            },
            "typeName": {
              "baseType": {
                "id": 67877,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4484:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 67879,
              "length": {
                "hexValue": "3431",
                "id": 67878,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4492:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_41_by_1",
                  "typeString": "int_const 41"
                },
                "value": "41"
              },
              "nodeType": "ArrayTypeName",
              "src": "4484:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$41_storage_ptr",
                "typeString": "uint256[41]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 67745,
              "name": "IRegistryCoordinator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70745,
              "src": "448:20:99"
            },
            "id": 67746,
            "nodeType": "InheritanceSpecifier",
            "src": "448:20:99"
          }
        ],
        "canonicalName": "RegistryCoordinatorStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          67881,
          70745
        ],
        "name": "RegistryCoordinatorStorage",
        "nameLocation": "418:26:99",
        "scope": 67882,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 99
}